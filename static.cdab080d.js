(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(typeof self !== 'undefined' ? self : this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "https://docs.iotajapan.com/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 42);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = require("prop-types");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = require("classnames");

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ContentMenuItemsPropTypes = exports.ProjectsPropTypes = exports.ViewDataPropTypes = exports.FooterDataPropTypes = exports.HomeDataPropTypes = undefined;

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var HomeDataPropTypes = exports.HomeDataPropTypes = _propTypes2.default.shape({
    headerTopLinks: _propTypes2.default.arrayOf(_propTypes2.default.shape({
        href: _propTypes2.default.string.isRequired,
        name: _propTypes2.default.string.isRequired
    })).isRequired,
    popularTopics: _propTypes2.default.arrayOf(_propTypes2.default.shape({
        query: _propTypes2.default.string.isRequired,
        name: _propTypes2.default.string.isRequired
    })),
    cards: _propTypes2.default.arrayOf(_propTypes2.default.shape({
        href: _propTypes2.default.string.isRequired,
        image: _propTypes2.default.string.isRequired,
        name: _propTypes2.default.string.isRequired
    })).isRequired
});

var FooterDataPropTypes = exports.FooterDataPropTypes = _propTypes2.default.shape({
    footerDocsSectionTitle: _propTypes2.default.string.isRequired,
    footerSections: _propTypes2.default.arrayOf(_propTypes2.default.shape({
        heading: _propTypes2.default.string.isRequired,
        links: _propTypes2.default.arrayOf(_propTypes2.default.shape({
            link: _propTypes2.default.string.isRequired,
            name: _propTypes2.default.string.isRequired
        })).isRequired
    })).isRequired,
    footerStaticContent: _propTypes2.default.shape({
        address: _propTypes2.default.arrayOf(_propTypes2.default.string).isRequired,
        legal: _propTypes2.default.arrayOf(_propTypes2.default.string).isRequired,
        copyright: _propTypes2.default.arrayOf(_propTypes2.default.string).isRequired
    })
});

var ViewDataPropTypes = exports.ViewDataPropTypes = _propTypes2.default.shape({
    siteName: _propTypes2.default.string.isRequired,
    enableFeedback: _propTypes2.default.bool,
    enableSignup: _propTypes2.default.bool,
    disableSearch: _propTypes2.default.bool
});

var ProjectsPropTypes = exports.ProjectsPropTypes = _propTypes2.default.arrayOf(_propTypes2.default.shape({
    name: _propTypes2.default.string.isRequired,
    folder: _propTypes2.default.string.isRequired,
    home: _propTypes2.default.shape({
        description: _propTypes2.default.string.isRequired,
        links: _propTypes2.default.arrayOf(_propTypes2.default.shape({
            name: _propTypes2.default.string.isRequired,
            link: _propTypes2.default.string.isRequired,
            description: _propTypes2.default.string.isRequired
        })).isRequired
    }),
    versions: _propTypes2.default.arrayOf(_propTypes2.default.shape({
        version: _propTypes2.default.string.isRequired,
        pages: _propTypes2.default.arrayOf(_propTypes2.default.shape({
            name: _propTypes2.default.string.isRequired,
            link: _propTypes2.default.string.isRequired,
            toc: _propTypes2.default.arrayOf(_propTypes2.default.shape({
                level: _propTypes2.default.number.isRequired,
                name: _propTypes2.default.string.isRequired
            }))
        })).isRequired
    })).isRequired
}));

var ContentMenuItemsPropTypes = exports.ContentMenuItemsPropTypes = _propTypes2.default.arrayOf(_propTypes2.default.shape({
    name: _propTypes2.default.string.isRequired,
    folder: _propTypes2.default.string,
    link: _propTypes2.default.string.isRequired
}));

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = require("react-router-prop-types");

/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = require("react-static");

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = __webpack_require__(2);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Text = __webpack_require__(12);

var _Text2 = _interopRequireDefault(_Text);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Link = function (_React$PureComponent) {
    _inherits(Link, _React$PureComponent);

    function Link() {
        _classCallCheck(this, Link);

        return _possibleConstructorReturn(this, (Link.__proto__ || Object.getPrototypeOf(Link)).apply(this, arguments));
    }

    _createClass(Link, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'a',
                {
                    id: this.props.id,
                    target: this.props.target,
                    href: this.props.href,
                    rel: this.props.target === '_blank' ? 'noopener noreferrer' : undefined,
                    className: (0, _classnames2.default)('link', this.props.className, { 'disabled': this.props.disabled })
                },
                this.props.children || _react2.default.createElement(
                    _Text2.default,
                    null,
                    this.props.text
                )
            );
        }
    }]);

    return Link;
}(_react2.default.PureComponent);

Link.propTypes = {
    id: _propTypes2.default.string,
    href: _propTypes2.default.string,
    target: _propTypes2.default.string,
    text: _propTypes2.default.string,
    className: _propTypes2.default.string,
    children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),
    disabled: _propTypes2.default.bool
};
exports.default = Link;

/***/ }),
/* 7 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getPreviousPage = exports.getNextPage = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.parseProjectUrl = parseProjectUrl;
exports.combineProjectUrl = combineProjectUrl;
exports.createPageTableOfContents = createPageTableOfContents;
exports.createProjectLinks = createProjectLinks;
exports.createProjectTopics = createProjectTopics;
exports.createSideMenuEntries = createSideMenuEntries;
exports.buildItemTree = buildItemTree;
exports.lookupProject = lookupProject;
exports.getVersionsUrl = getVersionsUrl;
exports.getLatestVersion = getLatestVersion;
exports.getProjectTitle = getProjectTitle;
exports.getDocumentTitle = getDocumentTitle;
exports.getProjectVersionPagesUrl = getProjectVersionPagesUrl;
exports.getProjectVersionPages = getProjectVersionPages;
exports.getPage = getPage;
exports.replaceVersion = replaceVersion;

var _paths = __webpack_require__(21);

function parseProjectUrl(projectFullURL) {
    ///docs/hub/2.0/something/something/something

    var urlParts = projectFullURL.split('/');
    var projectFolder = urlParts[2];
    var projectVersion = urlParts[3];
    var projectDocParts = urlParts.slice(4);
    var projectDoc = projectDocParts.join('/');

    return {
        projectFullURL: projectFullURL,
        projectFolder: projectFolder,
        projectVersion: projectVersion,
        projectDocParts: projectDocParts,
        projectDoc: projectDoc,
        projectDocTitle: projectDocParts[projectDocParts.length - 1]
    };
}

function combineProjectUrl(projectParts) {
    ///docs/hub/2.0/something/something/something
    return '/docs/' + projectParts.projectFolder + '/' + projectParts.projectVersion + '/' + projectParts.projectDoc;
}

function createPageTableOfContents(projectUrlParts, projects) {
    var project = lookupProject(projectUrlParts, projects);

    var projectVersionPages = getProjectVersionPages(project, projectUrlParts.projectVersion);
    var toc = [{ name: '序説', link: '#root' }];

    if (projectVersionPages) {
        var currentIndex = projectVersionPages.find(function (indexItem) {
            return indexItem.link === projectUrlParts.projectFullURL;
        });

        if (currentIndex && currentIndex.toc) {
            toc = toc.concat(currentIndex.toc.filter(function (item) {
                return item.level > 1;
            }).map(function (item) {
                return { name: item.name, link: '#' + (0, _paths.sanitizeHashId)(item.name, false, true), level: item.level };
            }));
        }
    }

    return toc;
}

function createProjectLinks(projects) {
    var menuEntries = [];

    for (var i = 0; i < projects.length; i++) {
        if (projects[i].home) {
            var latestVersion = getLatestVersion(projects[i]);
            var projectVersionPages = getProjectVersionPages(projects[i], latestVersion);

            var me = {
                folder: projects[i].folder,
                name: projects[i].name,
                link: projectVersionPages[0].link
            };

            menuEntries.push(me);
        }
    }

    return menuEntries;
}

function createProjectTopics(projects) {
    var projectTopics = [];

    for (var i = 0; i < projects.length; i++) {
        if (projects[i].home) {
            projectTopics.push(_extends({ name: projects[i].name }, projects[i].home));
        }
    }

    return projectTopics;
}

function createSideMenuEntries(projects, projectFullURL) {
    var menuEntries = [];

    for (var i = 0; i < projects.length; i++) {
        if (projects[i].home) {
            var latestVersion = getLatestVersion(projects[i]);
            if (latestVersion) {
                var projectVersionPages = getProjectVersionPages(projects[i], latestVersion);
                if (projectVersionPages) {
                    var isChildActive = getPage(projectVersionPages, projectFullURL) !== undefined;
                    menuEntries.push({
                        name: projects[i].name,
                        expanded: isChildActive,
                        selected: isChildActive,
                        items: buildItemTree(projectVersionPages, projectFullURL)
                    });
                }
            }
        }
    }
    return menuEntries;
}

function buildItemTree(projectVersionPages, projectFullURL) {
    var tree = [];
    var inSection = void 0;
    var inSectionSub = void 0;

    for (var i = 0; i < projectVersionPages.length; i++) {
        var nameParts = projectVersionPages[i].name.split('/');
        if (nameParts.length === 1) {
            tree.push({
                type: 'section-link',
                link: projectVersionPages[i].link,
                name: projectVersionPages[i].name,
                selected: projectVersionPages[i].link === projectFullURL
            });
            inSection = undefined;
            inSectionSub = undefined;
        } else {
            var currentSection = inSection ? inSection.name : '';
            if (nameParts[0] !== currentSection) {
                inSection = {
                    type: 'section-header',
                    name: nameParts[0],
                    items: [],
                    expanded: false
                };
                tree.push(inSection);
                inSectionSub = undefined;
            }
            if (projectVersionPages[i].link === projectFullURL) {
                inSection.selected = true;
            }

            if (nameParts.length === 2) {
                inSection.items.push({
                    type: 'section-header-item',
                    name: nameParts.slice(1).join('/'),
                    link: projectVersionPages[i].link,
                    selected: projectVersionPages[i].link === projectFullURL
                });
            } else {
                var currentSectionSub = inSectionSub ? inSectionSub.name : '';
                if (nameParts[1] !== currentSectionSub) {
                    inSectionSub = {
                        type: 'section-header-sub',
                        name: nameParts[1],
                        items: [],
                        expanded: false
                    };
                    inSection.items.push(inSectionSub);
                }
                if (projectVersionPages[i].link === projectFullURL) {
                    inSectionSub.selected = true;
                }
                inSectionSub.items.push({
                    name: nameParts.slice(2).join('/'),
                    link: projectVersionPages[i].link,
                    selected: projectVersionPages[i].link === projectFullURL
                });
            }
        }
    }

    return tree;
}

function lookupProject(projectUrlParts, projects) {
    return projects.find(function (p) {
        return p.folder === projectUrlParts.projectFolder;
    });
}

function getVersionsUrl(projectUrlParts, projects) {
    var project = lookupProject(projectUrlParts, projects);
    return project && project.versions ? project.versions.map(function (pv) {
        return pv.version;
    }) : [];
}

function getLatestVersion(project) {
    return project && project.versions && project.versions.length > 0 ? project.versions[project.versions.length - 1].version : '';
}

function getProjectTitle(projectUrlParts, projects) {
    var project = lookupProject(projectUrlParts, projects);

    return project ? project.name : projectUrlParts.projectFolder;
}

function getDocumentTitle(projectUrlParts, projects) {
    var project = lookupProject(projectUrlParts, projects);

    var projectVersionPages = getProjectVersionPages(project, projectUrlParts.projectVersion);
    var indexItem = getPage(projectVersionPages, projectUrlParts.projectFullURL);
    var docTitle = void 0;
    if (indexItem) {
        if (indexItem.toc) {
            var h1 = indexItem.toc.find(function (docHeader) {
                return docHeader.level === 1;
            });
            if (h1) {
                docTitle = h1.name;
            }
        }
    }
    if (!docTitle) {
        docTitle = projectUrlParts.projectDocTitle;
    }
    return docTitle;
}

function getProjectVersionPagesUrl(projectPartsUrlPart, projectVersion, projects) {
    return getProjectVersionPages(lookupProject(projectPartsUrlPart, projects), projectVersion);
}

function getProjectVersionPages(project, projectVersion) {
    if (project && project.versions) {
        var version = project.versions.find(function (pv) {
            return pv.version === projectVersion;
        });

        if (version) {
            return version.pages;
        }
    }
}

function getPage(versionPages, itemUrl) {
    return versionPages ? versionPages.find(function (indexItem) {
        return indexItem.link === itemUrl;
    }) : undefined;
}

function replaceVersion(projectUrlParts, newVersion, projects) {
    var project = lookupProject(projectUrlParts, projects);

    var projectVersionPages = getProjectVersionPages(project, newVersion);
    if (projectVersionPages) {
        var newUrl = combineProjectUrl(projectUrlParts);

        // If there is not an equivalent document in the new version of the documentation
        // the just return the first page for the new version
        var foundIndex = projectVersionPages.findIndex(function (indexItem) {
            return indexItem.link === newUrl;
        });
        if (foundIndex >= 0) {
            return newUrl;
        } else {
            return projectVersionPages[0].link;
        }
    }
}

var getNextPage = exports.getNextPage = function getNextPage(projectUrlParts, projects) {
    var nextPage = void 0;
    var project = lookupProject(projectUrlParts, projects);

    var projectVersionPages = getProjectVersionPages(project, projectUrlParts.projectVersion);
    if (projectVersionPages) {
        var currentIndex = projectVersionPages.findIndex(function (indexItem) {
            return indexItem.link === projectUrlParts.projectFullURL;
        });
        if (currentIndex >= 0 && currentIndex < projectVersionPages.length) {
            nextPage = projectVersionPages[currentIndex + 1];
        }
    }

    // We exhausted the pages in the current project, so we need to find the next project
    if (!nextPage) {
        var projectIndex = projects.findIndex(function (p) {
            return p.folder === projectUrlParts.projectFolder;
        });
        projectIndex++;
        if (projectIndex === projects.length) {
            projectIndex = 0;
        }

        // Skip any that don't have home page content
        while (!projects[projectIndex].home) {
            projectIndex++;
            if (projectIndex === projects.length) {
                projectIndex = 0;
            }
        }

        var latestVersion = getLatestVersion(projects[projectIndex]);
        var _projectVersionPages = getProjectVersionPages(projects[projectIndex], latestVersion);

        nextPage = _projectVersionPages[0];
    }

    return nextPage;
};

var getPreviousPage = exports.getPreviousPage = function getPreviousPage(projectUrlParts, projects) {
    var prevPage = void 0;
    var project = lookupProject(projectUrlParts, projects);

    var projectVersionPages = getProjectVersionPages(project, projectUrlParts.projectVersion);
    if (projectVersionPages) {
        var currentIndex = projectVersionPages.findIndex(function (indexItem) {
            return indexItem.link === projectUrlParts.projectFullURL;
        });
        if (currentIndex > 0) {
            prevPage = projectVersionPages[currentIndex - 1];
        }
    }

    // We exhausted the pages in the current project, so we need to find the previous project
    if (!prevPage) {
        var projectIndex = projects.findIndex(function (p) {
            return p.folder === projectUrlParts.projectFolder;
        });
        projectIndex--;
        if (projectIndex < 0) {
            projectIndex = projects.length - 1;
        }

        // Skip any that don't have home page content
        while (!projects[projectIndex].home) {
            projectIndex--;
            if (projectIndex < 0) {
                projectIndex = projects.length - 1;
            }
        }

        var latestVersion = getLatestVersion(projects[projectIndex]);
        var _projectVersionPages2 = getProjectVersionPages(projects[projectIndex], latestVersion);

        prevPage = _projectVersionPages2[_projectVersionPages2.length - 1];
    }

    return prevPage;
};

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.feed = exports.submitEmail = exports.submitMissing = exports.submitFeedback = undefined;

var _regenerator = __webpack_require__(19);

var _regenerator2 = _interopRequireDefault(_regenerator);

var sendRequest = function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee(apiEndpoint, endpoint, method) {
        var data = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
        var response;
        return _regenerator2.default.wrap(function _callee$(_context) {
            while (1) {
                switch (_context.prev = _context.next) {
                    case 0:
                        _context.next = 2;
                        return (0, _axios2.default)({
                            method: method,
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            url: apiEndpoint + '/' + endpoint,
                            data: data
                        });

                    case 2:
                        response = _context.sent;
                        return _context.abrupt('return', response ? response.data : null);

                    case 4:
                    case 'end':
                        return _context.stop();
                }
            }
        }, _callee, this);
    }));

    return function sendRequest(_x, _x2, _x3) {
        return _ref.apply(this, arguments);
    };
}();

var submitFeedback = exports.submitFeedback = function () {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee2(apiEndpoint, document, data) {
        return _regenerator2.default.wrap(function _callee2$(_context2) {
            while (1) {
                switch (_context2.prev = _context2.next) {
                    case 0:
                        _context2.prev = 0;
                        _context2.next = 3;
                        return sendRequest(apiEndpoint, 'feedback', 'POST', { document: document, wasItUseful: data.wasItUseful, comments: data.comments });

                    case 3:
                        return _context2.abrupt('return', _context2.sent);

                    case 6:
                        _context2.prev = 6;
                        _context2.t0 = _context2['catch'](0);

                        // eslint-disable-next-line no-console
                        console.error(_context2.t0);

                        return _context2.abrupt('return', {
                            success: false,
                            message: 'Failed to submit feedback.'
                        });

                    case 10:
                    case 'end':
                        return _context2.stop();
                }
            }
        }, _callee2, this, [[0, 6]]);
    }));

    return function submitFeedback(_x5, _x6, _x7) {
        return _ref2.apply(this, arguments);
    };
}();

var submitMissing = exports.submitMissing = function () {
    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee3(apiEndpoint, document, fromDocument) {
        return _regenerator2.default.wrap(function _callee3$(_context3) {
            while (1) {
                switch (_context3.prev = _context3.next) {
                    case 0:
                        _context3.prev = 0;
                        _context3.next = 3;
                        return sendRequest(apiEndpoint, 'missing', 'POST', { document: document, fromDocument: fromDocument });

                    case 3:
                        return _context3.abrupt('return', _context3.sent);

                    case 6:
                        _context3.prev = 6;
                        _context3.t0 = _context3['catch'](0);

                        // eslint-disable-next-line no-console
                        console.error(_context3.t0);

                        return _context3.abrupt('return', {
                            success: false,
                            message: 'Failed to submit missing.'
                        });

                    case 10:
                    case 'end':
                        return _context3.stop();
                }
            }
        }, _callee3, this, [[0, 6]]);
    }));

    return function submitMissing(_x8, _x9, _x10) {
        return _ref3.apply(this, arguments);
    };
}();

var submitEmail = exports.submitEmail = function () {
    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee4(apiEndpoint, email) {
        return _regenerator2.default.wrap(function _callee4$(_context4) {
            while (1) {
                switch (_context4.prev = _context4.next) {
                    case 0:
                        _context4.prev = 0;
                        _context4.next = 3;
                        return sendRequest(apiEndpoint, 'email', 'POST', { email: email });

                    case 3:
                        return _context4.abrupt('return', _context4.sent);

                    case 6:
                        _context4.prev = 6;
                        _context4.t0 = _context4['catch'](0);

                        // eslint-disable-next-line no-console
                        console.error(_context4.t0);

                        return _context4.abrupt('return', {
                            success: false,
                            message: 'Failed to submit email.'
                        });

                    case 10:
                    case 'end':
                        return _context4.stop();
                }
            }
        }, _callee4, this, [[0, 6]]);
    }));

    return function submitEmail(_x11, _x12) {
        return _ref4.apply(this, arguments);
    };
}();

var feed = exports.feed = function () {
    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee5(apiEndpoint, context, page, pageSize) {
        return _regenerator2.default.wrap(function _callee5$(_context5) {
            while (1) {
                switch (_context5.prev = _context5.next) {
                    case 0:
                        _context5.prev = 0;
                        _context5.next = 3;
                        return sendRequest(apiEndpoint, 'feed/' + context + '?page=' + page + '&pageSize=' + pageSize, 'GET');

                    case 3:
                        return _context5.abrupt('return', _context5.sent);

                    case 6:
                        _context5.prev = 6;
                        _context5.t0 = _context5['catch'](0);

                        // eslint-disable-next-line no-console
                        console.error(_context5.t0);

                        return _context5.abrupt('return', {
                            success: false,
                            message: 'Failed to retreive feed.'
                        });

                    case 10:
                    case 'end':
                        return _context5.stop();
                }
            }
        }, _callee5, this, [[0, 6]]);
    }));

    return function feed(_x13, _x14, _x15, _x16) {
        return _ref5.apply(this, arguments);
    };
}();

var _axios = __webpack_require__(61);

var _axios2 = _interopRequireDefault(_axios);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.initCorpusIndex = exports.extractHighlights = exports.constructHighlights = exports.extractSearchQuery = exports.constructSearchQuery = exports.performSearch = undefined;

var _qs = __webpack_require__(34);

var _qs2 = _interopRequireDefault(_qs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var QUERY_PARAM_NAME = 'q';
var QUERY_PARAM_HIGHLIGHTS = 'highlights';

var performSearch = exports.performSearch = function performSearch(history, query) {
    history.push('/search?' + constructSearchQuery(query));
};

var constructSearchQuery = exports.constructSearchQuery = function constructSearchQuery(query) {
    return QUERY_PARAM_NAME + '=' + query.trim();
};

var extractSearchQuery = exports.extractSearchQuery = function extractSearchQuery(location) {
    var params = _qs2.default.parse(location.search, { ignoreQueryPrefix: true });
    return params && params[QUERY_PARAM_NAME] ? params[QUERY_PARAM_NAME] : '';
};

var constructHighlights = exports.constructHighlights = function constructHighlights(highlights) {
    return QUERY_PARAM_HIGHLIGHTS + '=' + highlights.join(';');
};

var extractHighlights = exports.extractHighlights = function extractHighlights(location) {
    var params = _qs2.default.parse(location.search, { ignoreQueryPrefix: true });
    return params && params[QUERY_PARAM_HIGHLIGHTS] ? params[QUERY_PARAM_HIGHLIGHTS].split(';') : [];
};

var initCorpusIndex = exports.initCorpusIndex = function initCorpusIndex() {
    var corpus = __webpack_require__(95);
    var index = __webpack_require__(96);

    var documents = corpus.reduce(function (memo, doc) {
        memo[doc.id] = doc;
        return memo;
    }, {});

    return {
        documents: documents,
        index: index
    };
};

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = __webpack_require__(2);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Heading = function (_React$PureComponent) {
    _inherits(Heading, _React$PureComponent);

    function Heading() {
        _classCallCheck(this, Heading);

        return _possibleConstructorReturn(this, (Heading.__proto__ || Object.getPrototypeOf(Heading)).apply(this, arguments));
    }

    _createClass(Heading, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement('h' + this.props.level, {
                className: (0, _classnames2.default)('heading', this.props.className),
                id: this.props.id
            }, this.props.children || this.props.text);
        }
    }]);

    return Heading;
}(_react2.default.PureComponent);

Heading.propTypes = {
    level: _propTypes2.default.number,
    children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),
    text: _propTypes2.default.string,
    className: _propTypes2.default.string,
    id: _propTypes2.default.string
};
Heading.defaultProps = {
    level: 1
};
exports.default = Heading;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = __webpack_require__(2);

var _classnames2 = _interopRequireDefault(_classnames);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Text = function (_React$PureComponent) {
    _inherits(Text, _React$PureComponent);

    function Text() {
        _classCallCheck(this, Text);

        return _possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).apply(this, arguments));
    }

    _createClass(Text, [{
        key: 'render',
        value: function render() {
            if (this.props.html) {
                return _react2.default.createElement('span', { className: (0, _classnames2.default)('text', this.props.className), dangerouslySetInnerHTML: { __html: this.props.children } });
            }

            return _react2.default.createElement(
                'span',
                { className: (0, _classnames2.default)('text', this.props.className) },
                this.props.children
            );
        }
    }]);

    return Text;
}(_react2.default.PureComponent);

Text.propTypes = {
    children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),
    className: _propTypes2.default.string,
    html: _propTypes2.default.bool
};
exports.default = Text;

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = __webpack_require__(2);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Link = __webpack_require__(6);

var _Link2 = _interopRequireDefault(_Link);

var _projects = __webpack_require__(8);

var _propTypes3 = __webpack_require__(3);

var _ClickOutside = __webpack_require__(37);

var _ClickOutside2 = _interopRequireDefault(_ClickOutside);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SideMenu = function (_React$Component) {
    _inherits(SideMenu, _React$Component);

    function SideMenu(props) {
        _classCallCheck(this, SideMenu);

        var _this = _possibleConstructorReturn(this, (SideMenu.__proto__ || Object.getPrototypeOf(SideMenu)).call(this, props));

        _this.state = {
            menuData: [],
            expanded: undefined
        };

        _this.handleHeadingClick = _this.handleHeadingClick.bind(_this);
        _this.handleCloseClick = _this.handleCloseClick.bind(_this);
        _this.keydown = _this.keydown.bind(_this);
        return _this;
    }

    _createClass(SideMenu, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            document.addEventListener('keydown', this.keydown, false);

            this.setState({
                menuData: (0, _projects.createSideMenuEntries)(this.props.projects, this.props.highlightedItem)
            });
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps) {
            if (this.props.highlightedItem !== prevProps.highlightedItem) {
                this.setState({
                    menuData: (0, _projects.createSideMenuEntries)(this.props.projects, this.props.highlightedItem)
                });
            }
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            document.body.classList.toggle('no-scroll', nextProps.isMenuOpen);
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            document.removeEventListener('keydown', this.keydown, false);
        }
    }, {
        key: 'handleHeadingClick',
        value: function handleHeadingClick(index) {
            this.setState(function (state) {
                return {
                    menuData: state.menuData.map(function (item, ind) {
                        return ind == index ? _extends({}, item, { expanded: !item.expanded }) : _extends({}, item, { expanded: false });
                    })
                };
            });
        }
    }, {
        key: 'handleCloseClick',
        value: function handleCloseClick() {
            if (this.props.isMenuOpen && this.props.onCloseClick) {
                document.body.classList.toggle('no-scroll', false);
                this.props.onCloseClick();
            }
        }
    }, {
        key: 'keydown',
        value: function keydown(event) {
            if (event.keyCode === 27 && this.props.isMenuOpen) {
                this.props.onCloseClick();
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            return _react2.default.createElement(
                _ClickOutside2.default,
                { onClickOutside: this.handleCloseClick },
                _react2.default.createElement(
                    'section',
                    { className: (0, _classnames2.default)('side-menu', { 'side-menu__shown': this.props.isMenuOpen }, { 'side-menu__hidden': !this.props.isMenuOpen }) },
                    _react2.default.createElement(
                        'h4',
                        { className: 'side-menu__caption' },
                        _react2.default.createElement(
                            'span',
                            null,
                            '\u30CA\u30D3\u30B2\u30FC\u30B7\u30E7\u30F3'
                        ),
                        _react2.default.createElement('button', { className: 'side-menu__close', onClick: this.handleCloseClick })
                    ),
                    this.state.menuData.map(function (menuItem, index) {
                        return _react2.default.createElement(
                            'section',
                            { key: index,
                                className: (0, _classnames2.default)('side-menu__group', { 'side-menu__group--expanded': menuItem.expanded }, { 'side-menu__group--selected': menuItem.selected }) },
                            _react2.default.createElement(
                                'h5',
                                { className: 'side-menu__heading', onClick: function onClick() {
                                        return _this2.handleHeadingClick(index);
                                    } },
                                _react2.default.createElement(
                                    'span',
                                    null,
                                    menuItem.name
                                )
                            ),
                            _react2.default.createElement(
                                'ul',
                                { className: 'side-menu__list' },
                                menuItem.items.map(function (menuListItem, miIndex) {
                                    return _react2.default.createElement(
                                        _react2.default.Fragment,
                                        { key: miIndex },
                                        menuListItem.type === 'section-link' && _react2.default.createElement(
                                            'li',
                                            { className: (0, _classnames2.default)('side-menu-item', { 'side-menu-item--active': menuListItem.selected }) },
                                            _react2.default.createElement(
                                                _Link2.default,
                                                { href: menuListItem.link,
                                                    target: menuListItem.link.startsWith('http') ? '_blank' : undefined,
                                                    className: (0, _classnames2.default)({ 'side-menu-item--active': menuListItem.selected }) },
                                                menuListItem.name
                                            )
                                        ),
                                        menuListItem.type === 'section-header' && _react2.default.createElement(
                                            'div',
                                            { className: 'side-menu__sub-list' },
                                            _react2.default.createElement(
                                                'div',
                                                { className: 'side-menu-item__header' },
                                                menuListItem.name
                                            ),
                                            _react2.default.createElement(
                                                'ul',
                                                null,
                                                menuListItem.items.map(function (subItem, idx) {
                                                    return _react2.default.createElement(
                                                        _react2.default.Fragment,
                                                        { key: idx },
                                                        _react2.default.createElement(
                                                            'li',
                                                            { className: (0, _classnames2.default)('side-menu-item', { 'side-menu-item--active': subItem.selected }) },
                                                            subItem.type === 'section-header-item' && _react2.default.createElement(
                                                                _Link2.default,
                                                                {
                                                                    href: subItem.link,
                                                                    target: subItem.link.startsWith('http') ? '_blank' : undefined,
                                                                    className: (0, _classnames2.default)({ 'side-menu-item--active': subItem.selected }) },
                                                                subItem.name
                                                            ),
                                                            subItem.type === 'section-header-sub' && _react2.default.createElement(
                                                                _react2.default.Fragment,
                                                                null,
                                                                _react2.default.createElement(
                                                                    'a',
                                                                    { onClick: function onClick() {
                                                                            return _this2.setState({ expanded: subItem });
                                                                        } },
                                                                    subItem.name,
                                                                    _react2.default.createElement(
                                                                        'span',
                                                                        { className: 'side-menu__item-superscript' },
                                                                        subItem.items.length > 1 ? ' [' + subItem.items.length + ']' : ''
                                                                    )
                                                                ),
                                                                (subItem.selected || subItem === _this2.state.expanded) && _react2.default.createElement(
                                                                    'ul',
                                                                    { className: 'side-menu-item-sub' },
                                                                    subItem.items.map(function (child, idx3) {
                                                                        return _react2.default.createElement(
                                                                            'li',
                                                                            { key: idx3,
                                                                                className: (0, _classnames2.default)('side-menu-item-sub-child', { 'side-menu-item-sub-child--active': child.selected })
                                                                            },
                                                                            _react2.default.createElement(
                                                                                _Link2.default,
                                                                                { href: child.link, target: child.link.startsWith('http') ? '_blank' : undefined },
                                                                                child.name
                                                                            )
                                                                        );
                                                                    })
                                                                )
                                                            ),
                                                            '                                                            '
                                                        )
                                                    );
                                                })
                                            )
                                        )
                                    );
                                })
                            )
                        );
                    })
                )
            );
        }
    }]);

    return SideMenu;
}(_react2.default.Component);

SideMenu.propTypes = {
    projects: _propTypes3.ProjectsPropTypes.isRequired,
    onCloseClick: _propTypes2.default.func,
    isMenuOpen: _propTypes2.default.bool,
    highlightedItem: _propTypes2.default.string
};
exports.default = SideMenu;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.localStorageSet = localStorageSet;
exports.localStorageGet = localStorageGet;
/**
     * Store something in the local storage.
     * @param name The name of the item to store.
     * @param data The name of the item to store.
     * @returns Nothing.
     */
function localStorageSet(name, data) {
    try {
        if (window.localStorage) {
            window.localStorage.setItem(name, JSON.stringify(data));
            return true;
        } else {
            return false;
        }
    } catch (err) {
        return false;
    }
}

/**
 * Retrieve something from the local storage.
 * @param name The name of the item to store.
 * @returns The data or undefined if it does not exist.
 */
function localStorageGet(name) {
    try {
        if (window.localStorage) {
            var data = window.localStorage.getItem(name);
            if (data) {
                return JSON.parse(data);
            }
        }
    } catch (err) {
        return undefined;
    }
}

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouterPropTypes = __webpack_require__(4);

var _reactRouterPropTypes2 = _interopRequireDefault(_reactRouterPropTypes);

var _Footer = __webpack_require__(97);

var _Footer2 = _interopRequireDefault(_Footer);

var _propTypes3 = __webpack_require__(3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Container = function (_React$PureComponent) {
    _inherits(Container, _React$PureComponent);

    function Container() {
        _classCallCheck(this, Container);

        return _possibleConstructorReturn(this, (Container.__proto__ || Object.getPrototypeOf(Container)).apply(this, arguments));
    }

    _createClass(Container, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                _react2.default.Fragment,
                null,
                this.props.children,
                _react2.default.createElement(_Footer2.default, { projects: this.props.projects, history: this.props.history, location: this.props.location, footerData: this.props.footerData })
            );
        }
    }]);

    return Container;
}(_react2.default.PureComponent);

Container.propTypes = {
    children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),
    projects: _propTypes3.ProjectsPropTypes.isRequired,
    history: _reactRouterPropTypes2.default.history,
    location: _reactRouterPropTypes2.default.location,
    footerData: _propTypes3.FooterDataPropTypes.isRequired
};
exports.default = Container;

/***/ }),
/* 16 */
/***/ (function(module, exports) {

module.exports = require("react-dom");

/***/ }),
/* 17 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactDom = __webpack_require__(16);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactStyleProptype = __webpack_require__(26);

var _reactStyleProptype2 = _interopRequireDefault(_reactStyleProptype);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BottomSticky = function (_React$PureComponent) {
    _inherits(BottomSticky, _React$PureComponent);

    function BottomSticky() {
        _classCallCheck(this, BottomSticky);

        return _possibleConstructorReturn(this, (BottomSticky.__proto__ || Object.getPrototypeOf(BottomSticky)).apply(this, arguments));
    }

    _createClass(BottomSticky, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            this.handleBottomStop = this.handleBottomStop.bind(this);

            document.addEventListener('scroll', this.handleBottomStop);
            window.addEventListener('resize', this.handleBottomStop);

            // We must set the initial position on next redraw cycle
            // otherwise the component gets the initial position
            // wrong based on the parent bottom until first scroll
            setTimeout(function () {
                return _this2.handleBottomStop();
            }, 0);
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            document.removeEventListener('scroll', this.handleBottomStop);
            window.removeEventListener('resize', this.handleBottomStop);
        }
    }, {
        key: 'handleBottomStop',
        value: function handleBottomStop() {
            var thisDom = _reactDom2.default.findDOMNode(this);
            var parentDom = thisDom.parentNode;

            var parentRect = parentDom.getBoundingClientRect();

            if (window.innerHeight - parentRect.bottom > 0) {
                thisDom.style.bottom = Math.abs(window.innerHeight - parentRect.bottom) + this.props.bottomOffset + 'px';
            } else {
                thisDom.style.bottom = this.props.bottomOffset + 'px';
            }

            thisDom.style.opacity = 1;
        }
    }, {
        key: 'render',
        value: function render() {
            var style = _extends({}, this.props.styles, {
                position: 'fixed',
                opacity: 0,
                bottom: this.props.bottomOffset + 'px'
            });

            style[this.props.horizontalAlign] = this.props.horizontalOffset;

            if (this.props.zIndex) {
                style.zIndex = this.props.zIndex;
            }

            return _react2.default.createElement(
                'div',
                { style: style },
                this.props.children
            );
        }
    }]);

    return BottomSticky;
}(_react2.default.PureComponent);

BottomSticky.defaultProps = {
    horizontalOffset: 20,
    horizontalAlign: 'left',
    bottomOffset: 20
};
BottomSticky.propTypes = {
    children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),
    horizontalOffset: _propTypes2.default.number.isRequired,
    horizontalAlign: _propTypes2.default.oneOf(['left', 'right']),
    bottomOffset: _propTypes2.default.number.isRequired,
    styles: _reactStyleProptype2.default,
    zIndex: _propTypes2.default.number
};
exports.default = BottomSticky;

/***/ }),
/* 19 */
/***/ (function(module, exports) {

module.exports = require("babel-runtime/regenerator");

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _FeedbackButton = __webpack_require__(62);

var _FeedbackButton2 = _interopRequireDefault(_FeedbackButton);

var _FeedbackForm = __webpack_require__(63);

var _FeedbackForm2 = _interopRequireDefault(_FeedbackForm);

var _FeedbackOverlay = __webpack_require__(64);

var _FeedbackOverlay2 = _interopRequireDefault(_FeedbackOverlay);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Feedback = function (_React$Component) {
    _inherits(Feedback, _React$Component);

    function Feedback(props) {
        _classCallCheck(this, Feedback);

        var _this = _possibleConstructorReturn(this, (Feedback.__proto__ || Object.getPrototypeOf(Feedback)).call(this, props));

        _this.state = {
            isExpanded: false,
            wasItUseful: undefined,
            showButtonContent: true,
            showForm: false
        };

        _this.handleOnExpand = _this.handleOnExpand.bind(_this);
        _this.handleOnSubmit = _this.handleOnSubmit.bind(_this);
        return _this;
    }

    _createClass(Feedback, [{
        key: 'handleOnExpand',
        value: function handleOnExpand(expand) {
            var _this2 = this;

            this.setState({ isExpanded: expand }, function () {
                if (expand) {
                    // Hide the button content immediately
                    _this2.setState({ showButtonContent: false });
                    setTimeout(function () {
                        _this2.setState({ showForm: true });
                        // Wait for animation completion before hiding scroll
                        document.body.classList.toggle('no-scroll', true);
                    }, 200);
                } else {
                    // Hide form straight away
                    _this2.setState({ showForm: false }, function () {
                        // Wait for collapse animation to complete before showing button content
                        setTimeout(function () {
                            _this2.setState({ showButtonContent: true });
                            // Wait for animation completion before showing scroll
                            document.body.classList.toggle('no-scroll', false);
                        }, 500);
                    });
                }
            });
        }
    }, {
        key: 'handleOnSubmit',
        value: function handleOnSubmit(e) {
            this.setState({ wasItUseful: e.wasItUseful });
            var onSubmit = this.props.onSubmit;

            if (onSubmit) {
                onSubmit(e);
            }
            this.handleOnExpand(false);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            return _react2.default.createElement(
                _react2.default.Fragment,
                null,
                _react2.default.createElement(_FeedbackButton2.default, {
                    onClick: function onClick() {
                        return _this3.handleOnExpand(true);
                    },
                    isExpanded: this.state.isExpanded,
                    showButtonContent: this.state.showButtonContent,
                    wasItUseful: this.state.wasItUseful }),
                _react2.default.createElement(
                    _FeedbackOverlay2.default,
                    { isExpanded: this.state.showForm },
                    this.state.showForm && _react2.default.createElement(_FeedbackForm2.default, { onClose: function onClose() {
                            return _this3.handleOnExpand(false);
                        }, onSubmit: this.handleOnSubmit })
                )
            );
        }
    }]);

    return Feedback;
}(_react2.default.Component);

Feedback.propTypes = {
    onSubmit: _propTypes2.default.func
};
exports.default = Feedback;

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.sanitizeHashId = sanitizeHashId;
function sanitizeHashId(id, skipLowerCase, isForAnchor) {
    // make lower case
    // de-escape spaces
    // replace spaces with hyphens
    if (!id) {
        return id;
    }
    if (!skipLowerCase) {
        id = id.toLowerCase();
    }
    if (isForAnchor) {
        id = id.replace(/\./g, '');
    }
    return id.replace(/\\ /g, ' ').replace(/\?/g, '').replace(/'/g, '').replace(/ /g, '-');
}

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var InputSearch = function (_React$Component) {
    _inherits(InputSearch, _React$Component);

    function InputSearch(props) {
        _classCallCheck(this, InputSearch);

        var _this = _possibleConstructorReturn(this, (InputSearch.__proto__ || Object.getPrototypeOf(InputSearch)).call(this, props));

        _this.state = { query: _this.props.query === undefined ? '' : _this.props.query };

        _this.handleInputChange = _this.handleInputChange.bind(_this);
        _this.reset = _this.reset.bind(_this);
        _this.handleKeyChange = _this.handleKeyChange.bind(_this);
        return _this;
    }

    _createClass(InputSearch, [{
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps) {
            if (this.props.query != prevProps.query) {
                this.setState({
                    query: this.props.query === undefined ? '' : this.props.query
                });
            }
        }
    }, {
        key: 'handleKeyChange',
        value: function handleKeyChange(e) {
            this.props.onKeyUp(e);
            if (e.key === 'Enter') {
                if (this.props.onSearch) {
                    this.props.onSearch(this.state.query);
                }
            }
        }
    }, {
        key: 'handleInputChange',
        value: function handleInputChange(_ref) {
            var value = _ref.target.value;

            this.setState({ query: value });
        }
    }, {
        key: 'reset',
        value: function reset() {
            this.setState({ query: '' });
        }
    }, {
        key: 'focus',
        value: function focus() {
            this.searchInput.focus();
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var query = this.state.query;

            return _react2.default.createElement('input', {
                className: this.props.className,
                placeholder: this.props.placeholder,
                type: 'search',
                autoComplete: 'off',
                value: query,
                name: 'query',
                onChange: this.handleInputChange,
                onKeyUp: this.handleKeyChange,
                ref: function ref(input) {
                    _this2.searchInput = input;
                }
            });
        }
    }]);

    return InputSearch;
}(_react2.default.Component);

InputSearch.propTypes = {
    query: _propTypes2.default.string,
    onSearch: _propTypes2.default.func,
    onKeyUp: _propTypes2.default.func,
    className: _propTypes2.default.string,
    placeholder: _propTypes2.default.string
};
exports.default = InputSearch;

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = __webpack_require__(2);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouterPropTypes = __webpack_require__(4);

var _reactRouterPropTypes2 = _interopRequireDefault(_reactRouterPropTypes);

var _reactStatic = __webpack_require__(5);

var _Logo = __webpack_require__(38);

var _Logo2 = _interopRequireDefault(_Logo);

var _search = __webpack_require__(10);

var _InputSearch = __webpack_require__(22);

var _InputSearch2 = _interopRequireDefault(_InputSearch);

var _propTypes3 = __webpack_require__(3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var StickyHeader = function (_React$Component) {
    _inherits(StickyHeader, _React$Component);

    function StickyHeader(props) {
        _classCallCheck(this, StickyHeader);

        var _this = _possibleConstructorReturn(this, (StickyHeader.__proto__ || Object.getPrototypeOf(StickyHeader)).call(this, props));

        _this.state = {
            inputExpanded: false,
            searchResults: []
        };

        _this.inputExpandHandler = _this.inputExpandHandler.bind(_this);
        _this.handleKeyUp = _this.handleKeyUp.bind(_this);
        _this.onSearch = _this.onSearch.bind(_this);
        _this.handleBurgerClick = _this.handleBurgerClick.bind(_this);
        _this.handleCloseClick = _this.handleCloseClick.bind(_this);
        return _this;
    }

    _createClass(StickyHeader, [{
        key: 'handleBurgerClick',
        value: function handleBurgerClick() {
            this.setState({ inputExpanded: false });
            if (this.props.onBurgerClick) {
                this.props.onBurgerClick();
            }
        }
    }, {
        key: 'handleCloseClick',
        value: function handleCloseClick() {
            this.setState({ inputExpanded: false });
        }
    }, {
        key: 'onSearch',
        value: function onSearch(query) {
            (0, _search.performSearch)(this.props.history, query);
        }
    }, {
        key: 'handleKeyUp',
        value: function handleKeyUp(e) {
            if (e.key === 'Escape') {
                this.setState({ inputExpanded: false });
            }
        }
    }, {
        key: 'inputExpandHandler',
        value: function inputExpandHandler() {
            if (!this.state.inputExpanded) {
                this.setState({ inputExpanded: true });
                this.searchInput.focus();
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            return _react2.default.createElement(
                'header',
                { className: (0, _classnames2.default)('sticky-header', { 'sticky-header--expanded': this.state.inputExpanded }) },
                _react2.default.createElement(
                    _reactStatic.Link,
                    { to: '/', exact: true },
                    _react2.default.createElement('img', { className: 'sticky-header__brand', src: _Logo2.default })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'sticky-header__control' },
                    !this.props.viewData.disableSearch && _react2.default.createElement(
                        'div',
                        {
                            onClick: this.inputExpandHandler,
                            className: (0, _classnames2.default)('input-sticky-wrapper', {
                                'input-sticky-wrapper--expanded': this.state.inputExpanded
                            })
                        },
                        _react2.default.createElement(_InputSearch2.default, {
                            ref: function ref(input) {
                                _this2.searchInput = input;
                            },
                            className: 'input-search-sticky',
                            placeholder: 'Search for topics',
                            onKeyUp: this.handleKeyUp,
                            onSearch: this.onSearch
                        }),
                        _react2.default.createElement('button', {
                            className: 'sticky-header__icon-close',
                            onClick: this.handleCloseClick
                        })
                    ),
                    _react2.default.createElement('button', {
                        className: 'sticky-header__icon-burger',
                        onClick: this.handleBurgerClick
                    })
                )
            );
        }
    }]);

    return StickyHeader;
}(_react2.default.Component);

StickyHeader.propTypes = {
    onBurgerClick: _propTypes2.default.func,
    history: _reactRouterPropTypes2.default.history,
    viewData: _propTypes3.ViewDataPropTypes.isRequired
};
exports.default = (0, _reactStatic.withRouter)(StickyHeader);

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cacheProm = exports.loadFromPromiseCache = exports.cacheExport = exports.loadFromCache = exports.callForString = exports.createElement = exports.findExport = exports.resolveExport = exports.requireById = exports.tryRequire = exports.DefaultError = exports.DefaultLoading = exports.babelInterop = exports.isWebpack = exports.isServer = exports.isTest = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var isTest = exports.isTest = "production" === 'test';
var isServer = exports.isServer = !(typeof window !== 'undefined' && window.document && window.document.createElement);

var isWebpack = exports.isWebpack = function isWebpack() {
  return typeof __webpack_require__ !== 'undefined';
};
var babelInterop = exports.babelInterop = function babelInterop(mod) {
  return mod && (typeof mod === 'undefined' ? 'undefined' : _typeof(mod)) === 'object' && mod.__esModule ? mod.default : mod;
};

var DefaultLoading = exports.DefaultLoading = function DefaultLoading() {
  return _react2.default.createElement(
    'div',
    null,
    'Loading...'
  );
};
var DefaultError = exports.DefaultError = function DefaultError(_ref) {
  var error = _ref.error;
  return _react2.default.createElement(
    'div',
    null,
    'Error: ',
    error && error.message
  );
};

var tryRequire = exports.tryRequire = function tryRequire(id) {
  try {
    return requireById(id);
  } catch (err) {
    // warn if there was an error while requiring the chunk during development
    // this can sometimes lead the server to render the loading component.
    if (false) {
      console.warn('chunk not available for synchronous require yet: ' + id + ': ' + err.message, err.stack);
    }
  }

  return null;
};

var requireById = exports.requireById = function requireById(id) {
  if (!isWebpack() && typeof id === 'string') {
    return module.require(id);
  }

  return __webpack_require__(id);
};

var resolveExport = exports.resolveExport = function resolveExport(mod, key, onLoad, chunkName, props, context, modCache) {
  var isSync = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;

  var exp = findExport(mod, key);
  if (onLoad && mod) {
    var _isServer = typeof window === 'undefined';
    var info = { isServer: _isServer, isSync: isSync };
    onLoad(mod, info, props, context);
  }
  if (chunkName && exp) cacheExport(exp, chunkName, props, modCache);
  return exp;
};

var findExport = exports.findExport = function findExport(mod, key) {
  if (typeof key === 'function') {
    return key(mod);
  } else if (key === null) {
    return mod;
  }

  return mod && (typeof mod === 'undefined' ? 'undefined' : _typeof(mod)) === 'object' && key ? mod[key] : babelInterop(mod);
};

var createElement = exports.createElement = function createElement(Component, props) {
  return _react2.default.isValidElement(Component) ? _react2.default.cloneElement(Component, props) : _react2.default.createElement(Component, props);
};

var callForString = exports.callForString = function callForString(strFun, props) {
  return typeof strFun === 'function' ? strFun(props) : strFun;
};

var loadFromCache = exports.loadFromCache = function loadFromCache(chunkName, props, modCache) {
  return !isServer && modCache[callForString(chunkName, props)];
};

var cacheExport = exports.cacheExport = function cacheExport(exp, chunkName, props, modCache) {
  return modCache[callForString(chunkName, props)] = exp;
};

var loadFromPromiseCache = exports.loadFromPromiseCache = function loadFromPromiseCache(chunkName, props, promisecache) {
  return promisecache[callForString(chunkName, props)];
};

var cacheProm = exports.cacheProm = function cacheProm(pr, chunkName, props, promisecache) {
  return promisecache[callForString(chunkName, props)] = pr;
};
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(17)(module)))

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouterPropTypes = __webpack_require__(4);

var _reactRouterPropTypes2 = _interopRequireDefault(_reactRouterPropTypes);

var _reactStatic = __webpack_require__(5);

var _BottomSticky = __webpack_require__(18);

var _BottomSticky2 = _interopRequireDefault(_BottomSticky);

var _ScrollInContainer = __webpack_require__(27);

var _ScrollInContainer2 = _interopRequireDefault(_ScrollInContainer);

var _EmailSignup = __webpack_require__(57);

var _EmailSignup2 = _interopRequireDefault(_EmailSignup);

var _Feedback = __webpack_require__(20);

var _Feedback2 = _interopRequireDefault(_Feedback);

var _FloatingMenu = __webpack_require__(65);

var _FloatingMenu2 = _interopRequireDefault(_FloatingMenu);

var _HomePageCard = __webpack_require__(66);

var _HomePageCard2 = _interopRequireDefault(_HomePageCard);

var _ProjectTopicsContainer = __webpack_require__(69);

var _ProjectTopicsContainer2 = _interopRequireDefault(_ProjectTopicsContainer);

var _SideMenu = __webpack_require__(13);

var _SideMenu2 = _interopRequireDefault(_SideMenu);

var _Header = __webpack_require__(94);

var _Header2 = _interopRequireDefault(_Header);

var _api = __webpack_require__(9);

var _localStorage = __webpack_require__(14);

var _projects = __webpack_require__(8);

var _propTypes3 = __webpack_require__(3);

var _search = __webpack_require__(10);

var _Container = __webpack_require__(15);

var _Container2 = _interopRequireDefault(_Container);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Home = function (_React$Component) {
    _inherits(Home, _React$Component);

    function Home(props) {
        _classCallCheck(this, Home);

        var _this = _possibleConstructorReturn(this, (Home.__proto__ || Object.getPrototypeOf(Home)).call(this, props));

        _this.state = {
            isMenuOpen: false
        };

        _this.handleBurgerClick = _this.handleBurgerClick.bind(_this);
        return _this;
    }

    _createClass(Home, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            // We must store last path in here as when we create react-static
            // there is no other way of getting where we were for 404 logging
            (0, _localStorage.localStorageSet)('lastDocPath', '/home/');

            // Trigger the search index load here so a search is quicker
            (0, _search.initCorpusIndex)();

            if (!this.props.staticHome) {
                window.addEventListener('resize', this.handleResize);
                this.handleResize();
            }
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            if (!this.props.staticHome) {
                window.removeEventListener('resize', this.handleResize);
            }
        }
    }, {
        key: 'handleBurgerClick',
        value: function handleBurgerClick() {
            this.setState({ isMenuOpen: !this.state.isMenuOpen });
        }
    }, {
        key: 'handleResize',
        value: function handleResize() {
            document.querySelector('#image-background').style.height = document.querySelector('.cards-container').clientHeight + 'px';
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            return this.props.staticHome ? _react2.default.createElement(
                _react2.default.Fragment,
                null,
                _react2.default.createElement(
                    _reactStatic.Head,
                    null,
                    _react2.default.createElement(
                        'title',
                        null,
                        'Home | ',
                        this.props.viewData.siteName
                    )
                ),
                _react2.default.createElement('div', { dangerouslySetInnerHTML: { __html: this.props.staticHome } })
            ) : _react2.default.createElement(
                _Container2.default,
                this.props,
                _react2.default.createElement(
                    _reactStatic.Head,
                    null,
                    _react2.default.createElement(
                        'title',
                        null,
                        'Home | ',
                        this.props.viewData.siteName
                    )
                ),
                _react2.default.createElement(_Header2.default, {
                    history: this.props.history,
                    headerTitle: this.props.homeData.headerTitle,
                    topTitles: this.props.homeData.headerTopLinks,
                    popularTopics: this.props.homeData.popularTopics,
                    onBurgerClick: this.handleBurgerClick,
                    viewData: this.props.viewData
                }),
                _react2.default.createElement(_SideMenu2.default, {
                    isMenuOpen: this.state.isMenuOpen,
                    projects: this.props.projects,
                    onCloseClick: this.handleBurgerClick,
                    highlightedItem: this.state.projectFullURL }),
                _react2.default.createElement('div', { id: 'image-background', style: { background: '#f3f2f1', width: '100%', height: '0px', position: 'absolute' } }),
                _react2.default.createElement(
                    'div',
                    { className: 'layouts--2-column' },
                    _react2.default.createElement(
                        'div',
                        { className: 'left-column' },
                        _react2.default.createElement(
                            _ScrollInContainer2.default,
                            { topOffset: 50, bottomOffset: 150 },
                            _react2.default.createElement(_FloatingMenu2.default, { menuItems: (0, _projects.createProjectLinks)(this.props.projects) })
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'right-column' },
                        _react2.default.createElement(
                            'article',
                            null,
                            _react2.default.createElement(_HomePageCard2.default, { content: this.props.homeData.cards })
                        ),
                        _react2.default.createElement(
                            'article',
                            null,
                            _react2.default.createElement(_ProjectTopicsContainer2.default, { content: (0, _projects.createProjectTopics)(this.props.projects) })
                        )
                    ),
                    this.props.viewData.enableFeedback && _react2.default.createElement(
                        _BottomSticky2.default,
                        { zIndex: 10, horizontalAlign: 'right' },
                        _react2.default.createElement(
                            'div',
                            { className: 'tablet-down-hidden' },
                            _react2.default.createElement(_Feedback2.default, { onSubmit: function onSubmit(data) {
                                    return (0, _api.submitFeedback)(_this2.props.apiEndpoint, '/home/', data);
                                } })
                        )
                    )
                ),
                this.props.viewData.enableSignup && _react2.default.createElement(_EmailSignup2.default, { apiEndpoint: this.props.apiEndpoint })
            );
        }
    }]);

    return Home;
}(_react2.default.Component);

Home.propTypes = {
    apiEndpoint: _propTypes2.default.string.isRequired,
    homeData: _propTypes3.HomeDataPropTypes.isRequired,
    viewData: _propTypes3.ViewDataPropTypes.isRequired,
    hideSignup: _propTypes2.default.bool,
    history: _reactRouterPropTypes2.default.history,
    location: _reactRouterPropTypes2.default.location,
    projects: _propTypes3.ProjectsPropTypes.isRequired,
    staticHome: _propTypes2.default.string
};
exports.default = (0, _reactStatic.withSiteData)(Home);

/***/ }),
/* 26 */
/***/ (function(module, exports) {

module.exports = require("react-style-proptype");

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(16);

var _reactDom2 = _interopRequireDefault(_reactDom);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ScrollInContainer = function (_React$Component) {
    _inherits(ScrollInContainer, _React$Component);

    function ScrollInContainer() {
        _classCallCheck(this, ScrollInContainer);

        return _possibleConstructorReturn(this, (ScrollInContainer.__proto__ || Object.getPrototypeOf(ScrollInContainer)).apply(this, arguments));
    }

    _createClass(ScrollInContainer, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.handleScroll = this.handleScroll.bind(this);
            this.handleResize = this.handleResize.bind(this);

            document.addEventListener('scroll', this.handleScroll);
            window.addEventListener('resize', this.handleResize);

            this.handleScroll();
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            document.removeEventListener('scroll', this.handleScroll);
            window.removeEventListener('resize', this.handleResize);
        }
    }, {
        key: 'handleResize',
        value: function handleResize() {
            this.handleScroll();
        }
    }, {
        key: 'handleScroll',
        value: function handleScroll() {
            var thisDom = _reactDom2.default.findDOMNode(this);
            var parentDom = thisDom.parentNode;

            var thisRect = thisDom.getBoundingClientRect();
            var parentRect = parentDom.getBoundingClientRect();

            var computedParent = getComputedStyle(parentDom);

            if (parentRect.top < 0) {
                var newRelativeTop = -parentRect.top + this.props.topOffset;
                if (this._lastRelativeTop === undefined) {
                    this._lastRelativeTop = newRelativeTop;
                }

                var thisHeight = thisRect.height + this.props.bottomOffset;

                var fixBottom = false;
                if (thisHeight + this._lastRelativeTop >= parentRect.height) {
                    fixBottom = true;
                }

                this._lastRelativeTop = Math.floor(newRelativeTop);

                if (fixBottom) {
                    thisDom.style.top = parentRect.height - thisHeight + 'px';
                    thisDom.style.position = 'relative';
                    thisDom.style.width = 'auto';
                } else {
                    var parentTopPadding = parseInt(computedParent.paddingTop, 10);
                    var parentLeftPadding = parseInt(computedParent.paddingLeft, 10);
                    var parentRightPadding = parseInt(computedParent.paddingRight, 10);

                    thisDom.style.top = parentTopPadding + this.props.topOffset + 'px';
                    thisDom.style.position = 'fixed';
                    thisDom.style.width = parentRect.width - parentLeftPadding - parentRightPadding + 'px';
                }
            } else {
                thisDom.style.top = this.props.topOffset + 'px';
                thisDom.style.position = 'relative';
                thisDom.style.width = 'auto';
            }
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                null,
                this.props.children
            );
        }
    }]);

    return ScrollInContainer;
}(_react2.default.Component);

ScrollInContainer.defaultProps = {
    topOffset: 0,
    bottomOffset: 100
};
ScrollInContainer.propTypes = {
    children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),
    topOffset: _propTypes2.default.number,
    bottomOffset: _propTypes2.default.number
};
exports.default = ScrollInContainer;

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Markdown = __webpack_require__(29);

var _Markdown2 = _interopRequireDefault(_Markdown);

var _classnames = __webpack_require__(2);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Link = __webpack_require__(6);

var _Link2 = _interopRequireDefault(_Link);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ProjectTopicsInner = function (_React$Component) {
    _inherits(ProjectTopicsInner, _React$Component);

    function ProjectTopicsInner() {
        _classCallCheck(this, ProjectTopicsInner);

        return _possibleConstructorReturn(this, (ProjectTopicsInner.__proto__ || Object.getPrototypeOf(ProjectTopicsInner)).apply(this, arguments));
    }

    _createClass(ProjectTopicsInner, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            return _react2.default.createElement(
                'div',
                { className: (0, _classnames2.default)('project-topics', { 'project-topics__compressed': this.props.compressed }) },
                this.props.content.map(function (item, idx) {
                    return _react2.default.createElement(
                        'div',
                        { key: idx, className: 'project-topic__item' },
                        item.link && _react2.default.createElement(
                            _Link2.default,
                            { href: item.link, target: item.link.startsWith('http') ? '_blank' : undefined, className: 'project-topic__link' },
                            _react2.default.createElement(
                                'span',
                                { className: (0, _classnames2.default)('project-topic__heading', 'text--level6', { 'project-topic__primary-bullet': item.bullet === 'primary' }, { 'project-topic__secondary-bullet': item.bullet === 'secondary' }) },
                                item.name
                            )
                        ),
                        !item.link && _react2.default.createElement(
                            'span',
                            { className: (0, _classnames2.default)('project-topic__heading', 'text--level6', { 'project-topic__primary-bullet': item.bullet === 'primary' }, { 'project-topic__secondary-bullet': item.bullet === 'secondary' }) },
                            item.name
                        ),
                        _react2.default.createElement(_Markdown2.default, { className: 'project-topic__subheading', source: item.description, highlights: _this2.props.highlights })
                    );
                })
            );
        }
    }]);

    return ProjectTopicsInner;
}(_react2.default.Component);

ProjectTopicsInner.propTypes = {
    content: _propTypes2.default.arrayOf(_propTypes2.default.shape({
        name: _propTypes2.default.string.isRequired,
        link: _propTypes2.default.string.isRequired,
        description: _propTypes2.default.string.isRequired,
        bullet: _propTypes2.default.oneOf(['none', 'primary', 'secondary'])
    })).isRequired,
    compressed: _propTypes2.default.bool,
    highlights: _propTypes2.default.arrayOf(_propTypes2.default.string)
};
exports.default = ProjectTopicsInner;

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _emojiDictionary = __webpack_require__(71);

var _emojiDictionary2 = _interopRequireDefault(_emojiDictionary);

var _googleMapReact = __webpack_require__(30);

var _googleMapReact2 = _interopRequireDefault(_googleMapReact);

__webpack_require__(72);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactMarkdown = __webpack_require__(73);

var _reactMarkdown2 = _interopRequireDefault(_reactMarkdown);

var _reactRouterPropTypes = __webpack_require__(4);

var _reactRouterPropTypes2 = _interopRequireDefault(_reactRouterPropTypes);

var _reprism = __webpack_require__(74);

var _bash = __webpack_require__(75);

var _bash2 = _interopRequireDefault(_bash);

var _c = __webpack_require__(76);

var _c2 = _interopRequireDefault(_c);

var _cpp = __webpack_require__(77);

var _cpp2 = _interopRequireDefault(_cpp);

var _java = __webpack_require__(78);

var _java2 = _interopRequireDefault(_java);

var _javascript = __webpack_require__(79);

var _javascript2 = _interopRequireDefault(_javascript);

var _json = __webpack_require__(80);

var _json2 = _interopRequireDefault(_json);

var _jsx = __webpack_require__(81);

var _jsx2 = _interopRequireDefault(_jsx);

var _python = __webpack_require__(82);

var _python2 = _interopRequireDefault(_python);

var _logoSmall = __webpack_require__(31);

var _logoSmall2 = _interopRequireDefault(_logoSmall);

var _clipboard = __webpack_require__(32);

var _paths = __webpack_require__(21);

var _Heading = __webpack_require__(11);

var _Heading2 = _interopRequireDefault(_Heading);

var _HeadingLabel = __webpack_require__(83);

var _HeadingLabel2 = _interopRequireDefault(_HeadingLabel);

var _MapMarker = __webpack_require__(33);

var _MapMarker2 = _interopRequireDefault(_MapMarker);

var _MarkdownCard = __webpack_require__(85);

var _MarkdownCard2 = _interopRequireDefault(_MarkdownCard);

var _MessageBox = __webpack_require__(86);

var _MessageBox2 = _interopRequireDefault(_MessageBox);

var _ProjectTopicsInner = __webpack_require__(28);

var _ProjectTopicsInner2 = _interopRequireDefault(_ProjectTopicsInner);

var _Tabs = __webpack_require__(87);

var _Tabs2 = _interopRequireDefault(_Tabs);

var _Feed = __webpack_require__(88);

var _Feed2 = _interopRequireDefault(_Feed);

__webpack_require__(92);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

(0, _reprism.loadLanguages)(_jsx2.default, _bash2.default, _c2.default, _cpp2.default, _java2.default, _javascript2.default, _json2.default, _python2.default);

var Markdown = function (_PureComponent) {
    _inherits(Markdown, _PureComponent);

    function Markdown(props) {
        _classCallCheck(this, Markdown);

        var _this = _possibleConstructorReturn(this, (Markdown.__proto__ || Object.getPrototypeOf(Markdown)).call(this, props));

        _this.state = {
            content: '',
            imageUrl: ''
        };

        _this.tabContainers = [];
        _this.projectTopicContainers = [];
        _this.headingLabels = [];
        _this.cards = [];
        _this.messageBoxes = [];
        _this.objects = [];

        _this.html = _this.html.bind(_this);
        _this.heading = _this.heading.bind(_this);
        _this.textRenderer = _this.textRenderer.bind(_this);
        _this.tableRenderer = _this.tableRenderer.bind(_this);
        _this.tableCellRenderer = _this.tableCellRenderer.bind(_this);
        _this.tableRowRenderer = _this.tableRowRenderer.bind(_this);
        _this.replaceSearchQuery = _this.replaceSearchQuery.bind(_this);
        _this.stripSearchQuery = _this.stripSearchQuery.bind(_this);
        _this.codeBlock = _this.codeBlock.bind(_this);
        _this.handleCopy = _this.handleCopy.bind(_this);
        _this.handleFeedLoaded = _this.handleFeedLoaded.bind(_this);
        _this.imageRenderer = _this.imageRenderer.bind(_this);

        _this.currentTable = undefined;
        _this.currentTableRow = 0;
        _this.currentTableHeaders = [];
        _this.headingCounters = {};
        _this.copyIdCounter = 0;
        return _this;
    }

    _createClass(Markdown, [{
        key: 'handleCopy',
        value: function handleCopy(code, elemName) {
            (0, _clipboard.copyToClipboard)(code);

            document.getElementById(elemName).classList.toggle('markdown-code-copy-feedback--active', true);

            setTimeout(function () {
                document.getElementById(elemName).classList.toggle('markdown-code-copy-feedback--active', false);
            }, 2000);
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.highlights = [];
            this.headingCounters = {};
            if (this.props.highlights) {
                this.highlights = this.highlights.concat(this.props.highlights);
            }
            if (this.props.query) {
                if (this.highlights.indexOf(this.props.query) < 0) {
                    this.highlights.push(this.props.query);
                }
            }

            var content = this.fixReprismSyntaxHighlighting(this.props.source);

            // Strip the h1 from the start of the content
            content = content.trim().replace(/(^# .*)/, '').trim();

            var markdownMatches = this.findMarkdownContainers(content);
            for (var i = 0; i < markdownMatches.length; i++) {
                content = content.replace(markdownMatches[i], '<markdown index="' + i + '"></markdown>');
            }

            var tabMatches = this.findTabContainers(content);
            for (var _i = 0; _i < tabMatches.length; _i++) {
                this.tabContainers.push(this.findTabs(tabMatches[_i]));
                content = content.replace(tabMatches[_i], '<tabs index="' + _i + '"></tabs>');
            }

            var projectTopicMatches = this.findProjectTopicContainers(content);
            for (var _i2 = 0; _i2 < projectTopicMatches.length; _i2++) {
                this.projectTopicContainers.push(this.findProjectTopics(projectTopicMatches[_i2]));
                content = content.replace(projectTopicMatches[_i2], '<project-topics index="' + _i2 + '"></project-topics>');
            }

            var headingMatches = this.findHeadingLabels(content);
            for (var _i3 = 0; _i3 < headingMatches.length; _i3++) {
                content = content.replace(headingMatches[_i3], '<heading-label index="' + _i3 + '"></heading-label>');
            }

            var cardMatches = this.findCards(content);
            for (var _i4 = 0; _i4 < cardMatches.length; _i4++) {
                content = content.replace(cardMatches[_i4], '<card index="' + _i4 + '"></card>');
            }

            var messageBoxMatches = this.findMessageBoxes(content);
            for (var _i5 = 0; _i5 < messageBoxMatches.length; _i5++) {
                content = content.replace(messageBoxMatches[_i5], '<message-box index="' + _i5 + '"></message-box>');
            }

            var objectMatches = this.findObjects(content);
            for (var _i6 = 0; _i6 < objectMatches.length; _i6++) {
                content = content.replace(objectMatches[_i6].content, '<' + objectMatches[_i6].type + ' index="' + _i6 + '"></' + objectMatches[_i6].type + '>');
            }

            content = this.replaceSearchQuery(content);

            for (var _i7 = 0; _i7 < markdownMatches.length; _i7++) {
                content = content.replace('<markdown index="' + _i7 + '"></markdown>', markdownMatches[_i7]);
            }

            this.setState({
                content: content
            });
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate() {
            this.highlights = [];
            this.headingCounters = {};
        }
    }, {
        key: 'fixReprismSyntaxHighlighting',
        value: function fixReprismSyntaxHighlighting(content) {
            return content.replace(/```Python/g, '```python').replace(/```c\+\+/g, '```cpp').replace(/```proto/g, '```cpp').replace(/```bash/g, '```shell');
        }
    }, {
        key: 'stripSearchQuery',
        value: function stripSearchQuery(content) {
            return content.replace(/<query text="(.*?)" \/>/g, '$1');
        }
    }, {
        key: 'replaceSearchQuery',
        value: function replaceSearchQuery(content, useSpan) {
            if (this.highlights.length > 0) {
                var re = new RegExp('(^\\s|\\s$|\\S\\s|\\s\\S)(' + this.highlights.join('|') + ')(^\\s|\\s$|\\S\\s|\\s\\S)', 'gi');

                if (useSpan) {
                    content = content.replace(re, '$1<span class="search-keyword">$2</span>$3');
                } else {
                    content = content.replace(re, '$1<query text="$2" />$3');
                }
            }

            return content;
        }
    }, {
        key: 'findMarkdownContainers',
        value: function findMarkdownContainers(content) {
            var matches = [];
            var re = /^```markdown([\S\s]*?)```$/gm;

            var match = void 0;
            do {
                match = re.exec(content);
                if (match && match.length === 2) {
                    matches.push(match[0]);
                }
            } while (match);

            return matches;
        }
    }, {
        key: 'findTabContainers',
        value: function findTabContainers(content) {
            var matches = [];
            var re = /^--------------------$([\S\s]*?)^--------------------$/gm;

            var match = void 0;
            do {
                match = re.exec(content);
                if (match && match.length === 2) {
                    matches.push(match[0]);
                }
            } while (match);

            return matches;
        }
    }, {
        key: 'findTabs',
        value: function findTabs(tabContainer) {
            var tabs = [];
            var re = /### (.*)([\S\s]*?)---/g;

            var match = void 0;
            do {
                match = re.exec(tabContainer);
                if (match && match.length === 3) {
                    tabs.push({
                        title: match[1],
                        content: match[2]
                    });
                }
            } while (match);

            return tabs;
        }
    }, {
        key: 'findProjectTopicContainers',
        value: function findProjectTopicContainers(content) {
            var matches = [];
            var re = /^---------------$([\S\s]*?)^---------------$/gm;

            var match = void 0;
            do {
                match = re.exec(content);
                if (match && match.length === 2) {
                    matches.push(match[0]);
                }
            } while (match);

            return matches;
        }
    }, {
        key: 'findProjectTopics',
        value: function findProjectTopics(projectTopicContainer) {
            var projectTopics = [];
            var re = /#### (.*)\n(\[.*\]\((.*)\))?([\S\s]*?)---/g;

            var match = void 0;
            do {
                match = re.exec(projectTopicContainer);
                if (match && match.length === 5) {
                    var matchPrimary = /\*\*(.*)\*\* ####/g.exec(match[1]);
                    if (matchPrimary && matchPrimary.length === 2) {
                        projectTopics.push({
                            bullet: 'primary',
                            name: matchPrimary[1],
                            description: match[4],
                            link: match[3].replace(/.md$/i, '')
                        });
                    } else {
                        var matchSecondary = /__(.*)__ ####/g.exec(match[1]);
                        if (matchSecondary && matchSecondary.length === 2) {
                            projectTopics.push({
                                bullet: 'secondary',
                                name: matchSecondary[1],
                                description: match[4],
                                link: match[3].replace(/.md$/i, '')
                            });
                        } else {
                            var matchPlain = /(.*) ####/g.exec(match[1]);
                            if (matchPlain && matchPlain.length === 2) {
                                projectTopics.push({
                                    bullet: 'none',
                                    name: matchPlain[1],
                                    description: match[4],
                                    link: match[3].replace(/.md$/i, '')
                                });
                            }
                        }
                    }
                }
            } while (match);

            return projectTopics;
        }
    }, {
        key: 'findCards',
        value: function findCards(content) {
            var matches = [];
            var re = /^-------------------------\s+!\[(.*?)\]\((.*?)\)\s+## \[(.*?)\]\((.*?)\)\s+([\S\s]*?)-------------------------$/gm;

            var match = void 0;
            do {
                match = re.exec(content);
                if (match && match.length === 6) {
                    this.cards.push({
                        alt: match[1],
                        img: match[2],
                        title: match[3],
                        link: match[4],
                        content: match[5]
                    });
                    matches.push(match[0]);
                }
            } while (match);

            return matches;
        }
    }, {
        key: 'findHeadingLabels',
        value: function findHeadingLabels(content) {
            var matches = [];
            var re = /### (.*) ###/g;

            var match = void 0;
            do {
                match = re.exec(content);
                if (match && match.length === 2) {
                    var matchPrimary = /\*\*(.*)\*\*/g.exec(match[1]);
                    if (matchPrimary && matchPrimary.length === 2) {
                        this.headingLabels.push({ style: 'primary', content: matchPrimary[1] });
                        matches.push(match[0]);
                    } else {
                        var matchSecondary = /__(.*)__/g.exec(match[1]);
                        if (matchSecondary && matchSecondary.length === 2) {
                            this.headingLabels.push({ style: 'secondary', content: matchSecondary[1] });
                            matches.push(match[0]);
                        }
                    }
                }
            } while (match);

            return matches;
        }
    }, {
        key: 'findMessageBoxes',
        value: function findMessageBoxes(content) {
            var matches = [];
            var re = /:::(success:|danger:|warning:|info:)(.+?)?(\n[\s\S]*?)?:::/gm;

            var match = void 0;
            do {
                match = re.exec(content);
                if (match && match.length === 4) {
                    this.messageBoxes.push({
                        type: match[1].replace(':', ''),
                        title: match[2] && this.emojify(match[2].trim()),
                        content: match[3] && this.emojify(match[3].trim())
                    });
                    matches.push(match[0]);
                }
            } while (match);

            return matches;
        }
    }, {
        key: 'findObjects',
        value: function findObjects(content) {
            var matches = [];
            var re = /¬¬¬\s\[(.*?)\]\s([\s\S]*?)\s¬¬¬/gm;

            var match = void 0;
            do {
                match = re.exec(content);
                if (match && match.length === 3) {
                    if (match[1] === 'feed' || match[1] === 'map') {
                        this.objects.push(JSON.parse(match[2]));
                        matches.push({ type: match[1], content: match[0] });
                    }
                }
            } while (match);

            return matches;
        }
    }, {
        key: 'html',
        value: function html(props) {
            var _this2 = this;

            if (props.value.startsWith('<tabs')) {
                var re = /<tabs index="(.*)">/;
                var match = re.exec(props.value);

                if (match && match.length === 2) {
                    var index = parseInt(match[1], 10);
                    var headers = this.tabContainers[index].map(function (tc) {
                        return tc.title;
                    });
                    var content = this.tabContainers[index].map(function (tc, idx) {
                        return _react2.default.createElement(_reactMarkdown2.default, {
                            key: idx,
                            source: tc.content,
                            renderers: {
                                text: _this2.textRenderer,
                                code: function code(props) {
                                    return _this2.codeBlock(props, false);
                                }
                            } });
                    });
                    return _react2.default.createElement(_Tabs2.default, { headers: headers, contents: content });
                }
            } else if (props.value.startsWith('<project-topics')) {
                var _re = /<project-topics index="(.*)">/;
                var _match = _re.exec(props.value);

                if (_match && _match.length === 2) {
                    var _index = parseInt(_match[1], 10);
                    return _react2.default.createElement(_ProjectTopicsInner2.default, { content: this.projectTopicContainers[_index], compressed: true, highlights: this.highlights });
                }
            } else if (props.value.startsWith('<feed')) {
                var _re2 = /<feed index="(.*)">/;
                var _match2 = _re2.exec(props.value);

                if (_match2 && _match2.length === 2) {
                    var _index2 = parseInt(_match2[1], 10);
                    var feed = this.objects[_index2];
                    return _react2.default.createElement(_Feed2.default, {
                        displayType: feed.displayType,
                        context: feed.context,
                        apiEndpoint: this.props.apiEndpoint,
                        googleMapsKey: this.props.googleMapsKey,
                        onLoaded: this.handleFeedLoaded,
                        history: this.props.history
                    });
                }
            } else if (props.value.startsWith('<map')) {
                var _re3 = /<map index="(.*)">/;
                var _match3 = _re3.exec(props.value);

                if (_match3 && _match3.length === 2) {
                    var _index3 = parseInt(_match3[1], 10);
                    var map = this.objects[_index3];
                    return _react2.default.createElement(
                        'div',
                        { className: 'markdown-map' },
                        _react2.default.createElement(
                            _googleMapReact2.default,
                            {
                                bootstrapURLKeys: { key: this.props.googleMapsKey },
                                defaultCenter: {
                                    lat: map.center.lat,
                                    lng: map.center.lng
                                },
                                defaultZoom: map.zoom
                            },
                            map.markers && map.markers.map(function (marker, idx) {
                                return _react2.default.createElement(
                                    _MapMarker2.default,
                                    { lat: marker.lat, lng: marker.lng, key: idx },
                                    _react2.default.createElement('img', { src: _logoSmall2.default, alt: 'IOTA' }),
                                    marker.name
                                );
                            })
                        )
                    );
                }
            } else if (props.value.startsWith('<heading-label')) {
                var _re4 = /<heading-label index="(.*)">/;
                var _match4 = _re4.exec(props.value);

                if (_match4 && _match4.length === 2) {
                    var _index4 = parseInt(_match4[1], 10);
                    var headingLabel = this.headingLabels[_index4];
                    return _react2.default.createElement(
                        _HeadingLabel2.default,
                        { style: headingLabel.style, id: (0, _paths.sanitizeHashId)(headingLabel.content) },
                        headingLabel.content
                    );
                }
            } else if (props.value.startsWith('<card')) {
                var _re5 = /<card index="(.*)">/;
                var _match5 = _re5.exec(props.value);

                if (_match5 && _match5.length === 2) {
                    var _index5 = parseInt(_match5[1], 10);
                    var card = this.cards[_index5];
                    return _react2.default.createElement(
                        _MarkdownCard2.default,
                        {
                            id: (0, _paths.sanitizeHashId)(card.title),
                            alt: card.alt,
                            img: card.img,
                            title: card.title,
                            link: card.link.replace(/.md$/i, '')
                        },
                        this.boldify(card.content)
                    );
                }
            } else if (props.value.startsWith('<message-box')) {
                var _re6 = /<message-box index="(.*)">/;
                var _match6 = _re6.exec(props.value);

                if (_match6 && _match6.length === 2) {
                    var _index6 = parseInt(_match6[1], 10);
                    var messageBox = this.messageBoxes[_index6];
                    return _react2.default.createElement(_MessageBox2.default, { type: messageBox.type, title: messageBox.title, content: this.linkify(messageBox.content) });
                }
            } else if (props.value.startsWith('<a name')) {
                var _re7 = /<a name="(.*)"/i;
                var _match7 = _re7.exec(props.value);

                if (_match7 && _match7.length === 2) {
                    return _react2.default.createElement('a', { id: (0, _paths.sanitizeHashId)(_match7[1]) });
                }
            } else if (props.value.startsWith('<query')) {
                var _re8 = /<query text="(.*)"/i;
                var _match8 = _re8.exec(props.value);

                if (_match8 && _match8.length === 2) {
                    return _react2.default.createElement(
                        'span',
                        { className: 'search-keyword' },
                        _match8[1]
                    );
                }
            } else if (props.value.startsWith('<img')) {
                var _re9 = /<img src="(.*?)"\s*(?:alt="(.*?)")?/i;
                var _match9 = _re9.exec(props.value);

                if (_match9 && (_match9.length === 2 || _match9.length === 3)) {
                    return this.imageRenderer({
                        src: _match9[1],
                        alt: _match9[2] || ''
                    });
                }
            }

            // Do default html processing
            // https://github.com/rexxars/react-markdown/blob/b6caaba0437b00132d58337913e66a7d1bfb30ce/src/renderers.js#L100-L113
            if (props.skipHtml) {
                return null;
            }

            var tag = props.isBlock ? 'div' : 'span';
            if (props.escapeHtml) {
                var comp = _react2.default.Fragment || tag;
                return _react2.default.createElement(comp, null, props.value);
            }

            var nodeProps = { dangerouslySetInnerHTML: { __html: props.value } };
            return _react2.default.createElement(tag, nodeProps);
        }
    }, {
        key: 'linkify',
        value: function linkify(content) {
            var _this3 = this;

            var output = [];
            var re = /\[(.*?)\]\((.*?)\)/;
            var match = void 0;
            do {
                match = re.exec(content);
                if (match && match.length === 3) {
                    output.push(_react2.default.createElement(
                        'span',
                        { style: { whiteSpace: 'pre-line' }, key: output.length },
                        content.substring(0, match.index)
                    ));
                    output.push(this.aLink({
                        children: match[1],
                        href: match[2],
                        key: output.length
                    }));
                    content = content.substring(match.index + match[0].length);
                } else {
                    output.push(_react2.default.createElement(
                        'span',
                        { style: { whiteSpace: 'pre-line' }, key: output.length },
                        content
                    ));
                }
            } while (match);

            return output.map(function (o) {
                return _this3.messageBoxCode(o);
            });
        }
    }, {
        key: 'messageBoxCode',
        value: function messageBoxCode(item) {
            if (item.type === 'span') {
                var output = [];
                var re = /(?:`+)([\s\S]*?)(?:`+)/;
                var content = item.props.children;
                var match = void 0;
                do {
                    match = re.exec(content);
                    if (match && match.length === 2) {
                        output.push(_react2.default.createElement(
                            'span',
                            { style: { whiteSpace: 'pre-line' }, key: output.length },
                            this.boldify(content.substring(0, match.index))
                        ));
                        output.push(this.inlineCodeBlock({ value: match[1] }, output.length));
                        content = content.substring(match.index + match[0].length);
                    } else {
                        output.push(_react2.default.createElement(
                            'span',
                            { style: { whiteSpace: 'pre-line' }, key: output.length },
                            this.boldify(content)
                        ));
                    }
                } while (match);
                return output;
            }

            return item;
        }
    }, {
        key: 'aLink',
        value: function aLink(props) {
            var localProps = _extends({}, props);
            if (localProps.href.startsWith('javascript:void(0)')) {
                if (localProps.children && localProps.children.length > 0) {
                    if (localProps.children[0].props && localProps.children[0].props.value) {
                        localProps.href = localProps.children[0].props.value;
                        localProps.target = '_blank';
                        localProps.rel = 'noopener noreferrer';
                    }
                }
            } else if (localProps.href.startsWith('http') || localProps.href.startsWith('iota')) {
                localProps.target = '_blank';
                localProps.rel = 'noopener noreferrer';
            } else {
                if (localProps.href.startsWith('#')) {
                    // Make sure the tag is consistently named
                    localProps.href = (0, _paths.sanitizeHashId)(localProps.href);
                } else {
                    // For local links remove .md extension
                    var anchorParts = localProps.href.split('#');
                    localProps.href = (0, _paths.sanitizeHashId)(anchorParts[0], true).replace(/.md$/i, '');
                    if (anchorParts.length === 2) {
                        localProps.href += '#' + (0, _paths.sanitizeHashId)(anchorParts[1], false, true);
                    }
                }
            }
            return _react2.default.createElement('a', localProps);
        }
    }, {
        key: 'codeBlock',
        value: function codeBlock(props, wrap) {
            var _this4 = this;

            var html = props.value;
            try {
                html = (0, _reprism.highlight)(html, props.language);
            } catch (err) {
                html = '<pre className="reprism markup language-markup"><code>' + html + '</code></pre>';
            }
            html = this.replaceSearchQuery(html, true);

            if (wrap) {
                this.copyIdCounter++;
                var elemName = 'copy-feedback-' + this.copyIdCounter;
                return _react2.default.createElement(
                    'div',
                    { className: 'markdown-code__wrapper' },
                    _react2.default.createElement(
                        'span',
                        { className: 'markdown-code-copy--wrapper' },
                        _react2.default.createElement(
                            'span',
                            { className: 'markdown-code-copy-feedback', id: elemName },
                            'Copied'
                        ),
                        _react2.default.createElement('button', { className: 'markdown-code--copy', onClick: function onClick() {
                                return _this4.handleCopy(props.value, elemName);
                            } })
                    ),
                    _react2.default.createElement('div', { className: 'markdown-code', dangerouslySetInnerHTML: { __html: html } })
                );
            } else {
                return _react2.default.createElement('div', {
                    className: 'markdown-code',
                    dangerouslySetInnerHTML: { __html: html } });
            }
        }
    }, {
        key: 'inlineCodeBlock',
        value: function inlineCodeBlock(props, key) {
            return _react2.default.createElement('div', {
                className: 'text text-inline--code markdown-code-inline',
                dangerouslySetInnerHTML: { __html: props.value },
                key: key });
        }
    }, {
        key: 'textRenderer',
        value: function textRenderer(props) {
            return this.emojify(props.children);
        }
    }, {
        key: 'emojify',
        value: function emojify(item) {
            return item.replace(/:\w+:/gi, function (name) {
                return _emojiDictionary2.default.getUnicode(name) || name;
            });
        }
    }, {
        key: 'boldify',
        value: function boldify(content) {
            var output = [];
            var re = /\*\*(.*?)\*\*/;
            var match = void 0;
            do {
                match = re.exec(content);
                if (match && match.length === 2) {
                    output.push(_react2.default.createElement(
                        'span',
                        { key: output.length },
                        content.substring(0, match.index)
                    ));
                    output.push(_react2.default.createElement(
                        'strong',
                        { key: output.length },
                        match[1]
                    ));
                    content = content.substring(match.index + match[0].length);
                } else {
                    output.push(_react2.default.createElement(
                        'span',
                        { key: output.length },
                        content
                    ));
                }
            } while (match);
            return output;
        }
    }, {
        key: 'tableRenderer',
        value: function tableRenderer(props) {
            var coreProps = this.getCoreProps(props);
            this.currentTableHeaders = [];
            this.currentTableRow = -1;
            if (props.columnAlignment.length > 3) {
                coreProps.className = 'table--compact';
            }
            return _react2.default.createElement('table', coreProps, props.children);
        }
    }, {
        key: 'tableRowRenderer',
        value: function tableRowRenderer(props) {
            this.currentTableRow++;
            this.currentTableColumn = -1;
            return _react2.default.createElement('tr', this.getCoreProps(props), props.children);
        }
    }, {
        key: 'tableCellRenderer',
        value: function tableCellRenderer(props) {
            var coreProps = this.getCoreProps(props);
            this.currentTableColumn++;
            var children = props.children;

            if (this.currentTableRow === 0) {
                this.currentTableHeaders[this.currentTableColumn] = props.children.length > 0 ? props.children[0].props.children : '';
            } else {
                children = [_react2.default.createElement('span', { className: 'table-body-row-item--inline-header', key: 0 }, this.currentTableHeaders[this.currentTableColumn]), _react2.default.createElement('span', { key: 1 }, children)];
            }
            return _react2.default.createElement(props.isHeader ? 'th' : 'td', coreProps, children);
        }
    }, {
        key: 'paragraph',
        value: function paragraph(props) {
            return _react2.default.createElement('div', _extends({ className: 'text-paragraph' }, props));
        }
    }, {
        key: 'heading',
        value: function heading(props) {
            var id = (0, _paths.sanitizeHashId)(this.stripSearchQuery(props.children.map(function (a) {
                return a.props.value;
            }).join('')), false, true);
            if (this.headingCounters[id] === undefined) {
                this.headingCounters[id] = -1;
            }
            this.headingCounters[id]++;
            if (this.headingCounters[id] > 0) {
                id = id + '_' + this.headingCounters[id];
            }
            return _react2.default.createElement(_Heading2.default, _extends({ className: 'text--tertiary', level: props.level, id: id }, props));
        }
    }, {
        key: 'imageRenderer',
        value: function imageRenderer(props) {
            var _this5 = this;

            return _react2.default.createElement('img', { src: props.src, alt: props.alt || '', onClick: function onClick(e) {
                    _this5.setState({ imageUrl: e.target.src });
                    document.body.classList.toggle('no-scroll', true);
                } });
        }
    }, {
        key: 'getCoreProps',
        value: function getCoreProps(props) {
            return props['data-sourcepos'] ? { 'data-sourcepos': props['data-sourcepos'] } : {};
        }
    }, {
        key: 'handleFeedLoaded',
        value: function handleFeedLoaded(itemCount) {
            if (this.props.onContentChanged) {
                this.props.onContentChanged(itemCount);
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this6 = this;

            return _react2.default.createElement(
                'div',
                { className: 'markdown__wrapper' },
                _react2.default.createElement(_reactMarkdown2.default, {
                    source: this.state.content,
                    renderers: {
                        text: this.textRenderer,
                        code: function code(props) {
                            return _this6.codeBlock(props, true);
                        },
                        inlineCode: function inlineCode(props) {
                            return _this6.inlineCodeBlock(props);
                        },
                        html: this.html,
                        link: this.aLink,
                        paragraph: this.paragraph,
                        heading: this.heading,
                        table: this.tableRenderer,
                        tableRow: this.tableRowRenderer,
                        tableCell: this.tableCellRenderer,
                        image: this.imageRenderer,
                        img: this.imageRenderer
                    },
                    skipHtml: false,
                    escapeHtml: false }),
                this.state.imageUrl && _react2.default.createElement(
                    _react2.default.Fragment,
                    null,
                    _react2.default.createElement('div', { className: 'image-popup--overlay' }),
                    _react2.default.createElement(
                        'div',
                        { className: 'image-popup', onClick: function onClick() {
                                _this6.setState({ imageUrl: undefined });
                                document.body.classList.toggle('no-scroll', false);
                            } },
                        _react2.default.createElement('img', { src: this.state.imageUrl })
                    )
                )
            );
        }
    }]);

    return Markdown;
}(_react.PureComponent);

Markdown.propTypes = {
    source: _propTypes2.default.string.isRequired,
    query: _propTypes2.default.string,
    highlights: _propTypes2.default.arrayOf(_propTypes2.default.string),
    apiEndpoint: _propTypes2.default.string,
    googleMapsKey: _propTypes2.default.string,
    history: _reactRouterPropTypes2.default.history,
    onContentChanged: _propTypes2.default.func
};
exports.default = Markdown;

/***/ }),
/* 30 */
/***/ (function(module, exports) {

module.exports = require("google-map-react");

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/logo-small.5001cd42.svg";

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.copyToClipboard = copyToClipboard;
function copyToClipboard(text) {
    try {
        var textArea = document.createElement('textarea');

        // Prevent zooming on iOS
        textArea.style.fontSize = '12pt';
        // Reset box model
        textArea.style.border = '0';
        textArea.style.padding = '0';
        textArea.style.margin = '0';
        // Move element out of screen horizontally
        textArea.style.position = 'absolute';
        textArea.style.left = '-9999px';
        // Move element to the same position vertically
        var yPosition = window.pageYOffset || document.documentElement.scrollTop;
        textArea.style.top = yPosition + 'px';

        textArea.setAttribute('readonly', '');
        textArea.value = text;

        document.body.appendChild(textArea);

        textArea.select();
        document.execCommand('Copy');
        textArea.remove();

        return true;
    } catch (err) {
        // Not much we can do
        return false;
    }
}

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

__webpack_require__(84);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Component to display an event map marker.
 */
var MapMarker = function (_Component) {
    _inherits(MapMarker, _Component);

    function MapMarker() {
        _classCallCheck(this, MapMarker);

        return _possibleConstructorReturn(this, (MapMarker.__proto__ || Object.getPrototypeOf(MapMarker)).apply(this, arguments));
    }

    _createClass(MapMarker, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                _extends({ className: 'map-marker' }, this.props),
                this.props.children
            );
        }
    }]);

    return MapMarker;
}(_react.Component);

MapMarker.propTypes = {
    children: _propTypes2.default.any,
    lat: _propTypes2.default.number.isRequired,
    lng: _propTypes2.default.number.isRequired
};
exports.default = MapMarker;

/***/ }),
/* 34 */
/***/ (function(module, exports) {

module.exports = require("qs");

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = __webpack_require__(2);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Pagination = function (_React$Component) {
    _inherits(Pagination, _React$Component);

    function Pagination(props) {
        _classCallCheck(this, Pagination);

        var _this = _possibleConstructorReturn(this, (Pagination.__proto__ || Object.getPrototypeOf(Pagination)).call(this, props));

        var maxPerPage = _this.props.maxPerPage ? _this.props.maxPerPage : 10;

        _this.state = {
            maxPerPage: maxPerPage,
            numberOfPages: Math.ceil(_this.props.totalCount / maxPerPage),
            currentPage: props.page
        };

        _this.handleNext = _this.handleNext.bind(_this);
        return _this;
    }

    _createClass(Pagination, [{
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps) {
            if (this.props.totalCount != prevProps.totalCount) {
                this.setState({
                    numberOfPages: Math.ceil(this.props.totalCount / this.state.maxPerPage),
                    currentPage: 0
                });
            }
        }
    }, {
        key: 'handleNext',
        value: function handleNext(newIndex) {
            if (this.props.onDataPaginated) {
                this.props.onDataPaginated(newIndex, newIndex * this.state.maxPerPage, Math.min((newIndex + 1) * this.state.maxPerPage - 1, this.props.totalCount - 1));
                this.setState({ currentPage: newIndex });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            return this.state.numberOfPages > 1 ? _react2.default.createElement(
                'ul',
                { className: 'pagination' },
                [].concat(_toConsumableArray(Array(this.state.numberOfPages))).map(function (p, index) {
                    return _react2.default.createElement(
                        'li',
                        { key: index, className: (0, _classnames2.default)('pagination-item', { 'pagination-item--selected': _this2.state.currentPage === index }) },
                        _react2.default.createElement(
                            'a',
                            { onClick: function onClick() {
                                    return _this2.handleNext(index);
                                } },
                            index + 1
                        )
                    );
                })
            ) : null;
        }
    }]);

    return Pagination;
}(_react2.default.Component);

Pagination.propTypes = {
    totalCount: _propTypes2.default.number.isRequired,
    page: _propTypes2.default.number.isRequired,
    maxPerPage: _propTypes2.default.number,
    onDataPaginated: _propTypes2.default.func
};
exports.default = Pagination;

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var scrollIntoView = exports.scrollIntoView = function scrollIntoView(elem, cb) {
    var animate = function animate(start, from, to, duration) {
        var time = Math.min(1, (Date.now() - start) / duration);
        var eased = 0.5 * (1 - Math.cos(Math.PI * time));

        document.scrollingElement.scrollTop = eased * (to - from) + from;

        if (time < 1) {
            setTimeout(function () {
                return animate(start, from, to, duration);
            }, 0);
        } else if (cb) {
            cb();
        }
    };

    animate(Date.now(), document.scrollingElement.scrollTop, elem.offsetTop, 1000);
};

var currentScrollTop = exports.currentScrollTop = function currentScrollTop() {
    return document.scrollingElement.scrollTop;
};

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _reactClickOutside = __webpack_require__(93);

var _reactClickOutside2 = _interopRequireDefault(_reactClickOutside);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ClickOutside = function (_PureComponent) {
    _inherits(ClickOutside, _PureComponent);

    function ClickOutside() {
        _classCallCheck(this, ClickOutside);

        return _possibleConstructorReturn(this, (ClickOutside.__proto__ || Object.getPrototypeOf(ClickOutside)).apply(this, arguments));
    }

    _createClass(ClickOutside, [{
        key: 'handleClickOutside',
        value: function handleClickOutside() {
            if (this.props.onClickOutside) {
                this.props.onClickOutside();
            }
        }
    }, {
        key: 'render',
        value: function render() {
            return this.props.children;
        }
    }]);

    return ClickOutside;
}(_react.PureComponent);

ClickOutside.propTypes = {
    onClickOutside: _propTypes2.default.func,
    children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node])
};
exports.default = (0, _reactClickOutside2.default)(ClickOutside);

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/Logo.a2e87dd3.svg";

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouterPropTypes = __webpack_require__(4);

var _reactRouterPropTypes2 = _interopRequireDefault(_reactRouterPropTypes);

var _reactStatic = __webpack_require__(5);

var _BottomSticky = __webpack_require__(18);

var _BottomSticky2 = _interopRequireDefault(_BottomSticky);

var _DropSelector = __webpack_require__(99);

var _DropSelector2 = _interopRequireDefault(_DropSelector);

var _ScrollInContainer = __webpack_require__(27);

var _ScrollInContainer2 = _interopRequireDefault(_ScrollInContainer);

var _Feedback = __webpack_require__(20);

var _Feedback2 = _interopRequireDefault(_Feedback);

var _Navigator = __webpack_require__(100);

var _Navigator2 = _interopRequireDefault(_Navigator);

var _SideMenu = __webpack_require__(13);

var _SideMenu2 = _interopRequireDefault(_SideMenu);

var _SubHeader = __webpack_require__(101);

var _SubHeader2 = _interopRequireDefault(_SubHeader);

var _TableOfContents = __webpack_require__(102);

var _TableOfContents2 = _interopRequireDefault(_TableOfContents);

var _TreeMenu = __webpack_require__(103);

var _TreeMenu2 = _interopRequireDefault(_TreeMenu);

var _VersionPicker = __webpack_require__(104);

var _VersionPicker2 = _interopRequireDefault(_VersionPicker);

var _Markdown = __webpack_require__(29);

var _Markdown2 = _interopRequireDefault(_Markdown);

var _StickyHeader = __webpack_require__(23);

var _StickyHeader2 = _interopRequireDefault(_StickyHeader);

var _api = __webpack_require__(9);

var _localStorage = __webpack_require__(14);

var _projects = __webpack_require__(8);

var _propTypes3 = __webpack_require__(3);

var _search = __webpack_require__(10);

var _Container = __webpack_require__(15);

var _Container2 = _interopRequireDefault(_Container);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Doc = function (_React$Component) {
    _inherits(Doc, _React$Component);

    function Doc(props) {
        _classCallCheck(this, Doc);

        var _this = _possibleConstructorReturn(this, (Doc.__proto__ || Object.getPrototypeOf(Doc)).call(this, props));

        _this.state = {
            projectFullURL: '',
            projectFolder: '',
            projectVersion: '',
            projectDocParts: [],
            projectDoc: '',
            projectDocTitle: '',
            projectVersions: [],
            projectVersionPages: [],
            pageTableOfContents: [],
            isMenuOpen: false
        };

        _this.changeVersion = _this.changeVersion.bind(_this);
        _this.handleBurgerClick = _this.handleBurgerClick.bind(_this);
        _this.handleContentChanged = _this.handleContentChanged.bind(_this);
        return _this;
    }

    _createClass(Doc, [{
        key: 'changeVersion',
        value: function changeVersion(newVersion) {
            var projectParts = (0, _projects.parseProjectUrl)(this.state.projectFullURL);
            var newUrl = (0, _projects.replaceVersion)(projectParts, newVersion, this.props.projects);
            if (newUrl) {
                this.props.history.push(newUrl);
                this.setState({ projectVersion: newVersion });
            }
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            var projectParts = (0, _projects.parseProjectUrl)(this.props.location.pathname);

            this.setState(_extends({}, projectParts, {
                projectVersions: (0, _projects.getVersionsUrl)(projectParts, this.props.projects),
                projectVersionPages: (0, _projects.getProjectVersionPagesUrl)(projectParts, projectParts.projectVersion, this.props.projects),
                pageTableOfContents: (0, _projects.createPageTableOfContents)(projectParts, this.props.projects)
            }));

            // We must store last path in here as when we create react-static
            // there is no other way of getting where we were for 404 logging
            (0, _localStorage.localStorageSet)('lastDocPath', this.props.location.pathname);

            // Trigger the search index load here so a search is quicker
            (0, _search.initCorpusIndex)();
        }
    }, {
        key: 'handleBurgerClick',
        value: function handleBurgerClick() {
            this.setState({ isMenuOpen: !this.state.isMenuOpen });
        }
    }, {
        key: 'handleContentChanged',
        value: function handleContentChanged(itemCount) {
            // If the markdown has triggered a content change it must have
            // dynamic content, if the default toc only has the 'introduction'
            // entry see if there is any other h2 entries we can use from the dynamic content
            var projectParts = (0, _projects.parseProjectUrl)(this.props.location.pathname);

            var toc = (0, _projects.createPageTableOfContents)(projectParts, this.props.projects);

            if (itemCount > 0) {
                var markdownHeaders = document.querySelectorAll('.markdown__wrapper h2');
                if (markdownHeaders && markdownHeaders.length > 0) {
                    for (var i = 0; i < markdownHeaders.length; i++) {
                        toc.push({ name: markdownHeaders[i].innerText, link: '#' + markdownHeaders[i].id });
                    }
                }
            }

            this.setState({
                pageTableOfContents: toc
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            return _react2.default.createElement(
                _Container2.default,
                this.props,
                _react2.default.createElement(
                    _reactStatic.Head,
                    null,
                    _react2.default.createElement(
                        'title',
                        null,
                        this.props.title + ' | ' + this.props.viewData.siteName
                    )
                ),
                _react2.default.createElement(_StickyHeader2.default, {
                    history: this.props.history,
                    onBurgerClick: this.handleBurgerClick,
                    viewData: this.props.viewData
                }),
                _react2.default.createElement(_SideMenu2.default, {
                    isMenuOpen: this.state.isMenuOpen,
                    projects: this.props.projects,
                    onCloseClick: this.handleBurgerClick,
                    highlightedItem: this.state.projectFullURL }),
                _react2.default.createElement(_SubHeader2.default, {
                    projects: this.props.projects,
                    pathname: this.props.location.pathname
                }),
                _react2.default.createElement(_VersionPicker2.default, {
                    versions: this.state.projectVersions,
                    currentVersion: this.state.projectVersion,
                    onChange: function onChange(newVersion) {
                        return _this2.changeVersion(newVersion);
                    }
                }),
                _react2.default.createElement(
                    'div',
                    { className: 'layouts--3-column' },
                    _react2.default.createElement(
                        'section',
                        { className: 'left-column' },
                        _react2.default.createElement(_DropSelector2.default, {
                            items: (0, _projects.createProjectLinks)(this.props.projects),
                            currentName: (0, _projects.getProjectTitle)(this.state, this.props.projects),
                            style: { marginBottom: '30px' }
                        }),
                        _react2.default.createElement(_TreeMenu2.default, {
                            menuItems: this.state.projectVersionPages,
                            highlightedItem: this.state.projectFullURL
                        })
                    ),
                    _react2.default.createElement(
                        'section',
                        { className: 'middle-column' },
                        _react2.default.createElement(
                            'div',
                            { className: 'middle-toc' },
                            _react2.default.createElement(_TableOfContents2.default, { items: this.state.pageTableOfContents, title: '\u3053\u306E\u30DA\u30FC\u30B8\u306E\u7BC0', compact: true, history: this.props.history })
                        ),
                        _react2.default.createElement(_Markdown2.default, {
                            source: this.props.markdown,
                            query: (0, _search.extractSearchQuery)(this.props.location),
                            highlights: (0, _search.extractHighlights)(this.props.location),
                            apiEndpoint: this.props.apiEndpoint,
                            googleMapsKey: this.props.googleMapsKey,
                            onContentChanged: this.handleContentChanged,
                            history: this.props.history })
                    ),
                    _react2.default.createElement(
                        'section',
                        { className: 'right-column' },
                        _react2.default.createElement(
                            _ScrollInContainer2.default,
                            { bottomOffset: 200 },
                            _react2.default.createElement(_TableOfContents2.default, { items: this.state.pageTableOfContents, title: '\u3053\u306E\u30DA\u30FC\u30B8\u306E\u7BC0', history: this.props.history })
                        )
                    ),
                    this.props.viewData.enableFeedback && _react2.default.createElement(
                        _BottomSticky2.default,
                        { zIndex: 10, horizontalAlign: 'right' },
                        _react2.default.createElement(
                            'div',
                            { className: 'tablet-down-hidden' },
                            _react2.default.createElement(_Feedback2.default, { onSubmit: function onSubmit(data) {
                                    return (0, _api.submitFeedback)(_this2.props.apiEndpoint, _this2.props.location.pathname, data);
                                } })
                        )
                    )
                ),
                _react2.default.createElement(_Navigator2.default, {
                    projects: this.props.projects,
                    pathname: this.props.location.pathname
                })
            );
        }
    }]);

    return Doc;
}(_react2.default.Component);

Doc.propTypes = {
    title: _propTypes2.default.string.isRequired,
    viewData: _propTypes3.ViewDataPropTypes.isRequired,
    apiEndpoint: _propTypes2.default.string.isRequired,
    googleMapsKey: _propTypes2.default.string.isRequired,
    markdown: _propTypes2.default.string.isRequired,
    projects: _propTypes3.ProjectsPropTypes.isRequired,
    history: _reactRouterPropTypes2.default.history,
    location: _reactRouterPropTypes2.default.location
};
exports.default = (0, _reactStatic.withSiteData)((0, _reactStatic.withRouteData)((0, _reactStatic.withRouter)(Doc)));

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _lunr = __webpack_require__(105);

var _lunr2 = _interopRequireDefault(_lunr);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouterPropTypes = __webpack_require__(4);

var _reactRouterPropTypes2 = _interopRequireDefault(_reactRouterPropTypes);

var _reactStatic = __webpack_require__(5);

var _InputSearch = __webpack_require__(22);

var _InputSearch2 = _interopRequireDefault(_InputSearch);

var _BottomSticky = __webpack_require__(18);

var _BottomSticky2 = _interopRequireDefault(_BottomSticky);

var _Feedback = __webpack_require__(20);

var _Feedback2 = _interopRequireDefault(_Feedback);

var _Pagination = __webpack_require__(35);

var _Pagination2 = _interopRequireDefault(_Pagination);

var _SearchResult = __webpack_require__(106);

var _SearchResult2 = _interopRequireDefault(_SearchResult);

var _SideMenu = __webpack_require__(13);

var _SideMenu2 = _interopRequireDefault(_SideMenu);

var _StickyHeader = __webpack_require__(23);

var _StickyHeader2 = _interopRequireDefault(_StickyHeader);

var _api = __webpack_require__(9);

var _localStorage = __webpack_require__(14);

var _propTypes3 = __webpack_require__(3);

var _search = __webpack_require__(10);

var _Container = __webpack_require__(15);

var _Container2 = _interopRequireDefault(_Container);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Search = function (_React$Component) {
    _inherits(Search, _React$Component);

    function Search(props) {
        _classCallCheck(this, Search);

        var _this = _possibleConstructorReturn(this, (Search.__proto__ || Object.getPrototypeOf(Search)).call(this, props));

        _this.state = {
            isMenuOpen: false,
            foundResult: [],
            page: 0,
            indexStart: 0,
            indexEnd: 9,
            query: (0, _search.extractSearchQuery)(_this.props.location)
        };

        _this.onSearch = _this.onSearch.bind(_this);
        _this.handleKeyUp = _this.handleKeyUp.bind(_this);
        _this.onDataPaginated = _this.onDataPaginated.bind(_this);
        _this.search = _this.search.bind(_this);
        _this.handleBurgerClick = _this.handleBurgerClick.bind(_this);
        return _this;
    }

    _createClass(Search, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.corpusIndex = (0, _search.initCorpusIndex)();

            this.search();
            // We must store last path in here as when we create react-static
            // there is no other way of getting where we were for 404 logging
            (0, _localStorage.localStorageSet)('lastDocPath', this.props.location.pathname);
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps) {
            var _this2 = this;

            if (this.props.location.search !== prevProps.location.search) {
                this.setState({ query: (0, _search.extractSearchQuery)(this.props.location) }, function () {
                    _this2.search();
                });
            }
        }
    }, {
        key: 'handleBurgerClick',
        value: function handleBurgerClick() {
            this.setState({ isMenuOpen: !this.state.isMenuOpen });
        }
    }, {
        key: 'onDataPaginated',
        value: function onDataPaginated(pageIndex, start, end) {
            this.setState({ page: pageIndex, indexStart: start, indexEnd: end });
            var target = document.querySelector('#search-top');
            target.scrollIntoView({ behavior: 'smooth', block: 'start' });
        }
    }, {
        key: 'onSearch',
        value: function onSearch(query) {
            var _this3 = this;

            this.setState({ query: query }, function () {
                _this3.search();
            });

            this.props.history.replace('?' + (0, _search.constructSearchQuery)(query));
        }
    }, {
        key: 'handleKeyUp',
        value: function handleKeyUp(e) {
            if (e.key === 'Escape') {
                this.setState({ inputExpanded: false });
            }
        }
    }, {
        key: 'search',
        value: function search() {
            var _this4 = this;

            var searchResults = void 0;
            if (this.state.query) {
                var idx = _lunr2.default.Index.load(this.corpusIndex.index);
                var results = idx.search('*' + this.state.query + '*~2');
                searchResults = results.map(function (result) {
                    return _extends({}, _this4.corpusIndex.documents[result.ref], {
                        matches: Object.keys(result.matchData.metadata)
                    });
                });
            }

            if (searchResults && searchResults.length > 0) {
                this.setState({ foundResult: searchResults, indexStart: 0, indexEnd: Math.min(9, searchResults.length - 1) });
            } else {
                this.setState({ foundResult: [], indexStart: 0, indexEnd: 0 });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this5 = this;

            return _react2.default.createElement(
                _Container2.default,
                this.props,
                _react2.default.createElement(
                    _reactStatic.Head,
                    null,
                    _react2.default.createElement(
                        'title',
                        null,
                        'Search Results | ',
                        this.props.viewData.siteName
                    )
                ),
                _react2.default.createElement('div', { id: 'search-top' }),
                _react2.default.createElement(_StickyHeader2.default, {
                    history: this.props.history,
                    onBurgerClick: this.handleBurgerClick,
                    viewData: this.props.viewData
                }),
                _react2.default.createElement(_SideMenu2.default, {
                    isMenuOpen: this.state.isMenuOpen,
                    projects: this.props.projects,
                    onCloseClick: this.handleBurgerClick }),
                _react2.default.createElement(
                    'section',
                    { className: 'sub-header__wrapper' },
                    _react2.default.createElement(
                        'section',
                        { className: 'sub-header' },
                        _react2.default.createElement(
                            'span',
                            { className: 'sub-header__title sub-header-title__fixed' },
                            'Search results'
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'layouts--1-column' },
                    _react2.default.createElement(
                        'div',
                        { className: 'middle-column' },
                        _react2.default.createElement(
                            'div',
                            { className: 'input-wrapper-basic' },
                            _react2.default.createElement(_InputSearch2.default, {
                                query: this.state.query,
                                className: 'input-search-basic',
                                placeholder: 'Search for topics',
                                onKeyUp: this.handleKeyUp,
                                onSearch: this.onSearch
                            })
                        ),
                        _react2.default.createElement(_SearchResult2.default, {
                            foundResult: this.state.foundResult,
                            indexStart: this.state.indexStart,
                            indexEnd: this.state.indexEnd,
                            query: this.state.query
                        }),
                        _react2.default.createElement(
                            'div',
                            { style: { display: 'flex', justifyContent: 'center', marginTop: '30px' } },
                            _react2.default.createElement(_Pagination2.default, {
                                totalCount: this.state.foundResult && this.state.foundResult.length,
                                onDataPaginated: this.onDataPaginated
                            })
                        )
                    ),
                    this.props.viewData.enableFeedback && _react2.default.createElement(
                        _BottomSticky2.default,
                        { zIndex: 10, horizontalAlign: 'right' },
                        _react2.default.createElement(
                            'div',
                            { className: 'tablet-down-hidden' },
                            _react2.default.createElement(_Feedback2.default, { onSubmit: function onSubmit(data) {
                                    return (0, _api.submitFeedback)(_this5.props.apiEndpoint, _this5.props.location.pathname, data);
                                } })
                        )
                    )
                )
            );
        }
    }]);

    return Search;
}(_react2.default.Component);

Search.propTypes = {
    viewData: _propTypes3.ViewDataPropTypes.isRequired,
    apiEndpoint: _propTypes2.default.string.isRequired,
    projects: _propTypes3.ProjectsPropTypes.isRequired,
    history: _reactRouterPropTypes2.default.history,
    location: _reactRouterPropTypes2.default.location
};
exports.default = (0, _reactStatic.withSiteData)((0, _reactStatic.withRouteData)((0, _reactStatic.withRouter)(Search)));

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouterPropTypes = __webpack_require__(4);

var _reactRouterPropTypes2 = _interopRequireDefault(_reactRouterPropTypes);

var _reactStatic = __webpack_require__(5);

var _ParallaxContainer = __webpack_require__(107);

var _ParallaxContainer2 = _interopRequireDefault(_ParallaxContainer);

var _SideMenu = __webpack_require__(13);

var _SideMenu2 = _interopRequireDefault(_SideMenu);

var _StickyHeader = __webpack_require__(23);

var _StickyHeader2 = _interopRequireDefault(_StickyHeader);

var _api = __webpack_require__(9);

var _localStorage = __webpack_require__(14);

var _propTypes3 = __webpack_require__(3);

var _Container = __webpack_require__(15);

var _Container2 = _interopRequireDefault(_Container);

__webpack_require__(110);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var NotFound = function (_React$PureComponent) {
    _inherits(NotFound, _React$PureComponent);

    function NotFound(props) {
        _classCallCheck(this, NotFound);

        var _this = _possibleConstructorReturn(this, (NotFound.__proto__ || Object.getPrototypeOf(NotFound)).call(this, props));

        _this.state = {
            isMenuOpen: false
        };

        _this.handleBurgerClick = _this.handleBurgerClick.bind(_this);
        return _this;
    }

    _createClass(NotFound, [{
        key: 'handleBurgerClick',
        value: function handleBurgerClick() {
            this.setState({ isMenuOpen: !this.state.isMenuOpen });
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            // We must get the last path in here as when we create react-static
            // there is no other way of getting where we were for 404 logging
            // this can be empty
            var lastLocation = (0, _localStorage.localStorageGet)('lastDocPath');

            (0, _api.submitMissing)(this.props.apiEndpoint, this.props.location.pathname, lastLocation);
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                _Container2.default,
                this.props,
                _react2.default.createElement(
                    _reactStatic.Head,
                    null,
                    _react2.default.createElement(
                        'title',
                        null,
                        'Not Found | ',
                        this.props.viewData.siteName
                    )
                ),
                _react2.default.createElement(_StickyHeader2.default, {
                    history: this.props.history,
                    onBurgerClick: this.handleBurgerClick,
                    viewData: this.props.viewData
                }),
                _react2.default.createElement(_SideMenu2.default, {
                    isMenuOpen: this.state.isMenuOpen,
                    projects: this.props.projects,
                    onCloseClick: this.handleBurgerClick }),
                _react2.default.createElement(
                    'section',
                    { className: 'not-found' },
                    _react2.default.createElement(
                        'article',
                        null,
                        _react2.default.createElement(
                            'h1',
                            null,
                            '404'
                        ),
                        _react2.default.createElement(
                            'h2',
                            null,
                            'We\u2019re sorry, but the page you were looking for can\u2019t be found.'
                        ),
                        _react2.default.createElement(
                            'p',
                            null,
                            'This issue has been automatically logged.'
                        ),
                        _react2.default.createElement(
                            'nav',
                            null,
                            _react2.default.createElement(
                                'a',
                                { href: '#', onClick: this.props.history.goBack, className: 'button button--secondary' },
                                'Previous'
                            ),
                            _react2.default.createElement(
                                'a',
                                { href: '/', className: 'button button--secondary' },
                                'Home'
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'aside',
                        null,
                        _react2.default.createElement(
                            _ParallaxContainer2.default,
                            null,
                            _react2.default.createElement(
                                'div',
                                { 'data-depth': '-0.02' },
                                _react2.default.createElement('img', { src: '/assets/document.svg' })
                            ),
                            _react2.default.createElement(
                                'div',
                                { 'data-depth': '-0.04' },
                                _react2.default.createElement('img', { src: '/assets/document.svg' })
                            ),
                            _react2.default.createElement(
                                'div',
                                { 'data-depth': '-0.06' },
                                _react2.default.createElement('img', { src: '/assets/document.svg' })
                            ),
                            _react2.default.createElement(
                                'div',
                                { 'data-depth': '0.08' },
                                _react2.default.createElement('img', { src: '/assets/document.svg' })
                            ),
                            _react2.default.createElement(
                                'div',
                                { 'data-depth': '-0.02' },
                                _react2.default.createElement('img', { src: '/assets/document.svg' })
                            ),
                            _react2.default.createElement(
                                'div',
                                { 'data-depth': '-0.06' },
                                _react2.default.createElement('img', { src: '/assets/document.svg' })
                            ),
                            _react2.default.createElement(
                                'div',
                                { 'data-depth': '0.08' },
                                _react2.default.createElement('img', { src: '/assets/document.svg' })
                            )
                        )
                    )
                )
            );
        }
    }]);

    return NotFound;
}(_react2.default.PureComponent);

NotFound.propTypes = {
    viewData: _propTypes3.ViewDataPropTypes.isRequired,
    apiEndpoint: _propTypes2.default.string.isRequired,
    projects: _propTypes3.ProjectsPropTypes.isRequired,
    history: _reactRouterPropTypes2.default.history,
    location: _reactRouterPropTypes2.default.location
};
exports.default = (0, _reactStatic.withSiteData)((0, _reactStatic.withRouteData)((0, _reactStatic.withRouter)(NotFound)));

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(16);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _App = __webpack_require__(43);

var _App2 = _interopRequireDefault(_App);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Export your top level component as JSX (for static rendering)
exports.default = _App2.default;

// Render your app

if (typeof document !== 'undefined') {
    var renderMethod =  false ? _reactDom2.default.render : _reactDom2.default.hydrate || _reactDom2.default.render;
    var render = function render(Comp) {
        renderMethod(_react2.default.createElement(Comp, null), document.getElementById('root'));
    };

    // Render!
    render(_App2.default);
}

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(44);

var _nprogress = __webpack_require__(45);

var _nprogress2 = _interopRequireDefault(_nprogress);

__webpack_require__(46);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactHotLoader = __webpack_require__(47);

var _reactStatic = __webpack_require__(5);

var _reactStaticRoutes = __webpack_require__(48);

var _reactStaticRoutes2 = _interopRequireDefault(_reactStaticRoutes);

__webpack_require__(111);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var App = function (_React$Component) {
    _inherits(App, _React$Component);

    function App() {
        _classCallCheck(this, App);

        return _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).apply(this, arguments));
    }

    _createClass(App, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            (0, _reactStatic.onLoading)(function (loading) {
                if (loading) {
                    _nprogress2.default.start();
                } else {
                    _nprogress2.default.done();
                }
            });
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                _reactStatic.Router,
                null,
                _react2.default.createElement(_reactStaticRoutes2.default, null)
            );
        }
    }]);

    return App;
}(_react2.default.Component);

exports.default = (0, _reactHotLoader.hot)(module)(App);
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(17)(module)))

/***/ }),
/* 44 */
/***/ (function(module, exports) {

module.exports = require("iota-css-theme");

/***/ }),
/* 45 */
/***/ (function(module, exports) {

module.exports = require("nprogress");

/***/ }),
/* 46 */
/***/ (function(module, exports) {

module.exports = require("nprogress/nprogress.css");

/***/ }),
/* 47 */
/***/ (function(module, exports) {

module.exports = require("react-hot-loader");

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__dirname) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _path2 = __webpack_require__(49);

var _path3 = _interopRequireDefault(_path2);

var _importCss2 = __webpack_require__(50);

var _importCss3 = _interopRequireDefault(_importCss2);

var _universalImport2 = __webpack_require__(51);

var _universalImport3 = _interopRequireDefault(_universalImport2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouterDom = __webpack_require__(52);

var _reactUniversalComponent = __webpack_require__(53);

var _reactUniversalComponent2 = _interopRequireDefault(_reactUniversalComponent);

var _reactStatic = __webpack_require__(5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

(0, _reactUniversalComponent.setHasBabelPlugin)();

var universalOptions = {
  loading: function loading() {
    return null;
  },
  error: function error(props) {
    console.error(props.error);
    return _react2.default.createElement(
      'div',
      null,
      'An error occurred loading this page\'s template. More information is available in the console.'
    );
  }
};

var t_0 = (0, _reactUniversalComponent2.default)((0, _universalImport3.default)({
  id: '../src/containers/Home',
  file: '/home/circleci/app/dist/react-static-routes.js',
  load: function load() {
    return Promise.all([new Promise(function(resolve) { resolve(); }).then(__webpack_require__.bind(null, 25)), (0, _importCss3.default)('src/containers/Home', {
      disableWarnings: true
    })]).then(function (proms) {
      return proms[0];
    });
  },
  path: function path() {
    return _path3.default.join(__dirname, '../src/containers/Home');
  },
  resolve: function resolve() {
    return /*require.resolve*/(25);
  },
  chunkName: function chunkName() {
    return 'src/containers/Home';
  }
}), universalOptions);
var t_1 = (0, _reactUniversalComponent2.default)((0, _universalImport3.default)({
  id: '../src/containers/Doc',
  file: '/home/circleci/app/dist/react-static-routes.js',
  load: function load() {
    return Promise.all([new Promise(function(resolve) { resolve(); }).then(__webpack_require__.bind(null, 39)), (0, _importCss3.default)('src/containers/Doc', {
      disableWarnings: true
    })]).then(function (proms) {
      return proms[0];
    });
  },
  path: function path() {
    return _path3.default.join(__dirname, '../src/containers/Doc');
  },
  resolve: function resolve() {
    return /*require.resolve*/(39);
  },
  chunkName: function chunkName() {
    return 'src/containers/Doc';
  }
}), universalOptions);
var t_2 = (0, _reactUniversalComponent2.default)((0, _universalImport3.default)({
  id: '../src/containers/Search',
  file: '/home/circleci/app/dist/react-static-routes.js',
  load: function load() {
    return Promise.all([new Promise(function(resolve) { resolve(); }).then(__webpack_require__.bind(null, 40)), (0, _importCss3.default)('src/containers/Search', {
      disableWarnings: true
    })]).then(function (proms) {
      return proms[0];
    });
  },
  path: function path() {
    return _path3.default.join(__dirname, '../src/containers/Search');
  },
  resolve: function resolve() {
    return /*require.resolve*/(40);
  },
  chunkName: function chunkName() {
    return 'src/containers/Search';
  }
}), universalOptions);
var t_3 = (0, _reactUniversalComponent2.default)((0, _universalImport3.default)({
  id: '../src/containers/NotFound',
  file: '/home/circleci/app/dist/react-static-routes.js',
  load: function load() {
    return Promise.all([new Promise(function(resolve) { resolve(); }).then(__webpack_require__.bind(null, 41)), (0, _importCss3.default)('src/containers/NotFound', {
      disableWarnings: true
    })]).then(function (proms) {
      return proms[0];
    });
  },
  path: function path() {
    return _path3.default.join(__dirname, '../src/containers/NotFound');
  },
  resolve: function resolve() {
    return /*require.resolve*/(41);
  },
  chunkName: function chunkName() {
    return 'src/containers/NotFound';
  }
}), universalOptions);

// Template Map
global.componentsByTemplateID = global.componentsByTemplateID || [t_0, t_1, t_2, t_3];

// Template Tree
global.templateIDsByPath = global.templateIDsByPath || {
  '404': 3

  // Get template for given path
};var getComponentForPath = function getComponentForPath(path) {
  path = (0, _reactStatic.cleanPath)(path);
  return global.componentsByTemplateID[global.templateIDsByPath[path]];
};

global.reactStaticGetComponentForPath = getComponentForPath;
global.reactStaticRegisterTemplateIDForPath = function (path, id) {
  global.templateIDsByPath[path] = id;
};

var Routes = function (_Component) {
  _inherits(Routes, _Component);

  function Routes() {
    _classCallCheck(this, Routes);

    return _possibleConstructorReturn(this, (Routes.__proto__ || Object.getPrototypeOf(Routes)).apply(this, arguments));
  }

  _createClass(Routes, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          Comp = _props.component,
          render = _props.render,
          children = _props.children;


      var getFullComponentForPath = function getFullComponentForPath(path) {
        var Comp = getComponentForPath(path);
        var is404 = path === '404';
        if (!Comp) {
          is404 = true;
          Comp = getComponentForPath('404');
        }
        return function (newProps) {
          return Comp ? _react2.default.createElement(Comp, _extends({}, newProps, is404 ? { is404: true } : {})) : null;
        };
      };

      var renderProps = {
        componentsByTemplateID: global.componentsByTemplateID,
        templateIDsByPath: global.templateIDsByPath,
        getComponentForPath: getFullComponentForPath
      };

      if (Comp) {
        return _react2.default.createElement(Comp, renderProps);
      }

      if (render || children) {
        return (render || children)(renderProps);
      }

      // This is the default auto-routing renderer
      return _react2.default.createElement(_reactRouterDom.Route, { path: '*', render: function render(props) {
          var Comp = getFullComponentForPath(props.location.pathname);
          // If Comp is used as a component here, it triggers React to re-mount the entire
          // component tree underneath during reconciliation, losing all internal state.
          // By unwrapping it here we keep the real, static component exposed directly to React.
          return Comp && Comp(_extends({}, props, { key: props.location.pathname }));
        } });
    }
  }]);

  return Routes;
}(_react.Component);

exports.default = Routes;
/* WEBPACK VAR INJECTION */}.call(exports, "/"))

/***/ }),
/* 49 */
/***/ (function(module, exports) {

module.exports = require("path");

/***/ }),
/* 50 */
/***/ (function(module, exports) {

module.exports = require("babel-plugin-universal-import/importCss");

/***/ }),
/* 51 */
/***/ (function(module, exports) {

module.exports = require("babel-plugin-universal-import/universalImport");

/***/ }),
/* 52 */
/***/ (function(module, exports) {

module.exports = require("react-router-dom");

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.setHasBabelPlugin = exports.ReportChunks = exports.MODULE_IDS = exports.CHUNK_NAMES = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _requireUniversalModule = __webpack_require__(54);

Object.defineProperty(exports, 'CHUNK_NAMES', {
  enumerable: true,
  get: function get() {
    return _requireUniversalModule.CHUNK_NAMES;
  }
});
Object.defineProperty(exports, 'MODULE_IDS', {
  enumerable: true,
  get: function get() {
    return _requireUniversalModule.MODULE_IDS;
  }
});

var _reportChunks = __webpack_require__(55);

Object.defineProperty(exports, 'ReportChunks', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_reportChunks).default;
  }
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _hoistNonReactStatics = __webpack_require__(56);

var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

var _requireUniversalModule2 = _interopRequireDefault(_requireUniversalModule);

var _utils = __webpack_require__(24);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var hasBabelPlugin = false;

var isHMR = function isHMR() {
  return (
    // $FlowIgnore
    module.hot && (module.hot.data || module.hot.status() === 'apply')
  );
};

var setHasBabelPlugin = exports.setHasBabelPlugin = function setHasBabelPlugin() {
  hasBabelPlugin = true;
};

function universal(component) {
  var _class, _temp;

  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var _opts$loading = opts.loading,
      Loading = _opts$loading === undefined ? _utils.DefaultLoading : _opts$loading,
      _opts$error = opts.error,
      Err = _opts$error === undefined ? _utils.DefaultError : _opts$error,
      _opts$minDelay = opts.minDelay,
      minDelay = _opts$minDelay === undefined ? 0 : _opts$minDelay,
      _opts$alwaysDelay = opts.alwaysDelay,
      alwaysDelay = _opts$alwaysDelay === undefined ? false : _opts$alwaysDelay,
      _opts$testBabelPlugin = opts.testBabelPlugin,
      testBabelPlugin = _opts$testBabelPlugin === undefined ? false : _opts$testBabelPlugin,
      _opts$loadingTransiti = opts.loadingTransition,
      loadingTransition = _opts$loadingTransiti === undefined ? true : _opts$loadingTransiti,
      options = _objectWithoutProperties(opts, ['loading', 'error', 'minDelay', 'alwaysDelay', 'testBabelPlugin', 'loadingTransition']);

  var isDynamic = hasBabelPlugin || testBabelPlugin;
  options.isDynamic = isDynamic;
  options.modCache = {};
  options.promCache = {};

  return _temp = _class = function (_React$Component) {
    _inherits(UniversalComponent, _React$Component);

    _createClass(UniversalComponent, null, [{
      key: 'preload',

      /* eslint-enable react/sort-comp */

      /* eslint-disable react/sort-comp */
      value: function preload(props) {
        var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        props = props || {};

        var _req = (0, _requireUniversalModule2.default)(component, options, props),
            requireAsync = _req.requireAsync,
            requireSync = _req.requireSync;

        var Component = void 0;

        try {
          Component = requireSync(props, context);
        } catch (error) {
          return Promise.reject(error);
        }

        return Promise.resolve().then(function () {
          if (Component) return Component;
          return requireAsync(props, context);
        }).then(function (Component) {
          (0, _hoistNonReactStatics2.default)(UniversalComponent, Component, { preload: true });
          return Component;
        });
      }
    }]);

    function UniversalComponent(props, context) {
      _classCallCheck(this, UniversalComponent);

      var _this = _possibleConstructorReturn(this, (UniversalComponent.__proto__ || Object.getPrototypeOf(UniversalComponent)).call(this, props, context));

      _this.update = function (state) {
        var isMount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        var isSync = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        var isServer = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

        if (!_this._mounted) return;
        if (!state.error) state.error = null;

        _this.handleAfter(state, isMount, isSync, isServer);
      };

      _this.state = { error: null };
      return _this;
    }

    _createClass(UniversalComponent, [{
      key: 'componentWillMount',
      value: function componentWillMount() {
        this._mounted = true;

        var _req2 = (0, _requireUniversalModule2.default)(component, options, this.props),
            addModule = _req2.addModule,
            requireSync = _req2.requireSync,
            requireAsync = _req2.requireAsync,
            asyncOnly = _req2.asyncOnly;

        var Component = void 0;

        try {
          Component = requireSync(this.props, this.context);
        } catch (error) {
          return this.update({ error: error });
        }

        this._asyncOnly = asyncOnly;
        var chunkName = addModule(this.props); // record the module for SSR flushing :)

        if (this.context.report) {
          this.context.report(chunkName);
        }

        if (Component || _utils.isServer) {
          this.handleBefore(true, true, _utils.isServer);
          this.update({ Component: Component }, true, true, _utils.isServer);
          return;
        }

        this.handleBefore(true, false);
        this.requireAsync(requireAsync, this.props, true);
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        this._mounted = false;
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        var _this2 = this;

        if (isDynamic || this._asyncOnly) {
          var _req3 = (0, _requireUniversalModule2.default)(component, options, nextProps, this.props),
              requireSync = _req3.requireSync,
              requireAsync = _req3.requireAsync,
              shouldUpdate = _req3.shouldUpdate;

          if (shouldUpdate(nextProps, this.props)) {
            var Component = void 0;

            try {
              Component = requireSync(nextProps, this.context);
            } catch (error) {
              return this.update({ error: error });
            }

            this.handleBefore(false, !!Component);

            if (!Component) {
              return this.requireAsync(requireAsync, nextProps);
            }

            var state = { Component: Component };

            if (alwaysDelay) {
              if (loadingTransition) this.update({ Component: null }); // display `loading` during componentWillReceiveProps
              setTimeout(function () {
                return _this2.update(state, false, true);
              }, minDelay);
              return;
            }

            this.update(state, false, true);
          } else if (isHMR()) {
            var _Component = requireSync(nextProps, this.context);
            this.setState({ Component: function Component() {
                return null;
              } }); // HMR /w Redux and HOCs can be finicky, so we
            setTimeout(function () {
              return _this2.setState({ Component: _Component });
            }); // toggle components to insure updates occur
          }
        }
      }
    }, {
      key: 'requireAsync',
      value: function requireAsync(_requireAsync, props, isMount) {
        var _this3 = this;

        if (this.state.Component && loadingTransition) {
          this.update({ Component: null }); // display `loading` during componentWillReceiveProps
        }

        var time = new Date();

        _requireAsync(props, this.context).then(function (Component) {
          var state = { Component: Component };

          var timeLapsed = new Date() - time;
          if (timeLapsed < minDelay) {
            var extraDelay = minDelay - timeLapsed;
            return setTimeout(function () {
              return _this3.update(state, isMount);
            }, extraDelay);
          }

          _this3.update(state, isMount);
        }).catch(function (error) {
          return _this3.update({ error: error });
        });
      }
    }, {
      key: 'handleBefore',
      value: function handleBefore(isMount, isSync) {
        var isServer = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        if (this.props.onBefore) {
          var onBefore = this.props.onBefore;

          var info = { isMount: isMount, isSync: isSync, isServer: isServer };
          onBefore(info);
        }
      }
    }, {
      key: 'handleAfter',
      value: function handleAfter(state, isMount, isSync, isServer) {
        var Component = state.Component,
            error = state.error;


        if (Component && !error) {
          (0, _hoistNonReactStatics2.default)(UniversalComponent, Component, { preload: true });

          if (this.props.onAfter) {
            var onAfter = this.props.onAfter;

            var info = { isMount: isMount, isSync: isSync, isServer: isServer };
            onAfter(info, Component);
          }
        } else if (error && this.props.onError) {
          this.props.onError(error);
        }

        this.setState(state);
      }
    }, {
      key: 'render',
      value: function render() {
        var _state = this.state,
            error = _state.error,
            Component = _state.Component;

        var _props = this.props,
            isLoading = _props.isLoading,
            userError = _props.error,
            props = _objectWithoutProperties(_props, ['isLoading', 'error']);

        // user-provided props (e.g. for data-fetching loading):


        if (isLoading) {
          return (0, _utils.createElement)(Loading, props);
        } else if (userError) {
          return (0, _utils.createElement)(Err, _extends({}, props, { error: userError }));
        } else if (error) {
          return (0, _utils.createElement)(Err, _extends({}, props, { error: error }));
        } else if (Component) {
          // primary usage (for async import loading + errors):
          return (0, _utils.createElement)(Component, props);
        }

        return (0, _utils.createElement)(Loading, props);
      }
    }]);

    return UniversalComponent;
  }(_react2.default.Component), _class.contextTypes = {
    store: _propTypes2.default.object,
    report: _propTypes2.default.func
  }, _temp;
}
exports.default = universal;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(17)(module)))

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.clearChunks = exports.flushModuleIds = exports.flushChunkNames = exports.MODULE_IDS = exports.CHUNK_NAMES = undefined;
exports.default = requireUniversalModule;

var _utils = __webpack_require__(24);

var CHUNK_NAMES = exports.CHUNK_NAMES = new Set();
var MODULE_IDS = exports.MODULE_IDS = new Set();

function requireUniversalModule(universalConfig, options, props, prevProps) {
  var key = options.key,
      _options$timeout = options.timeout,
      timeout = _options$timeout === undefined ? 15000 : _options$timeout,
      onLoad = options.onLoad,
      onError = options.onError,
      isDynamic = options.isDynamic,
      modCache = options.modCache,
      promCache = options.promCache;


  var config = getConfig(isDynamic, universalConfig, options, props);
  var chunkName = config.chunkName,
      path = config.path,
      resolve = config.resolve,
      load = config.load;

  var asyncOnly = !path && !resolve || typeof chunkName === 'function';

  var requireSync = function requireSync(props, context) {
    var exp = (0, _utils.loadFromCache)(chunkName, props, modCache);

    if (!exp) {
      var mod = void 0;

      if (!(0, _utils.isWebpack)() && path) {
        var modulePath = (0, _utils.callForString)(path, props) || '';
        mod = (0, _utils.tryRequire)(modulePath);
      } else if ((0, _utils.isWebpack)() && resolve) {
        var weakId = (0, _utils.callForString)(resolve, props);

        if (__webpack_require__.m[weakId]) {
          mod = (0, _utils.tryRequire)(weakId);
        }
      }

      if (mod) {
        exp = (0, _utils.resolveExport)(mod, key, onLoad, chunkName, props, context, modCache, true);
      }
    }

    return exp;
  };

  var requireAsync = function requireAsync(props, context) {
    var exp = (0, _utils.loadFromCache)(chunkName, props, modCache);
    if (exp) return Promise.resolve(exp);

    var cachedPromise = (0, _utils.loadFromPromiseCache)(chunkName, props, promCache);
    if (cachedPromise) return cachedPromise;

    var prom = new Promise(function (res, rej) {
      var reject = function reject(error) {
        error = error || new Error('timeout exceeded');
        clearTimeout(timer);
        if (onError) {
          var _isServer = typeof window === 'undefined';
          var info = { isServer: _isServer };
          onError(error, info);
        }
        rej(error);
      };

      // const timer = timeout && setTimeout(reject, timeout)
      var timer = timeout && setTimeout(reject, timeout);

      var resolve = function resolve(mod) {
        clearTimeout(timer);

        var exp = (0, _utils.resolveExport)(mod, key, onLoad, chunkName, props, context, modCache);
        if (exp) return res(exp);

        reject(new Error('export not found'));
      };

      var request = load(props, { resolve: resolve, reject: reject });

      // if load doesn't return a promise, it must call resolveImport
      // itself. Most common is the promise implementation below.
      if (!request || typeof request.then !== 'function') return;
      request.then(resolve).catch(reject);
    });

    (0, _utils.cacheProm)(prom, chunkName, props, promCache);
    return prom;
  };

  var addModule = function addModule(props) {
    if (_utils.isServer || _utils.isTest) {
      if (chunkName) {
        var name = (0, _utils.callForString)(chunkName, props);
        if (name) CHUNK_NAMES.add(name);
        if (!_utils.isTest) return name; // makes tests way smaller to run both kinds
      }

      if ((0, _utils.isWebpack)()) {
        var weakId = (0, _utils.callForString)(resolve, props);
        if (weakId) MODULE_IDS.add(weakId);
        return weakId;
      }

      if (!(0, _utils.isWebpack)()) {
        var modulePath = (0, _utils.callForString)(path, props);
        if (modulePath) MODULE_IDS.add(modulePath);
        return modulePath;
      }
    }
  };

  var shouldUpdate = function shouldUpdate(next, prev) {
    var cacheKey = (0, _utils.callForString)(chunkName, next);

    var config = getConfig(isDynamic, universalConfig, options, prev);
    var prevCacheKey = (0, _utils.callForString)(config.chunkName, prev);

    return cacheKey !== prevCacheKey;
  };

  return {
    requireSync: requireSync,
    requireAsync: requireAsync,
    addModule: addModule,
    shouldUpdate: shouldUpdate,
    asyncOnly: asyncOnly
  };
}

var flushChunkNames = exports.flushChunkNames = function flushChunkNames() {
  var chunks = Array.from(CHUNK_NAMES);
  CHUNK_NAMES.clear();
  return chunks;
};

var flushModuleIds = exports.flushModuleIds = function flushModuleIds() {
  var ids = Array.from(MODULE_IDS);
  MODULE_IDS.clear();
  return ids;
};

var clearChunks = exports.clearChunks = function clearChunks() {
  CHUNK_NAMES.clear();
  MODULE_IDS.clear();
};

var getConfig = function getConfig(isDynamic, universalConfig, options, props) {
  if (isDynamic) {
    return typeof universalConfig === 'function' ? universalConfig(props) : universalConfig;
  }

  var load = typeof universalConfig === 'function' ? universalConfig : // $FlowIssue
  function () {
    return universalConfig;
  };

  return {
    file: 'default',
    id: options.id || 'default',
    chunkName: options.chunkName || 'default',
    resolve: options.resolve || '',
    path: options.path || '',
    load: load
  };
};

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ReportChunks = function (_React$Component) {
  _inherits(ReportChunks, _React$Component);

  function ReportChunks() {
    _classCallCheck(this, ReportChunks);

    return _possibleConstructorReturn(this, (ReportChunks.__proto__ || Object.getPrototypeOf(ReportChunks)).apply(this, arguments));
  }

  _createClass(ReportChunks, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        report: this.props.report
      };
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.Children.only(this.props.children);
    }
  }]);

  return ReportChunks;
}(_react2.default.Component);

ReportChunks.propTypes = {
  report: _propTypes2.default.func.isRequired
};
ReportChunks.childContextTypes = {
  report: _propTypes2.default.func.isRequired
};
exports.default = ReportChunks;

/***/ }),
/* 56 */
/***/ (function(module, exports) {

module.exports = require("hoist-non-react-statics");

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Heading = __webpack_require__(11);

var _Heading2 = _interopRequireDefault(_Heading);

var _Paragraph = __webpack_require__(58);

var _Paragraph2 = _interopRequireDefault(_Paragraph);

__webpack_require__(59);

var _InputRegister = __webpack_require__(60);

var _InputRegister2 = _interopRequireDefault(_InputRegister);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var EmailSignup = function (_React$PureComponent) {
    _inherits(EmailSignup, _React$PureComponent);

    function EmailSignup() {
        _classCallCheck(this, EmailSignup);

        return _possibleConstructorReturn(this, (EmailSignup.__proto__ || Object.getPrototypeOf(EmailSignup)).apply(this, arguments));
    }

    _createClass(EmailSignup, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'section',
                { className: 'email-signup' },
                _react2.default.createElement(
                    'div',
                    { className: 'email-signup__wrapper' },
                    _react2.default.createElement(
                        'div',
                        { className: 'email-signup__content' },
                        _react2.default.createElement(_Heading2.default, { level: 2, text: '\u6700\u65B0\u60C5\u5831' }),
                        _react2.default.createElement(
                            _Paragraph2.default,
                            null,
                            '\u6700\u65B0\u306EIOTA\u958B\u767A\u30CB\u30E5\u30FC\u30B9\u3092\u30E1\u30FC\u30EB\u30DC\u30C3\u30AF\u30B9\u306B\u76F4\u63A5\u304A\u5C4A\u3051\u3057\u307E\u3059\u3002'
                        )
                    ),
                    _react2.default.createElement(_InputRegister2.default, { apiEndpoint: this.props.apiEndpoint })
                )
            );
        }
    }]);

    return EmailSignup;
}(_react2.default.PureComponent);

EmailSignup.propTypes = {
    apiEndpoint: _propTypes2.default.string.isRequired
};
exports.default = EmailSignup;

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = __webpack_require__(2);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Paragraph = function (_React$PureComponent) {
    _inherits(Paragraph, _React$PureComponent);

    function Paragraph() {
        _classCallCheck(this, Paragraph);

        return _possibleConstructorReturn(this, (Paragraph.__proto__ || Object.getPrototypeOf(Paragraph)).apply(this, arguments));
    }

    _createClass(Paragraph, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'p',
                { className: (0, _classnames2.default)('paragraph', this.props.className) },
                this.props.children
            );
        }
    }]);

    return Paragraph;
}(_react2.default.PureComponent);

Paragraph.propTypes = {
    children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),
    className: _propTypes2.default.string
};
exports.default = Paragraph;

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(7)(false);
// imports


// module
exports.push([module.i, ".email-signup{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;min-height:160px;background-color:#f6f6f6}.email-signup__wrapper{max-width:1495px;width:100%;display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:justify;justify-content:space-between}.email-signup__content{padding:0 20px}@media (min-width:768px){.email-signup__content{padding:0 40px}}.email-signup__content h2{margin:37px 0 0}.email-signup__content h2 .text{color:#20a49d}.email-signup__content p{color:#1c1e21;font-size:18px;font-weight:300;line-height:1.76;margin-top:5px}.input-register-container.input-register-container--hidden{display:none}.input-register-container__form,.input-register-container__wrapper{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.input-register-container__form{margin:0 16px 25px;-ms-flex-pack:start;justify-content:flex-start}@media (min-width:768px){.input-register-container__form{margin:60px 40px 0}}.error-message{margin-top:10px;color:red}.success-message{color:green}@media (max-width:768px){.email-signup{height:auto}.email-signup__wrapper{-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between}.email-signup__content h2{font-size:24px;margin:25px 0 0}}", ""]);

// exports


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _regenerator = __webpack_require__(19);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = __webpack_require__(2);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _api = __webpack_require__(9);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var InputRegister = function (_React$Component) {
    _inherits(InputRegister, _React$Component);

    function InputRegister(props) {
        _classCallCheck(this, InputRegister);

        var _this = _possibleConstructorReturn(this, (InputRegister.__proto__ || Object.getPrototypeOf(InputRegister)).call(this, props));

        _this.state = {
            email: '',
            loading: false,
            success: false,
            apiMessage: null,
            error: null,
            diabled: false
        };

        _this.handleInputChange = _this.handleInputChange.bind(_this);
        _this.submit = _this.submit.bind(_this);
        return _this;
    }

    _createClass(InputRegister, [{
        key: 'handleInputChange',
        value: function handleInputChange(_ref) {
            var target = _ref.target;

            this.setState({ email: target.value, error: null });
        }
    }, {
        key: 'submit',
        value: function () {
            var _ref2 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee2(e) {
                var _this2 = this;

                var email;
                return _regenerator2.default.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                e.preventDefault();

                                email = this.state.email;


                                if (!email || !this.validateEmail(email)) {
                                    this.setState({ error: '有効なメールアドレスを入力してください。' });
                                } else {
                                    this.setState({ loading: true }, _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
                                        var response;
                                        return _regenerator2.default.wrap(function _callee$(_context) {
                                            while (1) {
                                                switch (_context.prev = _context.next) {
                                                    case 0:
                                                        _context.next = 2;
                                                        return (0, _api.submitEmail)(_this2.props.apiEndpoint, email);

                                                    case 2:
                                                        response = _context.sent;

                                                        _this2.setState({ success: response.success, loading: false, apiMessage: response.message });

                                                    case 4:
                                                    case 'end':
                                                        return _context.stop();
                                                }
                                            }
                                        }, _callee, _this2);
                                    })));
                                }

                            case 3:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function submit(_x) {
                return _ref2.apply(this, arguments);
            }

            return submit;
        }()
    }, {
        key: 'validateEmail',
        value: function validateEmail(email) {
            var regex = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
            return regex.test(String(email).toLowerCase());
        }
    }, {
        key: 'render',
        value: function render() {
            var _state = this.state,
                email = _state.email,
                error = _state.error,
                success = _state.success,
                apiMessage = _state.apiMessage,
                loading = _state.loading;

            return _react2.default.createElement(
                'div',
                { className: 'input-register-container__wrapper' },
                _react2.default.createElement(
                    'form',
                    {
                        onSubmit: this.submit,
                        className: (0, _classnames2.default)('input-register-container__form'),
                        noValidate: true
                    },
                    _react2.default.createElement(
                        'div',
                        {
                            className: (0, _classnames2.default)('input-register-container', { 'input-register-container--hidden': success }) },
                        _react2.default.createElement('input', {
                            type: 'email',
                            className: 'input-register',
                            placeholder: '\u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9\u3092\u5165\u529B',
                            value: email,
                            disabled: loading,
                            onChange: this.handleInputChange
                        }),
                        _react2.default.createElement(
                            'button',
                            { className: 'input-register__button', type: 'submit', disabled: loading },
                            _react2.default.createElement(
                                'span',
                                { className: 'input-register__button-text' },
                                '\u767B\u9332'
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'error-message' },
                        error
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: (0, _classnames2.default)('success-message', { 'hidden': !success }) },
                        apiMessage
                    )
                )
            );
        }
    }]);

    return InputRegister;
}(_react2.default.Component);

InputRegister.propTypes = {
    apiEndpoint: _propTypes2.default.string.isRequired
};
exports.default = InputRegister;

/***/ }),
/* 61 */
/***/ (function(module, exports) {

module.exports = require("axios");

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = __webpack_require__(2);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FeedbackButton = function (_React$Component) {
    _inherits(FeedbackButton, _React$Component);

    function FeedbackButton(props) {
        _classCallCheck(this, FeedbackButton);

        var _this = _possibleConstructorReturn(this, (FeedbackButton.__proto__ || Object.getPrototypeOf(FeedbackButton)).call(this, props));

        _this.handleOnClick = _this.handleOnClick.bind(_this);
        return _this;
    }

    _createClass(FeedbackButton, [{
        key: 'handleOnClick',
        value: function handleOnClick(e) {
            var onClick = this.props.onClick;

            if (onClick) {
                onClick(e);
            }
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                {
                    className: (0, _classnames2.default)('feedback-button__wrapper', { 'feedback-button__wrapper--expanded': this.props.isExpanded }) },
                _react2.default.createElement(
                    'button',
                    {
                        className: (0, _classnames2.default)('feedback-button', { 'feedback-button--hide-content': !this.props.showButtonContent }),
                        onClick: this.handleOnClick },
                    _react2.default.createElement('span', {
                        className: (0, _classnames2.default)('feedback-button--icon', { 'feedback-button--icon-yes': this.props.wasItUseful === 'yes' }, { 'feedback-button--icon-no': this.props.wasItUseful === 'no' }) })
                )
            );
        }
    }]);

    return FeedbackButton;
}(_react2.default.Component);

FeedbackButton.propTypes = {
    isExpanded: _propTypes2.default.bool,
    wasItUseful: _propTypes2.default.string,
    showButtonContent: _propTypes2.default.bool,
    onClick: _propTypes2.default.func
};
exports.default = FeedbackButton;

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = __webpack_require__(2);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FeedbackForm = function (_React$Component) {
    _inherits(FeedbackForm, _React$Component);

    function FeedbackForm(props) {
        _classCallCheck(this, FeedbackForm);

        var _this = _possibleConstructorReturn(this, (FeedbackForm.__proto__ || Object.getPrototypeOf(FeedbackForm)).call(this, props));

        _this.state = {
            wasItUseful: undefined,
            comments: ''
        };

        _this.handleClose = _this.handleClose.bind(_this);
        _this.handleOnSubmit = _this.handleOnSubmit.bind(_this);
        _this.handleYesNo = _this.handleWasItUseful.bind(_this);
        return _this;
    }

    _createClass(FeedbackForm, [{
        key: 'handleClose',
        value: function handleClose() {
            var onClose = this.props.onClose;

            if (onClose) {
                onClose();
            }
        }
    }, {
        key: 'handleOnSubmit',
        value: function handleOnSubmit(e) {
            var onSubmit = this.props.onSubmit;

            if (onSubmit) {
                onSubmit({
                    wasItUseful: this.state.wasItUseful,
                    comments: this.state.comments
                });
            }
            e.preventDefault();
        }
    }, {
        key: 'handleWasItUseful',
        value: function handleWasItUseful(e, wasItUseful) {
            this.setState({ wasItUseful: wasItUseful });
            e.preventDefault();
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            return _react2.default.createElement(
                'div',
                { className: 'feedback-form__wrapper' },
                _react2.default.createElement(
                    'form',
                    { className: 'feedback-form' },
                    _react2.default.createElement(
                        'h1',
                        null,
                        'Was this page useful?'
                    ),
                    _react2.default.createElement(
                        'h2',
                        null,
                        'Let us know...'
                    ),
                    _react2.default.createElement('button', {
                        className: 'feedback-form-close icon-cross',
                        onClick: this.handleClose }),
                    _react2.default.createElement(
                        'div',
                        null,
                        _react2.default.createElement(
                            'div',
                            {
                                className: (0, _classnames2.default)('feedback-form-button', { 'feedback-form-button--selected': this.state.wasItUseful === 'yes' }) },
                            _react2.default.createElement('button', {
                                className: 'feedback-form-button-circle icon-thumb-up',
                                onClick: function onClick(e) {
                                    return _this2.handleWasItUseful(e, 'yes');
                                } }),
                            _react2.default.createElement(
                                'button',
                                {
                                    className: 'feedback-form-button-label',
                                    onClick: function onClick(e) {
                                        return _this2.handleWasItUseful(e, 'yes');
                                    } },
                                'Yes'
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            {
                                className: (0, _classnames2.default)('feedback-form-button', { 'feedback-form-button--selected': this.state.wasItUseful === 'no' }) },
                            _react2.default.createElement('button', {
                                className: 'feedback-form-button-circle icon-thumb-down',
                                onClick: function onClick(e) {
                                    return _this2.handleWasItUseful(e, 'no');
                                } }),
                            _react2.default.createElement(
                                'button',
                                {
                                    className: 'feedback-form-button-label',
                                    onClick: function onClick(e) {
                                        return _this2.handleWasItUseful(e, 'no');
                                    } },
                                'No'
                            )
                        )
                    ),
                    _react2.default.createElement('textarea', {
                        placeholder: 'Leave additional thoughts or feedback',
                        rows: '6',
                        value: this.state.comments,
                        onChange: function onChange(e) {
                            return _this2.setState({ comments: e.target.value });
                        }
                    }),
                    _react2.default.createElement(
                        'button',
                        {
                            className: 'feedback-form-button-submit',
                            onClick: this.handleOnSubmit,
                            disabled: this.state.wasItUseful === undefined },
                        'Submit Page Feedback'
                    )
                )
            );
        }
    }]);

    return FeedbackForm;
}(_react2.default.Component);

FeedbackForm.propTypes = {
    onClose: _propTypes2.default.func,
    onSubmit: _propTypes2.default.func
};
exports.default = FeedbackForm;

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = __webpack_require__(2);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FeedbackOverlay = function (_React$Component) {
    _inherits(FeedbackOverlay, _React$Component);

    function FeedbackOverlay() {
        _classCallCheck(this, FeedbackOverlay);

        return _possibleConstructorReturn(this, (FeedbackOverlay.__proto__ || Object.getPrototypeOf(FeedbackOverlay)).apply(this, arguments));
    }

    _createClass(FeedbackOverlay, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { className: (0, _classnames2.default)('feedback-overlay', { 'feedback-overlay--expanded': this.props.isExpanded }) },
                this.props.children
            );
        }
    }]);

    return FeedbackOverlay;
}(_react2.default.Component);

FeedbackOverlay.propTypes = {
    isExpanded: _propTypes2.default.bool,
    children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node])
};
exports.default = FeedbackOverlay;

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = __webpack_require__(2);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactStatic = __webpack_require__(5);

var _propTypes3 = __webpack_require__(3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FloatingMenu = function (_React$Component) {
    _inherits(FloatingMenu, _React$Component);

    function FloatingMenu(props) {
        _classCallCheck(this, FloatingMenu);

        var _this = _possibleConstructorReturn(this, (FloatingMenu.__proto__ || Object.getPrototypeOf(FloatingMenu)).call(this, props));

        _this.state = {
            activeTarget: null
        };
        return _this;
    }

    _createClass(FloatingMenu, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.handleScroll = this.handleScroll.bind(this);

            this.targets = this.props.menuItems.map(function (item) {
                var target = item.name.toLowerCase().replace(/ /g, '_');
                return document.getElementById(target);
            });

            document.addEventListener('scroll', this.handleScroll);
            window.addEventListener('resize', this.handleScroll);

            this.handleScroll();
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            document.removeEventListener('scroll', this.handleScroll);
            window.removeEventListener('resize', this.handleScroll);
        }
    }, {
        key: 'handleScroll',
        value: function handleScroll() {
            var threshold = window.innerHeight * 0.35;

            var activeTarget = null;

            this.targets.forEach(function (target) {
                var rect = target.getBoundingClientRect();

                if (rect.top < threshold && rect.bottom > 0) {
                    activeTarget = target.id;
                }
            });

            if (activeTarget !== this.state.activeTarget) {
                this.setState({
                    activeTarget: activeTarget
                });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            return _react2.default.createElement(
                'ul',
                { className: 'floating-menu' },
                this.props.menuItems.map(function (item) {
                    return _react2.default.createElement(
                        'li',
                        {
                            key: item.name,
                            className: (0, _classnames2.default)('floating-menu__item', {
                                'floating-menu__item--selected': _this2.props.highlightedItem === item.folder || _this2.state.activeTarget === item.name.toLowerCase().replace(/ /g, '_')
                            })
                        },
                        _react2.default.createElement(
                            _reactStatic.Link,
                            { to: item.link, exact: true },
                            item.name
                        )
                    );
                })
            );
        }
    }]);

    return FloatingMenu;
}(_react2.default.Component);

FloatingMenu.propTypes = {
    menuItems: _propTypes3.ContentMenuItemsPropTypes.isRequired,
    highlightedItem: _propTypes2.default.string
};
exports.default = FloatingMenu;

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Card = __webpack_require__(67);

var _Card2 = _interopRequireDefault(_Card);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CardContainer = function (_React$PureComponent) {
    _inherits(CardContainer, _React$PureComponent);

    function CardContainer() {
        _classCallCheck(this, CardContainer);

        return _possibleConstructorReturn(this, (CardContainer.__proto__ || Object.getPrototypeOf(CardContainer)).apply(this, arguments));
    }

    _createClass(CardContainer, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { className: 'cards-container' },
                this.props.content.map(function (card) {
                    return _react2.default.createElement(_Card2.default, { key: card.name, card: _extends({}, card) });
                })
            );
        }
    }]);

    return CardContainer;
}(_react2.default.PureComponent);

CardContainer.propTypes = {
    content: _propTypes2.default.arrayOf(_propTypes2.default.shape({
        image: _propTypes2.default.string.isRequired,
        href: _propTypes2.default.string.isRequired,
        name: _propTypes2.default.string
    })).isRequired
};
exports.default = CardContainer;

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Link = __webpack_require__(6);

var _Link2 = _interopRequireDefault(_Link);

var _Image = __webpack_require__(68);

var _Image2 = _interopRequireDefault(_Image);

var _Text = __webpack_require__(12);

var _Text2 = _interopRequireDefault(_Text);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Card = function (_React$PureComponent) {
    _inherits(Card, _React$PureComponent);

    function Card() {
        _classCallCheck(this, Card);

        return _possibleConstructorReturn(this, (Card.__proto__ || Object.getPrototypeOf(Card)).apply(this, arguments));
    }

    _createClass(Card, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { className: 'card' },
                _react2.default.createElement(
                    _Link2.default,
                    { href: this.props.card.href, className: 'card__link' },
                    _react2.default.createElement(_Image2.default, { src: this.props.card.image, alt: this.props.card.name, className: 'card__image' }),
                    _react2.default.createElement(
                        'div',
                        { className: 'card__wrapper' },
                        _react2.default.createElement(
                            _Text2.default,
                            { className: 'text--level5 card__label' },
                            this.props.card.name
                        )
                    )
                )
            );
        }
    }]);

    return Card;
}(_react2.default.PureComponent);

Card.propTypes = {
    card: _propTypes2.default.exact({
        image: _propTypes2.default.string.isRequired,
        href: _propTypes2.default.string.isRequired,
        name: _propTypes2.default.string
    }).isRequired
};
exports.default = Card;

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = __webpack_require__(2);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Image = function (_React$PureComponent) {
    _inherits(Image, _React$PureComponent);

    function Image() {
        _classCallCheck(this, Image);

        return _possibleConstructorReturn(this, (Image.__proto__ || Object.getPrototypeOf(Image)).apply(this, arguments));
    }

    _createClass(Image, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement('img', { id: this.props.id, src: this.props.src, alt: this.props.alt, className: (0, _classnames2.default)('image', this.props.className) });
        }
    }]);

    return Image;
}(_react2.default.PureComponent);

Image.propTypes = {
    id: _propTypes2.default.string,
    src: _propTypes2.default.string.isRequired,
    alt: _propTypes2.default.string.isRequired,
    className: _propTypes2.default.string
};
exports.default = Image;

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _ProjectTopics = __webpack_require__(70);

var _ProjectTopics2 = _interopRequireDefault(_ProjectTopics);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ProjectTopicsContainer = function (_React$Component) {
    _inherits(ProjectTopicsContainer, _React$Component);

    function ProjectTopicsContainer() {
        _classCallCheck(this, ProjectTopicsContainer);

        return _possibleConstructorReturn(this, (ProjectTopicsContainer.__proto__ || Object.getPrototypeOf(ProjectTopicsContainer)).apply(this, arguments));
    }

    _createClass(ProjectTopicsContainer, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { className: 'project__wrapper' },
                this.props.content.map(function (c, idx) {
                    return _react2.default.createElement(_ProjectTopics2.default, { key: idx, content: c });
                })
            );
        }
    }]);

    return ProjectTopicsContainer;
}(_react2.default.Component);

ProjectTopicsContainer.propTypes = {
    content: _propTypes2.default.arrayOf(_propTypes2.default.shape({
        name: _propTypes2.default.string.isRequired,
        description: _propTypes2.default.string.isRequired,
        links: _propTypes2.default.arrayOf(_propTypes2.default.shape({
            name: _propTypes2.default.string.isRequired,
            link: _propTypes2.default.string.isRequired,
            description: _propTypes2.default.string.isRequired
        })).isRequired
    })).isRequired
};
exports.default = ProjectTopicsContainer;

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Heading = __webpack_require__(11);

var _Heading2 = _interopRequireDefault(_Heading);

var _Text = __webpack_require__(12);

var _Text2 = _interopRequireDefault(_Text);

var _ProjectTopicsInner = __webpack_require__(28);

var _ProjectTopicsInner2 = _interopRequireDefault(_ProjectTopicsInner);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ProjectTopics = function (_React$Component) {
    _inherits(ProjectTopics, _React$Component);

    function ProjectTopics() {
        _classCallCheck(this, ProjectTopics);

        return _possibleConstructorReturn(this, (ProjectTopics.__proto__ || Object.getPrototypeOf(ProjectTopics)).apply(this, arguments));
    }

    _createClass(ProjectTopics, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { className: 'project', id: this.props.content.name.toLowerCase().replace(/ /g, '_') },
                _react2.default.createElement(
                    _Heading2.default,
                    { className: 'project__heading', level: 2 },
                    this.props.content.name
                ),
                _react2.default.createElement(
                    _Text2.default,
                    { className: 'project__subheading' },
                    this.props.content.description
                ),
                _react2.default.createElement(_ProjectTopicsInner2.default, { content: this.props.content.links })
            );
        }
    }]);

    return ProjectTopics;
}(_react2.default.Component);

ProjectTopics.propTypes = {
    content: _propTypes2.default.shape({
        name: _propTypes2.default.string.isRequired,
        description: _propTypes2.default.string.isRequired,
        links: _propTypes2.default.arrayOf(_propTypes2.default.shape({
            name: _propTypes2.default.string.isRequired,
            link: _propTypes2.default.string.isRequired,
            description: _propTypes2.default.string.isRequired
        })).isRequired
    }).isRequired
};
exports.default = ProjectTopics;

/***/ }),
/* 71 */
/***/ (function(module, exports) {

module.exports = require("emoji-dictionary");

/***/ }),
/* 72 */
/***/ (function(module, exports) {

module.exports = require("prismjs/themes/prism.css");

/***/ }),
/* 73 */
/***/ (function(module, exports) {

module.exports = require("react-markdown");

/***/ }),
/* 74 */
/***/ (function(module, exports) {

module.exports = require("reprism");

/***/ }),
/* 75 */
/***/ (function(module, exports) {

module.exports = require("reprism/languages/bash");

/***/ }),
/* 76 */
/***/ (function(module, exports) {

module.exports = require("reprism/languages/c");

/***/ }),
/* 77 */
/***/ (function(module, exports) {

module.exports = require("reprism/languages/cpp");

/***/ }),
/* 78 */
/***/ (function(module, exports) {

module.exports = require("reprism/languages/java");

/***/ }),
/* 79 */
/***/ (function(module, exports) {

module.exports = require("reprism/languages/javascript");

/***/ }),
/* 80 */
/***/ (function(module, exports) {

module.exports = require("reprism/languages/json");

/***/ }),
/* 81 */
/***/ (function(module, exports) {

module.exports = require("reprism/languages/jsx");

/***/ }),
/* 82 */
/***/ (function(module, exports) {

module.exports = require("reprism/languages/python");

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = __webpack_require__(2);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var HeadingLabel = function (_React$Component) {
    _inherits(HeadingLabel, _React$Component);

    function HeadingLabel() {
        _classCallCheck(this, HeadingLabel);

        return _possibleConstructorReturn(this, (HeadingLabel.__proto__ || Object.getPrototypeOf(HeadingLabel)).apply(this, arguments));
    }

    _createClass(HeadingLabel, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                {
                    className: (0, _classnames2.default)('heading-label', { 'heading-label--secondary': this.props.style === 'secondary' }),
                    id: this.props.id },
                this.props.children
            );
        }
    }]);

    return HeadingLabel;
}(_react2.default.Component);

HeadingLabel.propTypes = {
    style: _propTypes2.default.string,
    children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),
    id: _propTypes2.default.string
};
exports.default = HeadingLabel;

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(7)(false);
// imports


// module
exports.push([module.i, ".map-marker{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;padding:10px;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);border-radius:5px;background:var(--jade);color:var(--white);text-align:center}.map-marker img{width:20px;height:20px;margin-right:10px;border:none!important}", ""]);

// exports


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Link = __webpack_require__(6);

var _Link2 = _interopRequireDefault(_Link);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MarkdownCard = function (_React$Component) {
    _inherits(MarkdownCard, _React$Component);

    function MarkdownCard() {
        _classCallCheck(this, MarkdownCard);

        return _possibleConstructorReturn(this, (MarkdownCard.__proto__ || Object.getPrototypeOf(MarkdownCard)).apply(this, arguments));
    }

    _createClass(MarkdownCard, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { className: 'markdown-card' },
                _react2.default.createElement(
                    'div',
                    { className: 'markdown-card--inner' },
                    _react2.default.createElement(
                        _Link2.default,
                        { href: this.props.link, id: this.props.id },
                        _react2.default.createElement('img', { className: 'markdown-card--image', src: this.props.img, alt: this.props.alt }),
                        _react2.default.createElement(
                            'div',
                            { className: 'markdown-card--content' },
                            _react2.default.createElement(
                                'div',
                                { className: 'markdown-card--title' },
                                this.props.title
                            ),
                            this.props.children
                        )
                    )
                )
            );
        }
    }]);

    return MarkdownCard;
}(_react2.default.Component);

MarkdownCard.propTypes = {
    alt: _propTypes2.default.string,
    img: _propTypes2.default.string,
    title: _propTypes2.default.string,
    link: _propTypes2.default.string,
    children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),
    id: _propTypes2.default.string
};
exports.default = MarkdownCard;

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = __webpack_require__(2);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Component to display a message box.
 */
var MessageBox = function (_Component) {
    _inherits(MessageBox, _Component);

    function MessageBox(props) {
        _classCallCheck(this, MessageBox);

        var _this = _possibleConstructorReturn(this, (MessageBox.__proto__ || Object.getPrototypeOf(MessageBox)).call(this, props));

        _this.state = {
            showMap: false
        };
        return _this;
    }

    _createClass(MessageBox, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                {
                    className: (0, _classnames2.default)('message-box', { 'message-box__success': this.props.type === 'success' }, { 'message-box__danger': this.props.type === 'danger' }, { 'message-box__info': this.props.type === 'info' }, { 'message-box__warning': this.props.type === 'warning' })
                },
                _react2.default.createElement('div', { className: 'message-box--icon' }),
                _react2.default.createElement(
                    'div',
                    { className: 'message-box--text' },
                    this.props.title && _react2.default.createElement(
                        'div',
                        { className: 'message-box--title' },
                        this.props.title
                    ),
                    this.props.content && _react2.default.createElement(
                        'div',
                        { className: 'message-box--content' },
                        this.props.content
                    )
                )
            );
        }
    }]);

    return MessageBox;
}(_react.Component);

MessageBox.propTypes = {
    type: _propTypes2.default.string.isRequired,
    title: _propTypes2.default.string,
    content: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.arrayOf(_propTypes2.default.node)])
};
exports.default = MessageBox;

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = __webpack_require__(2);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _clipboard = __webpack_require__(32);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Tabs = function (_React$Component) {
    _inherits(Tabs, _React$Component);

    function Tabs(props) {
        _classCallCheck(this, Tabs);

        var _this = _possibleConstructorReturn(this, (Tabs.__proto__ || Object.getPrototypeOf(Tabs)).call(this, props));

        _this.state = {
            selectedIndex: 0,
            copyActive: false,
            copySuccess: false
        };

        _this.handleSelect = _this.handleSelect.bind(_this);
        _this.handleCopy = _this.handleCopy.bind(_this);
        return _this;
    }

    _createClass(Tabs, [{
        key: 'handleSelect',
        value: function handleSelect(idx) {
            this.setState({ selectedIndex: idx });
        }
    }, {
        key: 'handleCopy',
        value: function handleCopy() {
            var _this2 = this;

            var markdown = this.props.contents[this.state.selectedIndex].props.source;

            var success = (0, _clipboard.copyToClipboard)(markdown.replace(/```.*/g, '').trim());

            this.setState({
                copySuccess: success,
                copyActive: true
            });

            setTimeout(function () {
                _this2.setState({
                    copyActive: false
                });
            }, 2000);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            return _react2.default.createElement(
                'div',
                { className: 'tabs' },
                _react2.default.createElement(
                    'div',
                    { className: 'tab-header' },
                    _react2.default.createElement(
                        'ul',
                        { className: 'tab-header-list' },
                        this.props.headers.map(function (header, headerIdx) {
                            return _react2.default.createElement(
                                'li',
                                { key: headerIdx,
                                    className: (0, _classnames2.default)('tab-header-item', { 'tab-header-item--selected': headerIdx === _this3.state.selectedIndex }) },
                                _react2.default.createElement(
                                    'a',
                                    { onClick: function onClick() {
                                            return _this3.handleSelect(headerIdx);
                                        } },
                                    header
                                )
                            );
                        })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'tab-header-copy' },
                        _react2.default.createElement(
                            'span',
                            { className: (0, _classnames2.default)('tab-header-copy-text', { 'tab-header-copy-text--active': this.state.copyActive }, { 'tab-header-copy-text--failed': !this.state.copySuccess && this.state.copyActive }) },
                            this.state.copySuccess ? 'Copied' : 'Failed'
                        ),
                        _react2.default.createElement('button', { className: 'tab-header-copy-button icon-copy', onClick: function onClick() {
                                return _this3.handleCopy();
                            } })
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'tab-container' },
                    this.props.contents.map(function (content, contentIdx) {
                        return _react2.default.createElement(
                            'div',
                            { key: contentIdx,
                                className: (0, _classnames2.default)('tab-item', { 'tab-item--selected': contentIdx === _this3.state.selectedIndex }) },
                            content
                        );
                    })
                )
            );
        }
    }]);

    return Tabs;
}(_react2.default.Component);

Tabs.propTypes = {
    headers: _propTypes2.default.arrayOf(_propTypes2.default.string),
    contents: _propTypes2.default.arrayOf(_propTypes2.default.element)
};
exports.default = Tabs;

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _regenerator = __webpack_require__(19);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _qs = __webpack_require__(34);

var _qs2 = _interopRequireDefault(_qs);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouterPropTypes = __webpack_require__(4);

var _reactRouterPropTypes2 = _interopRequireDefault(_reactRouterPropTypes);

var _api = __webpack_require__(9);

var _EventCard = __webpack_require__(89);

var _EventCard2 = _interopRequireDefault(_EventCard);

var _Pagination = __webpack_require__(35);

var _Pagination2 = _interopRequireDefault(_Pagination);

var _scroll = __webpack_require__(36);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Feed = function (_React$Component) {
    _inherits(Feed, _React$Component);

    function Feed(props) {
        _classCallCheck(this, Feed);

        var _this = _possibleConstructorReturn(this, (Feed.__proto__ || Object.getPrototypeOf(Feed)).call(this, props));

        var paramPage = 0;
        if (props.history.location.search) {
            var params = _qs2.default.parse(props.history.location.search, { ignoreQueryPrefix: true });
            if (params && params.page) {
                paramPage = parseInt(params.page, 10) - 1;
            }
        }

        _this.state = {
            status: '',
            items: [],
            initialHash: props.history.location.hash,
            page: paramPage,
            pageSize: 10,
            totalPages: 0,
            totalItems: 0
        };

        _this.onDataPaginated = _this.onDataPaginated.bind(_this);
        _this.loadData = _this.loadData.bind(_this);
        return _this;
    }

    _createClass(Feed, [{
        key: 'componentDidMount',
        value: function () {
            var _ref = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
                return _regenerator2.default.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return this.loadData();

                            case 2:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function componentDidMount() {
                return _ref.apply(this, arguments);
            }

            return componentDidMount;
        }()
    }, {
        key: 'loadData',
        value: function loadData() {
            var _this2 = this;

            var target = document.querySelector('#root');
            if (target) {
                (0, _scroll.scrollIntoView)(target);
            }

            this.setState({
                status: 'Retrieving, please wait...',
                items: [],
                totalPages: 0,
                totalItems: 0
            }, _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {
                var response;
                return _regenerator2.default.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                if (_this2.props.onLoaded) {
                                    _this2.props.onLoaded(0);
                                }
                                _this2.updatePageUrl();

                                _context2.next = 4;
                                return (0, _api.feed)(_this2.props.apiEndpoint, _this2.props.context, _this2.state.page, _this2.state.pageSize);

                            case 4:
                                response = _context2.sent;


                                if (response.success) {
                                    _this2.setState({
                                        items: response.items,
                                        status: '',
                                        totalPages: response.totalPages,
                                        totalItems: response.totalItems
                                    }, function () {
                                        if (_this2.props.onLoaded) {
                                            _this2.props.onLoaded(response.totalItems);
                                        }
                                        _this2.updatePageUrl();
                                        if (_this2.state.initialHash) {
                                            var _target = document.querySelector(_this2.state.initialHash);
                                            if (_target) {
                                                (0, _scroll.scrollIntoView)(_target);
                                            }
                                        }
                                    });
                                } else {
                                    _this2.setState({
                                        items: [],
                                        status: 'Failed loading feed',
                                        totalPages: 0,
                                        totalItems: 0
                                    });
                                }

                            case 6:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, _this2);
            })));
        }
    }, {
        key: 'onDataPaginated',
        value: function onDataPaginated(pageIndex) {
            var _this3 = this;

            this.setState({
                initialHash: '',
                page: pageIndex
            }, _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee3() {
                return _regenerator2.default.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                _context3.next = 2;
                                return _this3.loadData();

                            case 2:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, _this3);
            })));
        }
    }, {
        key: 'updatePageUrl',
        value: function updatePageUrl() {
            var url = this.props.history.location.pathname;
            if (this.state.page > 0) {
                url += '?page=' + (this.state.page + 1);
            }
            if (this.state.initialHash) {
                url += this.state.initialHash;
            }

            this.props.history.replace(url);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this4 = this;

            return _react2.default.createElement(
                _react2.default.Fragment,
                null,
                this.state.status,
                this.state.items.map(function (item, idx) {
                    return _this4.props.displayType === 'event' && _react2.default.createElement(_EventCard2.default, { item: item, key: idx, googleMapsKey: _this4.props.googleMapsKey });
                }),
                this.state.totalPages > 0 && _react2.default.createElement(_Pagination2.default, { totalCount: this.state.totalItems, page: this.state.page, maxPerPage: this.state.pageSize, onDataPaginated: this.onDataPaginated })
            );
        }
    }]);

    return Feed;
}(_react2.default.Component);

Feed.propTypes = {
    apiEndpoint: _propTypes2.default.string.isRequired,
    googleMapsKey: _propTypes2.default.string,
    displayType: _propTypes2.default.string.isRequired,
    context: _propTypes2.default.string.isRequired,
    onLoaded: _propTypes2.default.func,
    history: _reactRouterPropTypes2.default.history
};
exports.default = Feed;

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = __webpack_require__(2);

var _classnames2 = _interopRequireDefault(_classnames);

var _googleMapReact = __webpack_require__(30);

var _googleMapReact2 = _interopRequireDefault(_googleMapReact);

var _moment = __webpack_require__(90);

var _moment2 = _interopRequireDefault(_moment);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _logoSmall = __webpack_require__(31);

var _logoSmall2 = _interopRequireDefault(_logoSmall);

var _paths = __webpack_require__(21);

__webpack_require__(91);

var _MapMarker = __webpack_require__(33);

var _MapMarker2 = _interopRequireDefault(_MapMarker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Component to display an event.
 */
var EventCard = function (_Component) {
    _inherits(EventCard, _Component);

    function EventCard(props) {
        _classCallCheck(this, EventCard);

        var _this = _possibleConstructorReturn(this, (EventCard.__proto__ || Object.getPrototypeOf(EventCard)).call(this, props));

        _this.state = {
            showMap: false
        };
        return _this;
    }

    _createClass(EventCard, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            return _react2.default.createElement(
                'div',
                { className: 'event-card' },
                _react2.default.createElement(
                    'h2',
                    { id: (0, _paths.sanitizeHashId)(this.props.item.title), className: 'event-card--title' },
                    this.props.item.title
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'event-card--date' },
                    (0, _moment2.default)(this.props.item.startUtc).format('MMMM Do YYYY, h:mm a')
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'event-card--description' },
                    this.props.item.description
                ),
                _react2.default.createElement('hr', null),
                _react2.default.createElement(
                    'div',
                    { className: 'event-card--venue' },
                    this.props.item.venueName && _react2.default.createElement(
                        'div',
                        { className: 'event-card--venue-name' },
                        this.props.item.venueName
                    ),
                    this.props.item.venueAddress && this.props.item.venueAddress.map(function (a, idx) {
                        return _react2.default.createElement(
                            'div',
                            { className: 'event-card--venue-address', key: idx },
                            a
                        );
                    })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'event-card--actions' },
                    _react2.default.createElement(
                        'a',
                        { className: 'button button--secondary', href: this.props.item.urlDetails, target: '_blank', role: 'button', rel: 'noreferrer noopener' },
                        'More Details'
                    )
                ),
                this.props.item.venueLatitude && this.props.item.venueLongitude && _react2.default.createElement(
                    'div',
                    { className: 'event-card--map-container' },
                    _react2.default.createElement(
                        'a',
                        {
                            className: 'event-card--map-toggle icon-up-down',
                            onClick: function onClick() {
                                return _this2.setState({ showMap: !_this2.state.showMap });
                            },
                            role: 'button'
                        },
                        this.state.showMap ? 'Hide Map' : 'Show Map',
                        '\xA0'
                    ),
                    _react2.default.createElement(
                        'div',
                        {
                            className: (0, _classnames2.default)('event-card--map', { 'event-card--map__hidden': !this.state.showMap })
                        },
                        _react2.default.createElement(
                            _googleMapReact2.default,
                            {
                                bootstrapURLKeys: { key: this.props.googleMapsKey },
                                defaultCenter: {
                                    lat: this.props.item.venueLatitude,
                                    lng: this.props.item.venueLongitude
                                },
                                defaultZoom: 14
                            },
                            _react2.default.createElement(
                                _MapMarker2.default,
                                { lat: this.props.item.venueLatitude, lng: this.props.item.venueLongitude },
                                _react2.default.createElement('img', { src: _logoSmall2.default, alt: 'IOTA' }),
                                this.props.item.venueName
                            )
                        )
                    )
                )
            );
        }
    }]);

    return EventCard;
}(_react.Component);

EventCard.propTypes = {
    item: _propTypes2.default.shape({
        title: _propTypes2.default.string.isRequired,
        description: _propTypes2.default.string.isRequired,
        startUtc: _propTypes2.default.string.isRequired,
        urlDetails: _propTypes2.default.string,
        venueName: _propTypes2.default.string,
        venueAddress: _propTypes2.default.arrayOf(_propTypes2.default.string),
        venueLatitude: _propTypes2.default.number,
        venueLongitude: _propTypes2.default.number
    }).isRequired,
    googleMapsKey: _propTypes2.default.string.isRequired

};
exports.default = EventCard;

/***/ }),
/* 90 */
/***/ (function(module, exports) {

module.exports = require("moment");

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(7)(false);
// imports


// module
exports.push([module.i, ".event-card{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-right:20px;margin-bottom:20px;padding:20px;border:1px solid var(--light-grey);border-radius:5px}@media (max-width:514px){.event-card{-ms-flex-direction:column;flex-direction:column}}.event-card .event-card--title{-ms-flex:1 0 50%;flex:1 0 50%;margin:0 0 20px;font-size:20px;font-size:1.25rem;font-weight:700}.event-card .event-card--date{-ms-flex:1 0 50%;flex:1 0 50%;padding-left:10px;color:var(--jade);font-size:16px;font-size:1rem;font-weight:700;line-height:1.75;text-align:right}@media (max-width:514px){.event-card .event-card--date{padding-bottom:10px;padding-left:0;text-align:left}}.event-card .event-card--description{-ms-flex:1 0 100%;flex:1 0 100%;color:var(--body-copy);font-size:16.8px;font-size:1.05rem;line-height:1.75}.event-card .event-card--venue{-ms-flex:1 0 50%;flex:1 0 50%}.event-card .event-card--venue .event-card--venue-name{font-size:16px;font-size:1rem;font-weight:700}.event-card .event-card--venue .event-card--venue-address{font-size:16px;font-size:1rem}.event-card .event-card--actions{display:-ms-flexbox;display:flex;-ms-flex:1 0 50%;flex:1 0 50%;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:end;justify-content:flex-end}@media (max-width:514px){.event-card .event-card--actions{-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:start;justify-content:flex-start;margin-top:20px}}.event-card .event-card--actions .button{margin:0}.event-card .event-card--map-container{width:100%;margin-top:20px}.event-card .event-card--map-container .event-card--map{height:300px;margin-top:20px;-webkit-transition:.3s ease;-o-transition:.3s ease;transition:.3s ease;-webkit-transition-property:height,border,opacity;-o-transition-property:height,border,opacity;transition-property:height,border,opacity;border:1px solid var(--jade);opacity:1}.event-card .event-card--map-container .event-card--map.event-card--map__hidden{height:0;border-color:transparent;opacity:0}.event-card .event-card--map-container .event-card--map .event-card--map-marker{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;padding:10px;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);border-radius:5px;background:var(--jade);color:var(--white);text-align:center}.event-card .event-card--map-container .event-card--map .event-card--map-marker img{width:20px;height:20px;margin-right:10px;border:none}", ""]);

// exports


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(7)(false);
// imports


// module
exports.push([module.i, ":not(pre)>code[class*=language-],pre[class*=language-]{background:none;margin:0;padding:0;overflow:visible}code,pre{font-family:Source Code Pro,Consolas,Monaco,Andale Mono,Ubuntu Mono,monospace!important}.markdown-code__wrapper{position:relative}.markdown-code{border:1px solid #ececec;border-radius:0 0 5px 5px;background-color:#f8f8f8;padding:20px 25px;overflow:auto;margin-bottom:1.5rem;font-size:.92rem}.tab-item>.markdown-code{border:none;margin:0}.markdown-code pre{line-height:2rem}.markdown-code-inline{display:inline;border:1px solid #ececec;border-radius:3px;background-color:#f8f8f8;padding:0 5px;font-size:.93rem;line-height:1.5}.markdown__wrapper .markdown-code-copy--wrapper{position:absolute;top:5px;right:5px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.markdown__wrapper .markdown-code-copy-feedback{-webkit-transition:.3s ease-out;-o-transition:.3s ease-out;transition:.3s ease-out;-webkit-transition-property:opacity;-o-transition-property:opacity;transition-property:opacity;opacity:0;color:var(--tealish);margin-right:10px}.markdown__wrapper .markdown-code-copy-feedback--active{opacity:1}.markdown-code--copy{border:0;background:none;cursor:pointer;outline:0;opacity:.2;-webkit-transition:opacity .3s ease;-o-transition:opacity .3s ease;transition:opacity .3s ease}.markdown-code--copy:hover{opacity:.5}.markdown-code--copy:before{font-family:IOTA icons;font-size:18px;content:\"\\1F4C4\"}.markdown__wrapper img{max-width:100%;border:10px solid #f3f2f1;cursor:pointer}.markdown__wrapper dl{padding:1px 0 10px 20px;border-left:3px solid #20a49d}.markdown__wrapper dl dt{font-style:italic;font-weight:600;line-height:1.75;margin-top:16px;margin-bottom:16px;padding:0}.markdown__wrapper dl dd{font-style:italic;font-weight:300;margin-left:0;line-height:1.75}.markdown__wrapper table+h1{margin-top:48px}.markdown__wrapper ol{padding-left:24px;counter-reset:ol-counter}.markdown__wrapper ol li{list-style:none;position:relative;line-height:1.75;font-size:1.05rem}.markdown__wrapper ol li:before{content:counter(ol-counter) \".\";counter-increment:ol-counter;position:absolute;top:0;left:-24px;width:20px;font-weight:600}.markdown__wrapper a{word-break:break-all;word-break:break-word;color:#4f4f4f;text-decoration:underline!important}.markdown__wrapper a,.markdown__wrapper a:hover{-webkit-text-decoration-color:#1e9a93!important;text-decoration-color:#1e9a93!important}.markdown__wrapper a:hover{color:#1e9a93}.markdown__wrapper a:visited{color:#603f98;-webkit-text-decoration-color:#603f98!important;text-decoration-color:#603f98!important}.search-keyword{background-color:#cdbfe4}.markdown-map{width:100%;height:300px;border:1px solid var(--jade)}.markdown__wrapper .image-popup--overlay{position:fixed;top:0;left:0;right:0;bottom:0;background:#eee;opacity:.9;z-index:100}.markdown__wrapper .image-popup{display:-ms-flexbox;display:flex;-ms-flex-pack:distribute;justify-content:space-around;-ms-flex-align:center;align-items:center;position:fixed;top:0;left:0;right:0;bottom:0;z-index:101;padding:40px;cursor:pointer}.markdown__wrapper .image-popup img{border:none;background:#fff;padding:20px;max-height:100%;max-width:100%}.markdown-card{margin:20px -10px;border:10px solid transparent;-webkit-transition:.3s ease;-o-transition:.3s ease;transition:.3s ease}.markdown-card:hover{border:10px solid #eee}.markdown-card--inner{border:1px solid #eee;cursor:pointer}.markdown-card .link{text-decoration:none!important}.markdown__wrapper .markdown-card--image{border:0}.markdown__wrapper .markdown-card--content{font-weight:400;padding:10px 20px 20px;color:var(--body-copy)}.markdown__wrapper .markdown-card--title{font-weight:700;padding-bottom:10px;color:var(--jade)}", ""]);

// exports


/***/ }),
/* 93 */
/***/ (function(module, exports) {

module.exports = require("react-click-outside");

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = __webpack_require__(2);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouterPropTypes = __webpack_require__(4);

var _reactRouterPropTypes2 = _interopRequireDefault(_reactRouterPropTypes);

var _Logo = __webpack_require__(38);

var _Logo2 = _interopRequireDefault(_Logo);

var _propTypes3 = __webpack_require__(3);

var _search = __webpack_require__(10);

var _InputSearch = __webpack_require__(22);

var _InputSearch2 = _interopRequireDefault(_InputSearch);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Header = function (_React$Component) {
    _inherits(Header, _React$Component);

    function Header(props) {
        _classCallCheck(this, Header);

        var _this = _possibleConstructorReturn(this, (Header.__proto__ || Object.getPrototypeOf(Header)).call(this, props));

        _this.handleBurgerClick = _this.handleBurgerClick.bind(_this);
        _this.handleKeyUp = _this.handleKeyUp.bind(_this);
        _this.onSearch = _this.onSearch.bind(_this);
        return _this;
    }

    _createClass(Header, [{
        key: 'handleBurgerClick',
        value: function handleBurgerClick() {
            if (this.props.onBurgerClick) {
                this.props.onBurgerClick();
            }
        }
    }, {
        key: 'onSearch',
        value: function onSearch(query) {
            (0, _search.performSearch)(this.props.history, query);
        }
    }, {
        key: 'handleKeyUp',
        value: function handleKeyUp(e) {
            if (e.key === 'Escape') {
                this.setState({ inputExpanded: false });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                topTitles = _props.topTitles,
                headerTitle = _props.headerTitle;


            return _react2.default.createElement(
                'header',
                { className: (0, _classnames2.default)('header', { 'compact': this.props.viewData.disableSearch }) },
                _react2.default.createElement(
                    'div',
                    { className: 'header__wrapper' },
                    _react2.default.createElement(
                        'section',
                        { className: 'header__head' },
                        _react2.default.createElement('img', { className: 'header__brand', src: _Logo2.default }),
                        _react2.default.createElement(
                            'div',
                            null,
                            _react2.default.createElement(
                                'div',
                                { className: 'top-header' },
                                _react2.default.createElement(
                                    'ul',
                                    { className: 'top-header__items' },
                                    topTitles.map(function (topTitle, index) {
                                        return _react2.default.createElement(
                                            'li',
                                            { key: index, className: 'top-header__item' },
                                            _react2.default.createElement(
                                                'a',
                                                { href: topTitle.href, target: '_blank', rel: 'noopener noreferrer' },
                                                topTitle.name
                                            )
                                        );
                                    })
                                )
                            ),
                            _react2.default.createElement('button', { className: 'header__icon', onClick: this.handleBurgerClick })
                        )
                    ),
                    _react2.default.createElement(
                        'section',
                        { className: 'header__body', style: {} },
                        _react2.default.createElement(
                            'span',
                            { className: 'header__title text text--level1 text--secondary' },
                            headerTitle
                        ),
                        !this.props.viewData.disableSearch && _react2.default.createElement(
                            'div',
                            { className: 'header__search' },
                            _react2.default.createElement(
                                'div',
                                { className: 'input-wrapper' },
                                _react2.default.createElement(_InputSearch2.default, {
                                    className: 'input-search',
                                    placeholder: '\u30C8\u30D4\u30C3\u30AF\u691C\u7D22',
                                    onKeyUp: this.handleKeyUp,
                                    onSearch: this.onSearch
                                }),
                                this.props.popularTopics && _react2.default.createElement(
                                    'nav',
                                    null,
                                    _react2.default.createElement(
                                        'span',
                                        null,
                                        'Popular topics:'
                                    ),
                                    this.props.popularTopics.map(function (pt, idx) {
                                        return _react2.default.createElement(
                                            _react2.default.Fragment,
                                            { key: idx },
                                            _react2.default.createElement(
                                                'a',
                                                { onClick: function onClick() {
                                                        return _this2.onSearch(pt.query);
                                                    } },
                                                pt.name
                                            ),
                                            idx < _this2.props.popularTopics.length - 1 && _react2.default.createElement(
                                                'span',
                                                null,
                                                ','
                                            )
                                        );
                                    })
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return Header;
}(_react2.default.Component);

Header.propTypes = {
    headerTitle: _propTypes2.default.string,
    topTitles: _propTypes2.default.arrayOf(_propTypes2.default.shape({
        name: _propTypes2.default.string,
        href: _propTypes2.default.string
    })),
    popularTopics: _propTypes2.default.arrayOf(_propTypes2.default.shape({
        query: _propTypes2.default.string.isRequired,
        name: _propTypes2.default.string.isRequired
    })),
    onBurgerClick: _propTypes2.default.func,
    history: _reactRouterPropTypes2.default.history,
    viewData: _propTypes3.ViewDataPropTypes.isRequired
};
exports.default = Header;

/***/ }),
/* 95 */
/***/ (function(module, exports) {

module.exports = [{"id":"docs/getting-started/0.1/introduction/what-is-dlt","name":"分散型台帳技術とは？","summary":"分散型台帳技術（DLT）は、デジタル商品（デジタル形式で存在する無形の商品）の所有者がデジタル商品をP2Pで転送できるようにしたデータベースアーキテクチャです。"},{"id":"docs/getting-started/0.1/introduction/what-is-iota","name":"IOTAとは？","summary":"IOTAは、IOTAネットワーク内のデバイスがイミュータブルなデータと価値（IOTAトークン）を無料で相互に転送できるようにする分散型台帳技術です。"},{"id":"docs/getting-started/0.1/introduction/what-is-a-node","name":"ノードとは？","summary":"ノードは、IOTAネットワーク内のタングルへの読み書きアクセス権を持つデバイスです。すべてのノードはタングルのコピーとIOTAトークンを保持するアドレスの記録を保存します。クライアントはIOTAネットワーク内の任意のノードにバンドルを送信できるので、トランザクションを検証でき、トランザクションをタングルに添付し、他のノ..."},{"id":"docs/getting-started/0.1/introduction/what-is-the-tangle","name":"タングルとは？","summary":" タングルは、IOTAトランザクションの履歴を含むイミュータブルなデータ構造です。IOTAネットワーク内のすべてのノードは、台帳にタングルのコピーを保存し、そこから読み取って新しいトランザクションをタングルに添付することができます。"},{"id":"docs/getting-started/0.1/introduction/what-is-a-seed","name":"シードとは？","summary":"シードはシードから導出されたすべてのアドレスにアクセスできるようにする一意なパスワードです。これらのアドレスはIOTAトークンを保持しているので残高があります。IOTAトークンを使うには、シードを使って、IOTAトークンを保持しているアドレスを所有していることを証明する必要があります。シードには数字9と大文字のA〜Zの..."},{"id":"docs/getting-started/0.1/introduction/what-is-a-transaction","name":"トランザクションとは？","summary":"IOTAネットワークに何か送信したい場合は、トランザクションの形でノードに送信する必要があります。トランザクションは、入力トランザクションまたは出力トランザクションのいずれかになり得る単一の操作です。"},{"id":"docs/getting-started/0.1/introduction/what-is-a-bundle","name":"バンドルとは？","summary":"バンドルとは、データを格納したり、特定のアドレスから他のアドレスにIOTAトークンを転送するようにノードに指示することができる1つ以上のトランザクションのグループです。すべてのトランザクションは、単一のものであっても、常にバンドルとしてノードに送信されます。"},{"id":"docs/getting-started/0.1/tutorials/get-started","name":"開発入門","summary":":::info:開発者ではありませんか？\nコードを記述しなくてもIOTAがどのように機能するかを知りたい場合は、トリニティを使用してシードを作成し、初めてのデータトランザクションを送信することもできます。\n:::"},{"id":"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs","name":"最初のメッセージをタングルに送信する（Node.js）","summary":"IOTAを使用すると、IOTAトークンと同様にデータ（ゼロトークン）トランザクションを送信できます。これらのゼロトークントランザクションは、イミュータブルなメッセージをタングルに送信して保存したいアプリケーションに役立ちます。ゼロトークンのトランザクションのみを送信するためには、IOTAトークンは必要ありません。"},{"id":"docs/getting-started/0.1/tutorials/receive-test-tokens","name":"無料のテストトークンを受け取る","summary":"IOTAをテストするときは、あるアドレスから別のアドレスにIOTAトークンを送信したいと思います。Mainnet上では、IOTAトークンは取引所でトレードすることができる金銭的価値を持っています。危険を冒さずにテストトランザクションを送信するには、Devnetが使用できます。 Devnetは、トークンが無料であること以..."},{"id":"docs/getting-started/0.1/tutorials/send-iota-tokens","name":"テスト用IOTAトークンを転送する","summary":"商品やサービスと引き換えにIOTAトークンを誰かに転送ことができます。このチュートリアルでは、アドレスの一つから他のアドレスへテストトークンを送信します。"},{"id":"docs/getting-started/0.1/tutorials/run-your-own-iri-node","name":"自分のIRIノードを走らせる（Docker）","summary":"ノードはIOTAネットワークの中核です。クライアントは、トランザクションをノードに送信して検証し、台帳に記録する必要があります。ノードがなければ、IOTAネットワークは存在しません。誰が誰に何を送信したかを記録する方法がないため、トランザクションを送信することはできません。"},{"id":"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-the-trinity-wallet","name":"初めてのメッセージをタングルに送信する（トリニティ）","summary":"トリニティは、IOTAネットワークにデータとIOTAトークンを転送できるユーザーインターフェースを備えたモバイルおよびデスクトップアプリケーションです。IOTAトークンを含まないランダムシードを使用して、ゼロトークントランザクションを送信できます。これらのトランザクションは、イミュータブルなメッセージをタングルに送信し..."},{"id":"docs/getting-started/0.1/references/quickstart-dev-handbook","name":"IOTA開発者ハンドブック","summary":"このハンドブックでは、IOTAテクノロジーの概要を説明し、あなた自身のアプリケーションでIOTAテクノロジーをどのように活用できるかを特定するのに役立ちます。"},{"id":"docs/getting-started/0.1/references/iota-networks","name":"パブリックIOTAネットワーク","summary":"IOTAには、3つのパブリックノードネットワークがあります。各ネットワークには、ノードがトランザクションを添付できる独自の分散台帳（タングル）があります。パブリックネットワーク上のノードにバンドルを接続して送信することができます。"},{"id":"docs/getting-started/0.1/references/use-cases","name":"ユースケース","summary":""},{"id":"docs/dev-essentials/0.1/introduction/overview","name":"開発者向け重要事項の概要","summary":"IOTAネットワークは、ノードとクライアントで構成されています。ノードは、トランザクションのタングルと呼ばれる台帳への読み取り/書き込みのアクセス権を持つデバイスです。クライアントは、データまたはIOTAトークンのいずれかを転送するトランザクションを作成し、トランザクションを検証のためにノードに送信するデバイスです。シ..."},{"id":"docs/dev-essentials/0.1/concepts/the-tangle","name":"タングル","summary":"タングルは、IOTAトランザクションを含むイミュータブルなデータ構造です。IOTAネットワーク内のすべてのノードは、タングルのコピーを台帳に保存し、台帳から読み取り、新しいトランザクションを添付し、トランザクション内容について合意に達します。"},{"id":"docs/dev-essentials/0.1/concepts/addresses-and-signatures","name":"アドレスと署名","summary":"IOTAネットワークでトランザクションを送信するには、シードと呼ばれる秘密のパスワードが必要です。シードにより、シードから導出されたすべてのアドレスにアクセスできます。これらのアドレスはIOTAトークンを保持しているので、IOTAネットワーク内のすべてのノードに保存され、最新の状態に保たれる残高を持っています。IOTA..."},{"id":"docs/dev-essentials/0.1/concepts/bundles-and-transactions","name":"バンドルとトランザクション","summary":"IOTAネットワークに何か送信したい場合は、トランザクションの形でノードに送信する必要があります。トランザクションは、入力トランザクション（アドレスからの取り出し）または出力トランザクション（アドレスへの預け入れまたはゼロトークントランザクション）のいずれかになる単一の操作です。ノードに1つ以上のトランザクションを送信..."},{"id":"docs/dev-essentials/0.1/concepts/minimum-weight-magnitude","name":"最小重量値","summary":"各トランザクションには、スパム防止対策である有効なプルーフオブワークが含まれている必要があります。最小重量値（MWM）は、プルーフオブワーク中に行われる作業量を定義する変数です。クライアントとしてIOTAネットワークと対話するときは、そのネットワークに適したMWMを使用する必要があります。そうでなければ、トランザクショ..."},{"id":"docs/dev-essentials/0.1/concepts/reattach-rebroadcast-promote","name":"再添付、再ブロードキャスト、促進","summary":"バンドルは、ネットワークの負荷が増加するなどの、さまざまな理由でペンディングの場合があります。バンドルが確定される可能性を高めるために、バンドルを再添付、再ブロードキャスト、または促進することができます。 "},{"id":"docs/dev-essentials/0.1/concepts/trinary","name":"3進法","summary":"IOTAは、3進数システムに従ってデータを表します。2進数と比較すると、2値計算ではなく3つの状態でデータを表すことができるため、2進数計算より効率的です。"},{"id":"docs/dev-essentials/0.1/how-to-guides/convert-data-to-trytes","name":"データをトライトへ変換する","summary":"トランザクションフィールドの値は、トライトで表現する必要があります。データ変換を容易にするために、IOTAクライアントライブラリには、トライト、トリット、およびASCII文字との間でデータを変換するための組み込みコンバータがあります。"},{"id":"docs/dev-essentials/0.1/how-to-guides/create-an-address","name":"アドレスを作成する","summary":"IOTAトークンを受け取るには、送信者に自分のアドレスの1つを渡す必要があります。このアドレスは自分のシードから導出されるものです。インデックスをインクリメントしたり、別のセキュリティレベルを使用したりすることで、シードから新しいアドレスを導出することができます。"},{"id":"docs/dev-essentials/0.1/how-to-guides/derive-addresses-from-private-keys","name":"秘密鍵からアドレスを導出する","summary":"クライアントライブラリを使用して秘密鍵からアドレスを導出することで、アドレス、プライベートキー、およびセキュリティレベルの間の関係についてより深く理解することができます。"},{"id":"docs/dev-essentials/0.1/how-to-guides/send-bundle","name":"ゼロトークントランザクションのバンドルを送信する","summary":"トランザクションは、ノードに送信される前にバンドルにまとめられる必要があります。 IOTAクライアントライブラリには、転送オブジェクトからバンドルを作成する組み込み関数があります。"},{"id":"docs/dev-essentials/0.1/how-to-guides/check-transaction-confirmation","name":"トランザクションが確定したか確認する","summary":"IOTAトークンを転送する前に、IOTAトークンを転送するバンドルを確認する必要があります。バンドル内のトランザクションは、最後のトランザクションがマイルストーンによって参照および承認されるまでペンディング状態のままになります。"},{"id":"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle","name":"ペンディング中のバンドルを確定させる","summary":"マイルストーンによって承認されるためには、チップ選択時にトランザクションが選択される必要があります。これは、古いトランザクションよりも新しいトランザクションを優先します。したがって、バンドルがペンディング状態に長く固執しているほど、確定される可能性は低くなります。バンドルが確定される可能性を高めるには、状況に応じて末尾..."},{"id":"docs/dev-essentials/0.1/references/structure-of-a-transaction","name":"トランザクションの構造","summary":"トランザクションは、トライトがエンコードされた2673文字の文字列で構成されています。デコードされると、トランザクションオブジェクトは以下のフィールドを含みます。"},{"id":"docs/dev-essentials/0.1/references/structure-of-a-bundle","name":"バンドルの構造","summary":"先頭トランザクションを除くバンドル内のすべてのトランザクションは、trunkTransactionフィールドを介して互いに接続されています。これらの接続により、ノードは同じバンドル内のすべてのトランザクションを見つけて検証することができます。"},{"id":"docs/dev-essentials/0.1/references/security-levels","name":"セキュリティレベル","summary":"アドレスを作成するとき、アドレスの派生元のシード、インデックス、およびセキュリティレベルを指定できます。"},{"id":"docs/dev-essentials/0.1/references/tryte-alphabet","name":"トライトアルファベット","summary":"この表は、トライトからトライトがエンコードされたアルファベットへの変換と、それに相当する10進数の値を表しています。"},{"id":"docs/dev-essentials/0.1/references/units-of-iota-tokens","name":"IOTAトークンの単位","summary":"IOTAトークンの総供給量は(333-1) / 2で、これは2,779,530,283,277,761に相当します。この数が非常に大きいので、IOTAトークンの単位はSI表記で書かれています。"},{"id":"docs/dev-essentials/0.1/references/glossary","name":"用語集","summary":"アドレスIOTAトークンを所有するアカウント。アドレスを使ってデータとIOTAトークンを送受信できます。"},{"id":"docs/client-libraries/0.1/introduction/overview","name":"クライアントライブラリ概要","summary":"IOTAクライアントライブラリは、IOTAプロトコルの複雑さを、トランザクションの作成、送信、受信、およびリクエストを可能にする単純なメソッドに抽象化します。"},{"id":"docs/iota-js/0.1/introduction/overview","name":"overview","summary":"JavaScriptクライアントライブラリを使用すると、サポートされているパッケージを使用して、タングルと対話するクライアントまたはサーバーとして機能するアプリケーションを作成できます。"},{"id":"docs/iota-java/0.1/introduction/overview","name":"overview","summary":"Javaクライアントライブラリを使用すると、サポートされているパッケージを使用して、タングルと対話するクライアントまたはサーバーとして機能するアプリケーションを作成できます。"},{"id":"docs/iota-go/0.1/introduction/overview","name":"overview","summary":"Goクライアントライブラリを使用すると、サポートされているパッケージを使用して、タングルと対話するクライアントまたはサーバーとして機能するアプリケーションを作成できます。"},{"id":"docs/smartcity/0.1/introduction/overview","name":"overview","summary":"AstroPiOTAは、タングルを使用してローカル環境データを追跡するためにMAMに接続されている国際宇宙ステーションからのAstroPiのクローンです。地球上で、AstroPiOTAはローカルの天気予報を理解し報告するのを助け、地震予知に役立つかもしれません。"},{"id":"docs/node-software/0.1/introduction/overview","name":"ノードソフトウェア","summary":"IOTAネットワークは、相互に接続されたノードから構成されています。これらのノードは、同じノードソフトウェアを実行するコンピュータです。このソフトウェアは、ノードにタングルへの読み取り/書き込みアクセス権を付与し、ノードがトランザクションを検証してトランザクションを台帳に保存できるようにします。"},{"id":"docs/node-software/0.1/iri/introduction/overview","name":"IOTAリファレンス実装概要","summary":"IRI（IOTAリファレンス実装）は、IOTAプロトコルを定義するオープンソースのJavaソフトウェアです。現在IRIはクライアントがIOTAトークンを相互に転送できるIOTA Mainnet上で実行されているソフトウェアです。"},{"id":"docs/node-software/0.1/iri/concepts/the-ledger","name":"台帳","summary":"ノードは、トランザクションを台帳と呼ばれるローカルの追加専用のRocksDBデータベースに追加することで、トランザクションをタングルに添付します。"},{"id":"docs/node-software/0.1/iri/concepts/neighbor-iri-node","name":"隣接IRIノード","summary":" 隣接ノードは、相互に接続され、同じIOTAネットワーク上で互いに直接通信するIRIノードです。IRIの台帳をネットワークの他の部分と同期させるには、すべてのIRIノードが隣接ノード間でトランザクションを送受信する必要があります。"},{"id":"docs/node-software/0.1/iri/concepts/transaction-validation","name":"トランザクション検証","summary":"IOTAネットワーク内の各IRIノードは、偽造トランザクションが決して確定されないようにトランザクションを検証する責任があります。"},{"id":"docs/node-software/0.1/iri/concepts/zero-message-queue","name":"ゼロメッセージキュー","summary":" ゼロメッセージキュー（Zero message queue, ZMQ）は、クライアントがIRIで発生したイベントを購読することを可能にするオープンソースのリアルタイムメッセージングライブラリです。"},{"id":"docs/node-software/0.1/iri/concepts/local-snapshot","name":"ローカルスナップショット","summary":"ローカルスナップショットは、IRIノードが台帳の状態をスナップショットファイルに記録するプロセスです。 IRIノードがスナップショットの実行を開始するには、特定のマイルストーンから始めて、隣接ノードと台帳を同期させる必要があります。 IRIの各バージョンには、ノードがスナップショットを開始できるハードコードされたマイル..."},{"id":"docs/node-software/0.1/iri/concepts/tip-selection","name":"チップ選択","summary":"タングル内の各トランザクションは、前の2つのトランザクションを参照しなければなりません。チップ選択は、ノードが自身の台帳の部分グラフから2つのランダムなチップトランザクションを選択するプロセスです。クライアントがgetTransactionsToApproveエンドポイントを呼び出すと、ノードはチップ選択を行います。"},{"id":"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux","name":"LinuxサーバでIRIノードを実行する","summary":"IRIソフトウェアを実行すると、お使いのデバイスがタングルに直接アクセス可能なノードになります。ノードを実行することで、台帳の数を増やし、隣接ノードのトランザクションを検証することで、IOTAネットワークがより分散されるようになります。"},{"id":"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker","name":"DockerコンテナでIRIノードを実行する","summary":"Dockerコンテナ内でIRIを実行すると、デバイスはIRIノード用のLinuxサーバになり、タングルに直接アクセスできるようになります。 IRIノードを実行することで、台帳の数を増やし、隣接IRIノードのトランザクションを検証することで、IOTAネットワークをより分散させることができます。"},{"id":"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy","name":"リバースプロキシサーバを設定する","summary":"クライアントは、APIリクエストをスパミングすることによって、IRIノードのオープンAPIポートを悪用することができます。IPアドレスでAPIリクエストを制限したり、APIリクエストの数を制限したりするには、IRIノードをリバースプロキシサーバに接続します。"},{"id":"docs/node-software/0.1/iri/how-to-guides/prune-transactions-from-the-ledger","name":"台帳からトランザクションを刈り取る","summary":"時間が経つにつれて、IRIノードの台帳には多くのトランザクションが蓄積され、多くの場合、IRIノードの使用可能メモリよりも大きくなります。台帳が大きくなり過ぎないようにするために、定期的に台帳から古いトランザクションを削除することを選択できます。"},{"id":"docs/node-software/0.1/iri/how-to-guides/find-neighbor-iri-nodes","name":"隣接IRIノードを見つける","summary":"台帳内のトランザクションをネットワークの他の部分と同期させるには、IRIノードは隣接ノードと呼ばれる他のIRIノードと通信する必要があります。同じネットワーク上で隣接IRIノードを見つけるには、IRIノード所有者にIRIノードのURLまたはIPアドレスを尋ね、自分のIRIノードのURLまたはIPアドレスを渡す必要があり..."},{"id":"docs/node-software/0.1/iri/how-to-guides/interact-with-an-iri-node","name":"ノードにリクエストを送信する","summary":"ノードは、PORT設定パラメーターに設定されているAPIポートでクライアントからのトランザクションを受信します。このポートにHTTPリクエストを送信して、ノードのREST APIとやり取りすることができます。これにより、タングルに対してデータの読み書きを行うことができます。"},{"id":"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node","name":"ノードのイベントを購読する","summary":"ノードのZMQポートが有効になっている場合は、トランザクション確定などのイベントを購読できます。これらのイベントにより、IOTAネットワークからのリアルタイムデータが得られます。"},{"id":"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing","name":"Apache Flinkを使用してZMQイベントをほぼリアルタイムで処理する","summary":"ZMQイベントを購読すると、ノードからほぼリアルタイムでタングルデータを受信できます。このデータを処理するために、オープンソースのApache Flinkなどのストリーム処理フレームワークを使用できます。"},{"id":"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy","name":"プルーフオブワーク用プロキシサーバをインストールする","summary":"attachToTangleエンドポイントはリソースを大量に消費します。結果として、attachToTangleエンドポイントへの多くの呼び出しは時々ノードをクラッシュさせることがあります。この問題を解決するには、専用のプロキシサーバーをインストールして、ノードのプルーフオブワーク（PoW）を行います。"},{"id":"docs/node-software/0.1/iri/how-to-guides/update-the-iri","name":"IRIを更新する","summary":"新しいバージョンのIRIがGitHubでリリースされたら、ローカルのIRIを新しいバージョンに更新することをお勧めします。"},{"id":"docs/node-software/0.1/iri/references/api-reference","name":"APIリファレンス","summary":":::warning:\nこのAPIはベータ版であり、変更される可能性があります。運用版アプリケーションではこのAPIを使用しないことをお勧めします。\n:::"},{"id":"docs/node-software/0.1/iri/references/api-errors","name":"APIエラーメッセージ","summary":"APIリクエストが失敗すると、レスポンスボディにHTTPエラーコードとJSONオブジェクトが返されます。"},{"id":"docs/node-software/0.1/iri/references/best-practice","name":"ノードを実行するためのベストプラクティス","summary":"ノードを実行すると、信頼性の高いアーキテクチャを設定するためのさまざまなオプションがあります。この記事はIOTA財団がIOTA財団のパートナーにしばしば与えるいくつかのアドバイスを与えます。"},{"id":"docs/node-software/0.1/iri/references/data-in-the-ledger","name":"台帳内のデータ","summary":"次の表に、IRIノードがtransaction-metadataカラムに追加するメタデータを示します。"},{"id":"docs/node-software/0.1/iri/references/data-in-the-snapshot-metadata-file","name":"スナップショットメタデータファイルのデータ","summary":"この表には、ローカルスナップショット中にsnapshot.metaファイルに追加されるデータが含まれています。"},{"id":"docs/node-software/0.1/iri/references/iri-configuration-options","name":"IRI設定オプション","summary":"IRI構成オプションを使用すると、ノードの動作をカスタマイズできます。これらのオプションは、コマンドライン（CLフラグ）または.ini構成ファイル（構成ファイルパラメーター）で設定できます。"},{"id":"docs/node-software/0.1/iri/references/zmq-events","name":"ZMQイベント","summary":"すべてのイベントは、スペースで区切られたデータを含む少なくとも1つのバッファオブジェクトを返します。バッファの最初の項目は常にイベントの名前です。「返されたデータ」カラムの情報は、バッファが文字列に変換され、スペース文字で配列に分割されたかのように表示されます。"},{"id":"docs/node-software/0.1/iri/references/troubleshooting","name":"トラブルシューティング","summary":"このリファレンスガイドを使用して、IRIのインストール、設定、または実行に関連する問題を解決してください。"},{"id":"docs/node-software/0.1/chronicle/introduction/overview","name":"クロニクル概要","summary":"クロニクルは、IRIノードに到達するすべてのトランザクションを安全で拡張性の高い分散データベースに保存できるパーマノードソリューションです。"},{"id":"docs/node-software/0.1/chronicle/how-to-guides/get-started","name":"Linuxサーバーでクロニクルを実行する","summary":"クロニクルを実行すると、1つ以上のIRIノードでトランザクションイベントを購読し、そのトランザクションデータをScyllaDBクラスターに保存します。このようにして、ローカルスナップショット中にIRIノードがいつ台帳からプルーニングするかに関係なく、すべてのトランザクションデータが保存されます。"},{"id":"docs/node-software/0.1/chronicle/references/api-reference","name":"API","summary":"このリストには、HTTP APIを介してScyllaクラスターと通信するためのコマンドが含まれています。"},{"id":"docs/node-software/0.1/chronicle/references/architecture","name":"クロニクルアーキテクチャー","summary":"1つのクロニクルノードがScyllaスウォームのすべてのシャードを管理および監督します。これは、各シャードへの少なくとも1つの独立した接続を確立することによって行われます。これは、アンブレラプロジェクトのコアアプリによって監視されます。"},{"id":"docs/node-software/0.1/chronicle/references/data-model","name":"Scyllaデータモデル","summary":"bundle_hash：メインパーティションキー。同じバンドルハッシュを持つすべてのバンドルは、同じパーティションに保存され、同じレプリカに複製されます。"},{"id":"docs/node-software/0.1/chronicle/references/design-goals","name":"設計目標","summary":"IOTAのデータ整合性は、コンセンサスを通じて検証されます。クロニクルからのデータは、信頼できるノードのクォーラムを照会し、その結果を比較することで検証できます。"},{"id":"docs/node-software/0.1/goshimmer/introduction/overview","name":"GoShimmer","summary":"GoShimmerは、ノードがコーディネーターなしでコンセンサスに到達できるようにするノードソフトウェアの進行中のプロトタイプであり、IOTAネットワークの分散化を可能にします。"},{"id":"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node","name":"GoShimmerノードを実行する","summary":"GoShimmerソフトウェアを実行すると、デバイスがプロトタイプネットワークのノードになります。ノードを実行することにより、ネットワークをテストし、定期的な変更を最新の状態に保つことができます。すべてのモジュールが使用可能になると、このネットワークはコーディサイドテストネットになり、次のIOTAプロトコルのリリース候..."},{"id":"docs/node-software/0.1/goshimmer/how-to-guides/send-spam","name":"ノードにスパムトランザクションを送信する","summary":"ノードが1秒間に処理できるトランザクション数をテストするには、spammerAPIエンドポイントを使用してスパムトランザクションを送信します。"},{"id":"docs/node-software/0.1/goshimmer/how-to-guides/subscribe-to-events","name":"ノードの着信トランザクションを監視する","summary":"ノードがトランザクションを受信すると、ノードは受信したトランザクションをトランザクションイベントとしてゼロメッセージキュー（ZMQ）と呼ばれるサービスに発行します。クライアントとして、このイベントを購読して、ノードの着信トランザクションを監視することができます。"},{"id":"docs/node-software/0.1/goshimmer/references/command-line-flags","name":"コマンドラインフラグ","summary":"GoShimmerコードを実行するコマンドでは、以下のフラグを渡してノードのデフォルトの動作を変更できます。たとえば、デフォルトの自動ピアリングポートを変更するように選択できます。"},{"id":"docs/compass/0.1/introduction/overview","name":"プライベートタングル概要","summary":"プライベートタングルは運用者が管理するIOTAネットワークで、運用者が知っているノードだけを含みます。プライベートタングルは、パブリックIOTAネットワークと同じテクノロジを使用しますが、コンパスと呼ばれるコーディネータのオープンソース実装を実行してプライベートタングルを制御します。コンパスを使用すると、プライベートタ..."},{"id":"docs/compass/0.1/how-to-guides/set-up-a-private-tangle","name":"プライベートタングルを設定する","summary":"プライベートタングルは運用者がコントロールするもので、運用者が知っているノードだけを含みます。パブリックタングル内のトランザクションを見ることができるMainnetやDevnetなどのパブリックIOTAネットワークを使用せずにアプリケーションをテストしたい場合は、プライベートタングルを設定します。"},{"id":"docs/compass/0.1/references/compass-configuration-options","name":"コンパス設定オプション","summary":"コンパス設定オプションを使用すると、ニーズに応じてプライベートタングルをカスタマイズできます。たとえば、特定のテスト用に軽量のプライベートタングルを作成したり、Mainnetに似た、よりリソース集約型のプライベートタングルを作成したりすることができます。"},{"id":"docs/compass/0.1/references/merkle-tree-compute-times","name":"マークル木計算時間","summary":"マークル木の計算にかかる時間を把握するために、Amazon Web Services上の仮想プライベートサーバのインスタンス（T2.Xlarge）でテストを行いました。"},{"id":"docs/compass/0.1/references/troubleshooting","name":"トラブルシューティング","summary":"Got permission denied while trying to connect to the Docker daemon socket"},{"id":"docs/wallets/0.1/introduction/overview","name":"ウォレット","summary":"ウォレットはシードを保存し、データベースにトランザクションの記録を保存するアプリケーションです。ウォレットを使用すると、シードの保護、トランザクションの送信、および残高の管理のプロセスを簡素化できます。"},{"id":"docs/wallets/0.1/trinity/introduction/overview","name":"トリニティ概要","summary":"トリニティは、データとIOTAトークンを転送できるユーザーインターフェースを備えたモバイルおよびデスクトップアプリケーションです。トリニティでは、複数のシードを暗号化して保存することができます。各シードには独自のアカウント、トランザクション履歴、および設定があります。"},{"id":"docs/wallets/0.1/trinity/concepts/hardware-wallet","name":"ハードウェアウォレット","summary":"ハードウェアウォレットは、コールドストレージとも呼ばれ、資金を保護するための物理的な電子デバイスです。"},{"id":"docs/wallets/0.1/trinity/concepts/node-quorum","name":"ノードクォーラム","summary":"タングルからの情報の供給源として1つのノードだけに頼るとき、あなたはそれが正しいという確信が持てません。例えば、そのノードはあなたの利用可能な残高について間違った情報をあなたに送るかもしれません。トリニティが表示する情報に対する信頼性を高めるために、トリニティは複数のノードに接続して結果を比較することができます。このノ..."},{"id":"docs/wallets/0.1/trinity/how-to-guides/create-an-account","name":"アカウントを作成する","summary":"トリニティアカウントはパスワードで保護されており、シードをモバイル端末やコンピュータに安全に保管することができます。"},{"id":"docs/wallets/0.1/trinity/how-to-guides/back-up-seed","name":"シードをバックアップする","summary":"シードは秘密のパスワードであり、シードは固有のアドレスと電子署名を生成するために使われます。トリニティはモバイル端末またはコンピュータにシードを厳重に保管します。その結果、モバイル端末やコンピュータを失うことになった場合、シードを失うことになります。シード（およびIOTAトークン）が失われないようにするには、シードをバ..."},{"id":"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop","name":"デスクトップ版のダウンロードを検証する","summary":"トリニティデスクトップをダウンロードした時は、その信頼性を検証して、IOTA財団のGitHubリポジトリから正しいものをダウンロードしたことを確認することをお勧めします。"},{"id":"docs/wallets/0.1/trinity/how-to-guides/read-your-balance","name":"残高を読み込む","summary":"トリニティは、ネットワーク内のIRIノードに、シードに関連したすべてのアドレスの残高をリクエストすることによって、定期的に残高を更新します。"},{"id":"docs/wallets/0.1/trinity/how-to-guides/send-a-transaction","name":"トランザクションを送信する","summary":"トリニティには、ボタンをクリックするだけで複数のトランザクションを送信できるユーザーインターフェースがあります。"},{"id":"docs/wallets/0.1/trinity/how-to-guides/receive-a-transaction","name":"トランザクションを受信する","summary":"トリニティには、トランザクションを受信し、ボタンをクリックするだけで新しいアドレスを生成することができるユーザー・インターフェースがあります。"},{"id":"docs/wallets/0.1/trinity/how-to-guides/create-a-qr-code","name":"トリニティが読み取れるQRコードを作成する","summary":"送信者がアドレスなどの長いトランザクション情報を入力のを避けるために、トランザクションフィールドに自動入力できるQRコードを作成します。"},{"id":"docs/wallets/0.1/trinity/how-to-guides/create-deep-link","name":"ディープリンクを作成する","summary":"ディープリンクは、トリニティのトランザクションフィールドに自動入力されるカスタマイズ可能なリンクです。 Webサイトまたはeコマースプラットフォームにディープリンクを追加して、顧客にとってIOTA支払いをより迅速かつ容易にすることができます。"},{"id":"docs/wallets/0.1/trinity/how-to-guides/connect-to-a-custom-node","name":"カスタムノードに接続する","summary":"トリニティは、デフォルトノードのクォーラムを介してタングルと対話します。自分自身のノードの1つをクォーラムに追加するか、カスタムノードのクォーラムに接続するか、プルーフオブワークに使用する特定のノードに接続するかを選択できます。"},{"id":"docs/wallets/0.1/trinity/how-to-guides/outsource-pow","name":"プルーフオブワークを外部委託する","summary":"トランザクションを送信する前に、プルーフオブワークを含める必要があります。プルーフオブワークには、エネルギーを使用して計算を行うコンピューターが必要です。デフォルトでは、トリニティを実行しているコンピューターでプルーフオブワークが行われます。"},{"id":"docs/wallets/0.1/trinity/how-to-guides/manage-your-account","name":"アカウントを管理する","summary":"デスクトップでアカウント設定にアクセスするには、バーガーメニュー > アカウント > アカウント設定に移動します。"},{"id":"docs/wallets/0.1/trinity/how-to-guides/manage-your-security-settings","name":"生体認証を設定する（モバイル端末のみ）","summary":"生体認証は、指紋を使ってトリニティにログインすることを可能にするセキュリティプロセスです。生体認証を設定すると、指紋またはパスワードを使ってトリニティにログインすることができます。"},{"id":"docs/wallets/0.1/trinity/how-to-guides/change-the-general-settings","name":"一般設定を変更する","summary":"一般設定を使用して、ユーザーインターフェイスの要素の変更、パスワードの変更、トリニティが接続するノードの変更などができます。"},{"id":"docs/wallets/0.1/trinity/how-to-guides/auto-promote","name":"トランザクションの確定を助ける","summary":"トランザクションが確実に確定されるように、トリニティはトランザクションが確定されるまで自動促進（促進と再添付）することができます。 "},{"id":"docs/wallets/0.1/trinity/how-to-guides/perform-a-snapshot-transition","name":"スナップショット移行を実行する","summary":"グローバルスナップショット中に、ノードは自身の台帳から古いトランザクションデータを削除してメモリを解放します。グローバルスナップショットの後、ノードは少なくとも1iの残高を持つアドレスのみを保持します。グローバルスナップショットの後に正しい残高が表示されない場合は、トリニティが最新の残高をリクエストできるように、スナッ..."},{"id":"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity","name":"トリニティ上で機能を開発する","summary":"他のアプリケーションと同様に、トリニティは新しい機能を開発できるオープンソースのプラットフォームです。"},{"id":"docs/wallets/0.1/trinity/references/troubleshooting","name":"トラブルシューティング","summary":"トリニティがノードに接続できない場合は、ネットワーク上の古いトランザクションの情報が表示されるかもしれません。この情報は、トリニティに誤った残高を表示させる可能性があります。"},{"id":"docs/wallets/0.1/hub/introduction/overview","name":"ハブ概要","summary":"ハブは、暗号通貨取引所用のヘッドレスマルチユーザーウォレットです。ハブは、アプリケーションプログラミングインターフェイス（API）を通じて、IOTAを取引所に統合する簡単な方法を提供します。RESTful APIまたはgRPC APIのいずれかを使用することを選択できます。これらのAPIは、IOTAトークンのユーザーの..."},{"id":"docs/wallets/0.1/hub/concepts/sweeps","name":"スウィープ","summary":"スウィープは、ユーザーの取り出しと預け入れの残高のバンドルです。ユーザーがIOTAトークンをハブアドレスに預け入れるか、ハブアドレスから取り出すと、ハブはそれらの転送を1つのスウィープに結合します。取り出しの合計が預け入れの合計よりも少ない場合、ハブは残りの残高をハブ所有者に属する新しいアドレスに転送します。預け入れの..."},{"id":"docs/wallets/0.1/hub/how-to-guides/install-hub","name":"ハブを実行する","summary":"Hubは、新しいユーザーを作成し、IOTAトークンの預け入れと取り出しを管理するために使用できるウォレット管理システムです。ハブを独自のアプリケーションまたは取引所に統合するために使用できるgRPC APIまたはRESTful APIを公開するオプションがあります。"},{"id":"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server","name":"署名サーバーをインストールする","summary":"ハブのセキュリティを向上させるために、バンドル署名操作とソルト（シードの作成に使用）をハブだけが接続できる署名サーバーに移動できます。このガイドでは、SSL暗号化接続を介してハブに接続する署名サーバーをインストールして実行します。"},{"id":"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api","name":"gRPC API入門","summary":"ハブは、任意のgRPCクライアントを使用して呼び出すことができるいくつかのgRPCメソッドを公開しています。これらの方法で、ハブデータベースおよびIOTAノードとやり取りすることでユーザーのIOTAトークンを管理できます。このガイドでは、新しい預け入れアドレスを持つ新しいユーザーを作成するためのgRPC APIの基本に..."},{"id":"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api","name":"RESTful API入門","summary":"ハブのRESTful APIサーバーを公開すると、HTTPエンドポイントを介してハブと対話できます。これらのエンドポイントを使用すると、ハブデータベースおよびIOTAノードと対話することにより、ユーザーのIOTAトークンを管理できます。このガイドでは、RESTful APIの基本を学習して、新しい預け入れアドレスを持つ..."},{"id":"docs/wallets/0.1/hub/how-to-guides/query-the-database","name":"ハブデータベースをクエリする","summary":"ユーザーデータを追跡するために、ハブはユーザーデータをデータベーステーブルに保存します。これらのテーブルのデータの一部は、APIに公開されていません。たとえば、アドレスのシードUUIDを見つけて、シードを再作成できます。このガイドでは、ハブデータベーステーブルのクエリを開始するための基本を示します。"},{"id":"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange","name":"デモ取引所を作成する","summary":"ハブをアプリケーションに統合する方法を理解できるように、このガイドでは、偽の取引所のサーバー側でハブAPI呼び出しを行うプロセスを説明します。このガイドの最後には、IOTAトークンを預け入れてから取り出すことが可能なデモ取引所があります。"},{"id":"docs/wallets/0.1/hub/how-to-guides/integrate-hub","name":"ハブを暗号通貨交換所に統合する","summary":"デフォルトでは、ハブはすべてのユーザーの残高の記録をデータベースに保持し、ユーザーがハブアカウントを介して相互にトレードできるようにします。"},{"id":"docs/wallets/0.1/hub/how-to-guides/recover-tokens","name":"スウィープアドレスからIOTAトークンをリカバーする","summary":"ユーザーは、既にスウィープされた使用済みの預け入れアドレスにIOTAトークンを送信する場合があります。この場合、攻撃者が署名をブルートフォースしてIOTAトークンを盗もうとするリスクがあります。スウィープされたアドレスからIOTAトークンを回復するために、潜在的な攻撃者ができる前にIOTAトークンを新しいアドレスに転送..."},{"id":"docs/wallets/0.1/hub/references/grpc-api-reference","name":"APIリファレンス","summary":"ハブには、タングルおよびハブデータベースへの接続を簡素化するgRPC APIがあります。このAPIリファレンスを使用して、メソッドを見つけ、メソッドが行うことを学びます。"},{"id":"docs/wallets/0.1/hub/references/restful-api-reference","name":"RESTful APIリファレンス","summary":"Hubには、タングルおよびハブデータベースへの接続を簡素化するRESTful APIがあります。このAPIリファレンスを使用して、エンドポイントを見つけ、それらの機能を学習します。"},{"id":"docs/wallets/0.1/hub/references/command-line-flags","name":"コマンドラインフラグ","summary":"ハブまたは署名サーバーを起動するとき、runコマンドに次のフラグを1つ以上渡すことで、ハブまたは署名サーバーの機能をカスタマイズできます。"},{"id":"docs/wallets/0.1/hub/references/database-tables","name":"データベーステーブル","summary":"ハブは、預け入れアドレスや取り出しリクエストなどの情報をデータベーステーブルに記録することによって、ユーザーのIOTAトークンを管理します。この情報は、gRPC APIを使用するか、データベースサーバーに問い合わせることによって見つけることができます。"},{"id":"docs/wallets/0.1/hub/references/security-considerations","name":"セキュリティ上の考慮事項","summary":"ハブの役割がIOTAトークンの管理であることを考えると、そのセキュリティは非常に重要です。ハブを保護して正しく使用するための手順を踏む必要があります。"},{"id":"docs/wallets/0.1/hub/references/troubleshooting","name":"トラブルシューティング","summary":"APIを使い始めるでgRPCクライアントを実行しようとすると、このエラーが表示されることがあります。"},{"id":"docs/utils/0.1/introduction/overview","name":"ユーティリティ","summary":"ユーティリティは、オープンソースのアプリケーションまたはツールであり、使用することも、適応させることも、自分のアプリケーションに組み込むこともできます。"},{"id":"docs/utils/0.1/community/mam-watcher/overview","name":"MAMウォッチャー概要","summary":"MAM（マスク認証メッセージング）は、チャネルと呼ばれる暗号化されたデータストリームを発行および購読することを可能にする通信プロトコルです。MAMウォッチャーを使用すると、チャネル上で暗号化されたメッセージに署名して送信し、そのチャネルを購読してメッセージを検証、復号化、および読み取ることができます。"},{"id":"docs/utils/0.1/community/one-command-tangle/overview","name":"ワンコマンドプライベートタングル","summary":"このアプリケーションを使用すると、単一のDockerコマンドを使用して独自のIOTAネットワークを設定できます。このコマンドを実行すると、独自のIOTAテストネットワークと2.7Pi（最大量）のテストIOTAトークンを使用できます。いかなる金銭的価値も危険にさらすことなく自分のアイデアやアプリケーションをテストするため..."},{"id":"docs/utils/0.1/community/raspberry-pi-pub-sub/overview","name":"Raspberry Piセンサーデータパブリッシャー","summary":"このアプリケーションは、Raspberry PiからDevnetタングルに毎分リアルタイムの温度データ（現在の摂氏温度）を送信します。その後、別のDevnetノードでイベントストリーム（ZMQ）を購読し、データを受信したときに知らせるメッセージを表示します。"},{"id":"docs/utils/0.1/official/iota-area-codes/overview","name":"IOTAエリアコード概要","summary":"IOTAエリアコード（IAC）は、IOTAトランザクションを地理的位置でタグ付けするための標準規格として提案されています。"},{"id":"docs/utils/0.1/official/proof-of-existance/overview","name":"存在の証明プロバイダー概要","summary":"ファイルは、さまざまな関係者間で契約などの情報を転送するために重要です。時には、ある関係者が他の関係者達が知らないうちにファイルを変更することがあります。したがって、すべての関係者が、ファイルが変更されていないことを確実に証明して、信頼できるようにする方法が必要です。ファイルが変更されていないことを証明するために、存在..."},{"id":"docs/utils/0.1/official/tangle-certificate/overview","name":"タングル証明書作成者の概要","summary":"証明書は、所有者に関する事実を証明する公式文書です。しかし、証明書がデジタルの場合、それらは詐欺の対象となります。デジタル証明書はコピーおよび編集できるため、確実性と信用性に影響します。証明書が本物であり、信頼でき、変更されていないことを証明するために、証明書をタングルに添付することができます。"},{"id":"docs/utils/0.1/official/tryte-compress/overview","name":"トライトコンプレッサー概要","summary":"トランザクションのバンドルをノードに送信すると、それらのトランザクションがネットワークの残りの部分に届かない場合があり、トランザクションが確定されないことがあります。たとえば、ノードは、トランザクションを隣接ノードに転送する前にオフラインになる場合があります。そのため、後でトランザクションを再ブロードキャストまたは再添..."},{"id":"docs/blueprints/0.1/introduction/overview","name":"アプリケーション設計図","summary":"アプリケーション設計図では、IOTAを使用して実際の問題を解決し、明確に定義されたビジネスニーズをサポートする方法について説明しています。"},{"id":"docs/blueprints/0.1/data-marketplace/overview","name":"データマーケットプレイス","summary":"データサイロにより、異なるデータポイント間でデータを売買することが難しくなります。 この課題を克服するために、データマーケットプレイスはマスクされた認証済みメッセージング（Masked Authenticated Messaging, MAM）チャネルを使用してデータサイロを開き、ユーザーがデータと引き換えにIOTAト..."},{"id":"docs/blueprints/0.1/data-marketplace/architecture","name":"アプリケーションアーキテクチャ","summary":"データマーケットプレイスアプリケーションは、センサー、クラウドバックエンド、およびIOTAタングルを使用してデータをMAMチャネルに公開します。"},{"id":"docs/blueprints/0.1/data-marketplace/deployment-and-testing","name":"データマーケットプレイスアプリをデプロイしてテストする","summary":"データマーケットプレイスでデータストリームの売買を開始するには、自身のアプリケーションをデプロイするか、デモアプリケーションでテストします。"},{"id":"docs/blueprints/0.1/doc-immutability/overview","name":"ドキュメントの不変性の概要","summary":"ドキュメントは、当事者間で情報や契約を転送するための重要な手段です。ドキュメントが確立された状態から変更されていないことを確実に証明できることは、当事者を保護するだけでなく、当事者間の信頼を確保するのに役立ちます。この設計図は、IOTAタングルを使用して以前に署名された文書の署名を自動的にチェックするソリューションを説..."},{"id":"docs/blueprints/0.1/doc-immutability/architecture","name":"アプリケーションアーキテクチャ","summary":"ドキュメントの不変性アプリケーションは、Reactで書かれたグラフィカルユーザーインターフェース（GUI）とNodeJSで書かれたバックエンドAPIの2つの部分から構成されています。"},{"id":"docs/blueprints/0.1/p2p-energy/overview","name":"P2Pエネルギーグリッド","summary":"エネルギーの供給はしばしば自動化されていますが、支払いシステムは統合するのに費用がかかり、そしてしばしば手動の介入を必要とします。IOTAを使用してピアツーピア（P2P）エネルギーグリッドを作成することで、電力の転送とその電力に対する支払いを自動化できます。この自動化により、インフラストラクチャはより動的になり、更新が..."},{"id":"docs/blueprints/0.1/p2p-energy/architecture","name":"アプリケーションアーキテクチャ","summary":" P2Pエネルギーグリッドアプリケーションは、IOTAネットワーク内のノードを通じて、電力源、生産者、消費者、およびグリッドからのデータをMAMチャネルに公開します。"},{"id":"docs/blueprints/0.1/p2p-energy/deployment-and-testing","name":"P2Pエネルギーグリッドアプリをデプロイする","summary":"P2Pエネルギーグリッドアプリケーションの使用を開始するには、自身のアプリケーションをデプロイします。"},{"id":"docs/blueprints/0.1/tangle-data-storage/overview","name":"タングルデータストレージ概要","summary":"データは、官民組織のイノベーションを促進し、新たな収益源を生み出すために使用することができます。しかし、ベンダーに依存しないデータ検証方法がなければ、データを信頼することはできません。この設計図では、IOTAタングルをイミュータブルなデータ構造として使用し、サードパーティのストレージソリューション内のファイルの内容を検..."},{"id":"docs/blueprints/0.1/tangle-data-storage/architecture","name":"アプリケーションアーキテクチャ","summary":"タングルデータストレージアプリケーションは、Reactで書かれたグラフィカルユーザーインターフェース（GUI）とNodeJSで書かれたバックエンドAPIの2つの部分から構成されています。"},{"id":"docs/blueprints/0.1/tangle-data-storage/deployment-and-testing","name":"タングルデータストレージアプリをデプロイしてテストする","summary":"IPFSノードとタングルにデータの保存を開始するには、アプリケーションをデプロイし、IOTA財団のグラフィカルユーザーインターフェースを使用してファイルデータをアップロードし、ファイルデータを取得し、ハッシュを比較して内容を確認します。"},{"id":"docs/blueprints/0.1/track-and-trace/overview","name":"トラック&トレース概要","summary":"デューデリジェンスとベンダーに依存しないデータソースの両方が欠如しているため、流通ネットワーク内の回収可能資産は多くの場合、元の所有者に返却されません。この設計図では、IOTAタングルおよび他のIOTAテクノロジを使用して、IBCSグループが回収可能資産の回収のためのトラック&トレースシステムをどのように実施したかを説..."},{"id":"docs/blueprints/0.1/track-and-trace/architecture","name":"アプリケーションアーキテクチャ","summary":"トラック&トレースアプリケーションはIOTA MAMプロトコルを使用して、回収可能資産にIDを付与し、MAMチャネルと呼ばれるトランザクションのストリームで回収可能資産を追跡します。"},{"id":"docs/blueprints/0.1/track-and-trace/deployment-and-testing","name":"トラック&トレースアプリをデプロイしてテストする","summary":"タングルでデータの追跡を開始するには、アプリケーションをデプロイし、IOTA財団のGUIを使用して資産を検索してアップロードします。"},{"id":"docs/iot/0.1/introduction/overview","name":"Internet of Things overview","summary":"The Internet of Things (IoT) is an umbrella term for billions of Internet-connected devices that share data with each other. Thanks to this data-sharing network..."},{"id":"docs/iot/0.1/concepts/flashing","name":"Flashing","summary":"To allow a microcontroller to run your application, you need to flash the binary code onto its flash memory, using a programmer."},{"id":"docs/iot/0.1/concepts/ipv6-mesh-network","name":"6LoWPAN","summary":"6LoWPAN is a networking system that combines the latest version of the Internet Protocol (IPv6) and Low-power Wireless Personal Area Networks (LoWPAN). 6LoWPAN,..."},{"id":"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers","name":"Get started with microcontroller development","summary":"In this guide, you learn how to get started with the nRF52 series of microcontrollers. When you've completed this guide, you'll be able to follow our series of ..."},{"id":"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller","name":"Set up an nRF52 microcontroller","summary":"Before you can start using your microcontroller, you need to set it up with the correct hardware and software requirements."},{"id":"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain","name":"Install the ARM GCC toolchain","summary":"The ARM toolchain allows you to compile code into binary that your microcontroller can run."},{"id":"docs/iot/0.1/how-to-guides/setup-sbc","name":"Set up a single-board computer","summary":"A single-board computer (SBC) is a small computer in which a single circuit board includes memory, input/output ports, a microprocessor and any other necessary ..."},{"id":"docs/iot/0.1/how-to-guides/install-go-on-sbc","name":"シングルボードコンピュータにGoをインストールする","summary":"Goプログラミング言語を使用するアプリケーションを作成または実行するには、Goプログラミング言語をインストールする必要があります。"},{"id":"docs/iot/0.1/how-to-guides/read-sensor-data","name":"Read sensor data from a microcontroller","summary":"In this guide, you create a low-budget application that allows you to read data from a sensor that's connected to an nRF52 series microcontroller."},{"id":"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router","name":"Set up a border router","summary":"To allow the sensor servers in a star network to access the Internet, you need a border router that can pass on their data. In this guide, you use set up a bord..."},{"id":"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example","name":"Set up a sensor server","summary":"By setting up a sensor as a server, you can allow other devices to request data from it over the internet. This is useful for applications that need to access t..."},{"id":"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client","name":"Request data from the sensor servers","summary":"In this guide, you request data from the sensors in your Bluetooth star network"},{"id":"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network","name":"Set up a Bluetooth star network","summary":"Star networks are useful for setting up sensor server networks. In this guide, you set up a a 6LoWPAN Bluetooth star network, using state-of-the-art IoT industr..."},{"id":"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app","name":"Attach sensor data to the Tangle","summary":"In this guide, you run an application that collects environment sensor data and attaches it to the Tangle using Masked Authenticated Messaging (MAM)."},{"id":"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280","name":"Connect to a Bosch BME/BMP 280 sensor","summary":"The Bosch BME/BMP 280 sensors are developed specifically for mobile applications where size and low power consumption are key design constraints. In this guide,..."},{"id":"docs/iot/0.1/how-to-guides/connect-programmer","name":"Connect to an external programmer","summary":"To flash anything to your nRF52 series microcontroller, you need a programmer. Some microcontrollers don't have an integrated programmer, in which case, you nee..."},{"id":"docs/iot/0.1/how-to-guides/connect-to-serial-interface","name":"Connect to the microcontroller's serial interface","summary":"To read the output of your microcontroller, you need to be able to receive and transmit data on its serial port. To access the serial port on the microcontrolle..."},{"id":"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor","name":"Connect to an I2C sensor","summary":"I2C is a protocol that allows one device to exchange data with one or more connected devices through the use of a single data line and clock signal. In this gui..."},{"id":"docs/iot/0.1/references/troubleshooting","name":"Troubleshooting","summary":"You may find some of these common issues while following these guides."},{"id":"docs/iota-go/0.1/introduction/overview","name":"Goクライアントライブラリ","summary":"Goクライアントライブラリを使用すると、サポートされているパッケージを使用して、タングルと対話するクライアントまたはサーバーとして機能するアプリケーションを作成できます。"},{"id":"docs/iota-go/0.1/core/introduction/overview","name":"Goコアライブラリ入門","summary":"Goコアクライアントライブラリには、タングルと対話するための低レベルのメソッドが含まれています。このライブラリを使用して、コアIOTAプロトコルを使用できます。たとえば、ノードに接続し、バンドルを作成し、ペンディング中のトランザクションを促進および再添付できます。"},{"id":"docs/iota-go/0.1/account-module/introduction/overview","name":"アカウントモジュール入門","summary":"アカウントは、トランザクションの送受信を容易にするオブジェクトです。アカウントは、アドレスやペンディング中のバンドルハッシュなどのデータをローカルデータベースに保存します。このデータにより、使用済みアドレスからの取り出しやペンディング中のトランザクションの促進と再添付を心配することなく、IOTAネットワークと対話できま..."},{"id":"docs/iota-go/0.1/account-module/how-to-guides/create-account","name":"アカウントを作成する","summary":"アカウントは、支払いの処理を容易にするオブジェクトです。任意のIOTAネットワークでアカウントを使用して、IOTAトークンを送受信できます。"},{"id":"docs/iota-go/0.1/account-module/how-to-guides/listen-to-events","name":"アカウントのイベントをリッスンする","summary":"アカウントオブジェクトは、イベントが発生したときにイベントを発行します。イベントの例としては、支払いをするときや受け取るときがあります。これらのイベントをリッスンして行動することができます。"},{"id":"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda","name":"アカウントへ/から支払いをする","summary":"支払いを行うには、送信者と受信者の両方が条件付き預け入れアドレス（CDA）を持っている必要があります。送信者にはIOTAトークンを含む期限切れのCDAが必要であり、受信者にはトークンを送信するためのアクティブなCDAが必要です。"},{"id":"docs/iota-go/0.1/account-module/how-to-guides/create-plugin","name":"プラグインを作成する","summary":"プラグインはアカウントの機能を拡張します。すべてのプラグインは独自のゴルーチンで実行され、アカウントとともに起動およびシャットダウンされます。"},{"id":"docs/iota-go/0.1/account-module/how-to-guides/import-seed-state","name":"アカウントに既存のシードステートをインポートする","summary":"既存のシードステートを他の端末のアカウントにインポートすることをお勧めします。そのためには、まずシードステートをエクスポートして正しい形式にする必要があります。"},{"id":"docs/iota-go/0.1/account-module/references/cda-advice","name":"CDAの条件に関するアドバイス","summary":"CDAを作成するとき、CDAがどのような条件を持つ必要があるのかを事前に知ることが難しい場合があります。この記事には、CDA条件を作成するために役立つアドバイスがあります。"},{"id":"docs/iota-java/0.1/introduction/overview","name":"Javaクライアントライブラリ","summary":"Javaクライアントライブラリを使用すると、サポートされているパッケージを使用して、タングルと対話するクライアントまたはサーバーとして機能するアプリケーションを作成できます。"},{"id":"docs/iota-java/0.1/core/introduction/overview","name":"Javaコアライブラリ入門","summary":"Javaコアクライアントライブラリには、タングルと対話するための低レベルのメソッドが含まれています。このライブラリを使用して、コアIOTAプロトコルを使用できます。たとえば、ノードに接続し、バンドルを作成し、ペンディング中のトランザクションを促進および再添付できます。"},{"id":"docs/iota-java/0.1/account-module/introduction/overview","name":"アカウントモジュール入門","summary":"アカウントは、トランザクションの送受信を容易にするオブジェクトです。アカウントは、アドレスやペンディング中のバンドルハッシュなどのデータをローカルデータベースに保存します。このデータにより、使用済みアドレスからの取り出しやペンディング中のトランザクションの促進と再添付を心配することなく、IOTAネットワークと対話できま..."},{"id":"docs/iota-java/0.1/account-module/how-to-guides/create-account","name":"アカウントを作成する","summary":"アカウントは、支払いの処理を容易にするオブジェクトです。任意のIOTAネットワークでアカウントを使用して、IOTAトークンを送受信できます。"},{"id":"docs/iota-java/0.1/account-module/how-to-guides/listen-to-events","name":"アカウントのイベントをリッスンする","summary":"アカウントオブジェクトは、イベントが発生したときにイベントを発行します。イベントの例としては、支払いをするときや受け取るときがあります。これらのイベントをリッスンして行動することができます。"},{"id":"docs/iota-java/0.1/account-module/how-to-guides/create-and-manage-cda","name":"アカウントへ/から支払いをする","summary":"支払いを行うには、送信者と受信者の両方が条件付き預け入れアドレス（CDA）を持っている必要があります。送信者にはIOTAトークンを含む期限切れのCDAが必要であり、受信者にはトークンを送信するためのアクティブなCDAが必要です。"},{"id":"docs/iota-java/0.1/account-module/how-to-guides/create-plugin","name":"プラグインを作成する","summary":"プラグインはアカウントの機能を拡張します。すべてのプラグインはEventListenerインターフェースを実装しており、EventManagerに追加されています。故に、プラグインを作成した時は、アカウントに別々のEventListenerを登録する必要はありません。"},{"id":"docs/iota-java/0.1/account-module/references/cda-advice","name":"CDAの条件に関するアドバイス","summary":"CDAを作成するとき、CDAがどのような条件を持つ必要があるのかを事前に知ることが難しい場合があります。この記事には、CDA条件を作成するために役立つアドバイスがあります。"},{"id":"docs/iota-js/0.1/introduction/overview","name":"JavaScriptクライアントライブラリ","summary":"JavaScriptクライアントライブラリを使用すると、サポートされているパッケージを使用して、タングルと対話するクライアントまたはサーバーとして機能するアプリケーションを作成できます。"},{"id":"docs/iota-js/0.1/core/introduction/overview","name":"JavaScriptコア入門","summary":"JavaScriptコアクライアントライブラリには、タングルと対話するための低レベルのメソッドが含まれています。このライブラリを使用して、コアIOTAプロトコルを使用できます。たとえば、ノードに接続し、バンドルを作成し、ペンディング中のトランザクションを促進および再添付できます。"},{"id":"docs/iota-js/0.1/core/how-to-guides/create-custom-methods","name":"カスタムメソッドを作成する","summary":""},{"id":"docs/iota-js/0.1/account-module/introduction/overview","name":"アカウントモジュール入門","summary":"アカウントは、トランザクションの送受信を容易にするオブジェクトです。アカウントは、アドレスやペンディング中のバンドルハッシュなどのデータをローカルデータベースに保存します。このデータにより、使用済みアドレスからの取り出しやペンディング中のトランザクションの促進と再添付を心配することなく、IOTAネットワークと対話できま..."},{"id":"docs/iota-js/0.1/account-module/how-to-guides/create-account","name":"アカウントを作成する","summary":"アカウントは、支払いの処理を容易にするオブジェクトです。任意のIOTAネットワークでアカウントを使用して、IOTAトークンを送受信できます。"},{"id":"docs/iota-js/0.1/account-module/how-to-guides/listen-to-events","name":"アカウント内のイベントをリッスンする","summary":"アカウントオブジェクトは、イベントが発生したときにイベントを発行します。イベントの例としては、支払いをするときや受け取るときがあります。これらのイベントをリッスンして行動することができます。"},{"id":"docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda","name":"アカウントへ/から支払いをする","summary":"支払いを行うには、送信者と受信者の両方が条件付き預け入れアドレス（CDA）を持っている必要があります。送信者にはIOTAトークンを含む期限切れのCDAが必要であり、受信者にはトークンを送信するためのアクティブなCDAが必要です。"},{"id":"docs/iota-js/0.1/account-module/references/cda-advice","name":"CDAの条件に関するアドバイス","summary":"CDAを作成するとき、CDAがどのような条件を持つ必要があるのかを事前に知ることが難しい場合があります。この記事には、CDA条件を作成するために役立つアドバイスがあります。"},{"id":"docs/iota-js/0.1/mam/introduction/overview","name":"マスクされた認証済みメッセージング入門","summary":"マスクされた認証済みメッセージング（Masked Authenticated Messaging, MAM）は、タングルでチャネルと呼ばれる暗号化されたデータストリームでメッセージを発行および取得できるデータ通信プロトコルです。MAMパッケージを使用して、暗号化および認証されたメッセージをチャネルに発行できます。"},{"id":"docs/iota-js/0.1/mam/concepts/channels","name":"MAMチャネル","summary":"すべてのMAMメッセージはMAMチャネルに発行されます。これは、シードによって認証される暗号化されたデータストリームです。シードの所有者のみがメッセージをチャネルに発行できます。その結果、MAMチャネルは、特定の人またはデバイスによってメッセージが発行されたことを認証する便利な方法です。"},{"id":"docs/iota-js/0.1/mam/how-to-guides/create-public-channel","name":"公開メッセージを発行する","summary":"誰でも読むことができるチャネルにメッセージを発行したい場合は、パブリックチャネルを使用できます。パブリックチャネルは、すべてのユーザーに対して開かれているトランザクションのアドレスを使用して、すべてのユーザーがメッセージを見つけて復号化できるように開いています。パブリックチャネルは、データをイミュータブルにする公示また..."},{"id":"docs/iota-js/0.1/mam/how-to-guides/create-restricted-channel","name":"制限付きメッセージを発行する","summary":"許可されたユーザーのみが閲覧できるチャンネルに秘密のメッセージを公開したい場合は、制限付きチャネルを使用できます。制限付きチャネルはすべてのユーザーが検索できるように開いていますが、サイドキーを持つユーザーのみが復号化できます。このタイプのチャネルは、プライベート通信に役立ちます。"},{"id":"docs/iota-js/0.1/mam/how-to-guides/create-mam-webpage","name":"Webページで公開メッセージを発行および表示する","summary":"mamパッケージには、Webページで使用できる縮小されたJavaScriptファイルがあります。これにより、MAMメッセージを発行して表示するWebアプリケーションを構築できます。"},{"id":"docs/iota-js/0.1/mam/references/api-reference","name":"マスクされた認証メッセージング（MAM）API","summary":"これにより、ステートが初期化されます。これは、あなたがフォローしているチャネルの進行状況を追跡するステートオブジェクトを返します。"},{"id":"docs/smartcity/0.1/introduction/overview","name":"IOTAスマートシティ設計図","summary":"AstroPiOTAは、タングルを使用してローカル環境データを追跡するためにMAMに接続されている国際宇宙ステーションからのAstroPiのクローンです。地球上で、AstroPiOTAはローカルの天気予報を理解し報告するのを助け、地震予知に役立つかもしれません。"},{"id":"docs/smartcity/0.1/astropiota/introduction/overview","name":"AstroPiOTA","summary":"AstroPiOTAはAstroPiのクローンです。AstroPiは、ISS（国際宇宙ステーション）でRaspberry Piを使用して、宇宙飛行士が自分の環境について最新の情報を入手できるようにしたプロジェクトです。 AstroPiは、温度、湿度、その他のデータを検知するためにRaspberry PiコンピュータとS..."},{"id":"docs/smartcity/0.1/astropiota/how-to-guides/build","name":"自分のAstroPiOTAをビルドする","summary":"AstroPiOTAを実行するには、正しいハードウェアとRaspberry Pi用のオペレーティングシステムが必要です。"},{"id":"docs/smartcity/0.1/astropiota/how-to-guides/run","name":"AstroPiOTAを実行する","summary":"以下の手順は、オペレーティングシステムが設定されていることを前提としています。このインストールには複数のコンポーネントがあるため、それらを組み合わせる前に各コンポーネントが個別に機能することを確認するためのスクリプトが含まれています。"},{"id":"docs/smartcity/0.1/astropiota/how-to-guides/connect","name":"SSHでRaspberry Piに接続する","summary":"モニターやキーボードなしでAstroPiOTAを実行したい場合は、SSHを介して対話するためにAstroPiOTAのネットワークアドレスが必要です。Raspberry PiのIPアドレスを見つけるには、Pythonスクリプトを使用できます。"},{"id":"docs/smartcity/0.1/astropiota/how-to-guides/customize","name":"AstroPiOTAをカスタマイズする","summary":"AstroPiOTA送信者はSense HATからセンサーデータを収集し、センサーデータをスクロールマーキーに公開し、センサーデータをJSON形式でタングルのMAMチャネルに送信します。AstroPiOTA受信者はMAMチャネルを監視してセンサーデータをリッスンします。これらのファイルの両方をカスタマイズして、Astr..."},{"id":"docs/smartcity/0.1/astropiota/references/sensehat-specs","name":"Sense HAT仕様","summary":"このリストには、AstroPiOTAプロジェクトで使用されているSense HATハードウェアの仕様が含まれています。"},{"id":"docs/general/0.1/introduction/overview","name":"一般概要","summary":"IOTAは、暗号化された方法でデータと価値を転送することを可能にするプロトコルです。そのため、IOTAは多くの環境で使用できますが、そのうちのいくつかは以前にセットアップしたことも使ったこともないかもしれません。"},{"id":"docs/general/0.1/how-to-guides/expose-your-local-device","name":"ローカルデバイスをインターネットに公開する","summary":"デバイスをローカルネットワークの外部に接続するには、デバイスをインターネットに公開する必要があります。ローカルデバイスをインターネットに公開する一般的な理由は、IOTAノードを隣接ノードに接続することです。"},{"id":"docs/general/0.1/how-to-guides/set-up-virtual-machine","name":"仮想マシン上にLinuxサーバをセットアップする","summary":"IOTAのチュートリアルやガイドの多くはLinuxオペレーティングシステムを必要とします。コンピュータが別のオペレーティングシステムを実行している場合は、仮想マシン内でLinuxを使用できます。"},{"id":"docs/general/0.1/how-to-guides/setup-sbc","name":"シングルボードコンピュータを設定する","summary":"シングルボードコンピュータ（SBC）は、単一の回路基板がメモリ、入力/出力ポート、マイクロプロセッサおよび他の必要な機能を含む小型のコンピュータです。SBCは、デスクトップなどのマルチボードコンピュータよりも軽量、コンパクト、信頼性が高く、電力効率もはるかに優れています。IOTAテクノロジを使用する専用の組み込みアプリ..."},{"id":"docs/general/0.1/references/troubleshooting","name":"トラブルシューティング","summary":""},{"id":"docs/contribution/0.1/style-guide","name":"ドキュメントスタイルガイド","summary":"IOTAの知識を持つすべての人に、ドキュメントに貢献することをお勧めします。ドキュメントについて議論するには、Discordの#documentation-discussionチャンネルに参加してください。"}]

/***/ }),
/* 96 */
/***/ (function(module, exports) {

module.exports = {"version":"2.3.5","fields":["docTitle","docBody"],"fieldVectors":[["docTitle/docs/getting-started/0.1/introduction/what-is-dlt",[0,3.362]],["docBody/docs/getting-started/0.1/introduction/what-is-dlt",[0,3.208,1,35.713,2,46.198,3,35.713,4,5.28]],["docTitle/docs/getting-started/0.1/introduction/what-is-iota",[4,7.934]],["docBody/docs/getting-started/0.1/introduction/what-is-iota",[0,3.208,4,7.57,5,25.875,6,25.875,7,25.875,8,25.875,9,25.875,10,25.875,11,23.19,12,25.875,13,25.875,14,25.875,15,25.875,16,25.875,17,7.186,18,25.875,19,25.875,20,25.875,21,19.045]],["docTitle/docs/getting-started/0.1/introduction/what-is-a-node",[0,3.362]],["docBody/docs/getting-started/0.1/introduction/what-is-a-node",[0,2.397,4,5.656,22,38.258,23,38.258,24,38.258,25,38.258,26,38.258,27,38.258]],["docTitle/docs/getting-started/0.1/introduction/what-is-the-tangle",[0,3.362]],["docBody/docs/getting-started/0.1/introduction/what-is-the-tangle",[0,3.153,17,11.885,28,35.377,29,29.287,30,31.705,31,31.705,32,35.377,33,4.096,34,35.377]],["docTitle/docs/getting-started/0.1/introduction/what-is-a-seed",[0,3.362]],["docBody/docs/getting-started/0.1/introduction/what-is-a-seed",[0,2.809,4,6.629,35,38.258,36,38.258,37,17.211,38,31.673]],["docTitle/docs/getting-started/0.1/introduction/what-is-a-transaction",[0,3.362]],["docBody/docs/getting-started/0.1/introduction/what-is-a-transaction",[0,2.992,4,6.668,39,38.652,40,38.652]],["docTitle/docs/getting-started/0.1/introduction/what-is-a-bundle",[0,3.362]],["docBody/docs/getting-started/0.1/introduction/what-is-a-bundle",[0,2.912,4,4.821,17,9.057,41,32.613,42,23.173,43,32.613,44,32.613,45,32.613,46,26.999,47,39.774,48,8.455,49,25.334,50,32.613,51,32.613,52,32.613,53,32.613,54,32.613,55,15.968,56,32.613]],["docTitle/docs/getting-started/0.1/tutorials/get-started",[0,3.362]],["docBody/docs/getting-started/0.1/tutorials/get-started",[0,3.1,4,6.181,17,9.457,33,3.943,48,8.827,57,16.111,58,16.111,59,8.778,60,16.111,61,4.802,62,7.397,63,22.303,64,11.312,65,9.742,66,30.517,67,16.111,68,9.637,69,16.111,70,10.434,71,15.016,72,12.516,73,8.263,74,16.111,75,19.291,76,14.439,77,8.686,78,21.275,79,23.539,80,11.312,81,8.92,82,24.834,83,16.111,84,16.111,85,11.312,86,14.439,87,10.844,88,10.07,89,7.552,90,16.111,91,11.312,92,11.859,93,16.111,94,13.352,95,9.445,96,10.07,97,9.445,98,16.111,99,18.279,100,9.742,101,13.388,102,18.323,103,13.338,104,16.111,105,16.111,106,16.776,107,16.111,108,16.111,109,11.312,110,16.111,111,12.516,112,12.516,113,14.439,114,16.111,115,13.338,116,13.338,117,11.859,118,14.557,119,12.516,120,16.111,121,16.111,122,16.111,123,16.111,124,9.742,125,11.312,126,16.111,127,14.439,128,16.111]],["docTitle/docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs",[94,19.482]],["docBody/docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs",[0,3.226,4,6.595,17,8.603,33,5.166,37,9.758,48,5.624,61,6.466,94,11.245,100,13.117,129,21.692,130,11.695,131,13.117,132,9.567,133,9.758,134,8.874,135,10.866,136,19.441,137,19.441,138,19.441,139,21.692,140,19.441,141,14.048,142,21.692,143,21.692,144,17.958,145,19.441,146,17.958,147,17.958,148,16.851,149,17.958,150,21.692,151,21.692,152,10.866,153,21.692,154,15.967,155,12.01,156,11.125,157,19.441,158,8.418,159,19.441,160,14.6]],["docTitle/docs/getting-started/0.1/tutorials/receive-test-tokens",[0,3.362]],["docBody/docs/getting-started/0.1/tutorials/receive-test-tokens",[0,3.178,33,3.744,55,15.831,135,16.196,161,32.332,162,32.332,163,28.977,164,32.332,165,32.332,166,18.406,167,32.332,168,23.798,169,26.767,170,32.332,171,32.332,172,32.332,173,32.332]],["docTitle/docs/getting-started/0.1/tutorials/send-iota-tokens",[4,7.934]],["docBody/docs/getting-started/0.1/tutorials/send-iota-tokens",[0,3.215,4,6.779,33,4.41,37,10.752,55,11.702,61,9.884,94,8.676,100,14.452,130,12.885,131,14.452,132,10.54,133,10.752,134,9.777,135,19.076,137,21.42,138,21.42,140,21.42,145,21.42,146,19.786,147,19.786,148,18.566,149,19.786,152,11.972,158,9.274,163,21.42,174,23.9,175,23.9,176,21.42,177,23.9,178,23.9,179,23.9,180,23.9,181,23.9,182,23.9]],["docTitle/docs/getting-started/0.1/tutorials/run-your-own-iri-node",[183,48.098]],["docBody/docs/getting-started/0.1/tutorials/run-your-own-iri-node",[0,3.004,4,5.768,62,14,65,18.44,135,15.275,160,28.957,183,27.331,184,30.495,185,17.883,186,30.495,187,30.495,188,27.331,189,30.495,190,30.495,191,30.495,192,30.495,193,30.495,194,30.495,195,27.331,196,30.495,197,30.495]],["docTitle/docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-the-trinity-wallet",[0,3.362]],["docBody/docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-the-trinity-wallet",[0,3.248,33,3.242,38,23.177,42,15.937,48,7.258,124,16.929,125,19.656,155,15.499,198,27.996,199,18.842,200,19.656,201,25.091,202,17.498,203,23.902,204,15.499,205,13.124,206,28.671,207,33.078,208,16.929,209,25.091,210,27.996]],["docTitle/docs/getting-started/0.1/references/quickstart-dev-handbook",[4,7.934]],["docBody/docs/getting-started/0.1/references/quickstart-dev-handbook",[0,3.19,4,6.951,11,16.33,33,5.237,48,4.724,61,5.431,87,12.263,101,9.823,135,9.127,158,7.071,185,6.951,211,18.221,212,18.221,213,18.221,214,14.133,215,18.221,216,18.221,217,28.434,218,18.221,219,18.221,220,18.221,221,18.221,222,18.221,223,18.221,224,18.221,225,18.221,226,18.221,227,18.221,228,18.221,229,18.221,230,18.221,231,18.221,232,18.221,233,12.793,234,18.221,235,18.221,236,18.221,237,18.221,238,18.221,239,15.085,240,18.221,241,18.221,242,18.221,243,18.221,244,15.085,245,18.221,246,18.221,247,10.088,248,18.221,249,18.221,250,18.221,251,9.127,252,18.221,253,12.793,254,18.221,255,18.221,256,18.221]],["docTitle/docs/getting-started/0.1/references/iota-networks",[4,7.934]],["docBody/docs/getting-started/0.1/references/iota-networks",[0,3.025,4,5.999,33,4.336,135,21.398,185,16.297,217,25.205,257,23.163,258,23.163,259,33.593,260,23.163,261,23.163,262,21.953,263,23.163,264,23.163,265,23.163,266,23.163,267,23.163,268,23.163,269,23.163,270,33.184,271,23.163,272,21.838,273,23.163,274,32.447,275,23.163,276,22.781,277,23.163,278,23.163,279,23.163,280,23.163,281,23.163,282,23.163,283,23.163,284,23.163,285,23.163]],["docTitle/docs/getting-started/0.1/references/use-cases",[0,3.362]],["docBody/docs/getting-started/0.1/references/use-cases",[0,2.553,4,6.024]],["docTitle/docs/dev-essentials/0.1/introduction/overview",[0,3.362]],["docBody/docs/dev-essentials/0.1/introduction/overview",[0,3.214,4,6.705,17,10.836,33,4.518,286,30.495,287,30.495,288,30.495,289,30.495,290,30.495,291,30.495,292,30.495,293,30.495,294,30.495,295,30.495,296,30.495]],["docTitle/docs/dev-essentials/0.1/concepts/the-tangle",[0,3.362]],["docBody/docs/dev-essentials/0.1/concepts/the-tangle",[0,3.276,4,4.279,17,12.042,29,16.353,30,17.704,31,17.704,33,5.254,37,13.022,48,10.412,68,7.665,297,19.754,298,17.704,299,19.754,300,19.754,301,19.754,302,19.754,303,28.947,304,25.943,305,19.754,306,19.754,307,19.754,308,19.754,309,19.754,310,19.754,311,19.754,312,19.754,313,19.754,314,19.754,315,19.754,316,19.754]],["docTitle/docs/dev-essentials/0.1/concepts/addresses-and-signatures",[0,3.362]],["docBody/docs/dev-essentials/0.1/concepts/addresses-and-signatures",[0,3.243,4,6.273,33,5.237,55,11.135,63,16.74,78,15.968,91,15.968,95,18.777,101,17.269,205,10.661,317,22.743,318,22.743,319,22.743,320,22.743,321,22.743,322,22.743,323,22.743,324,22.743,325,22.743,326,28.708,327,22.743,328,22.743,329,22.743,330,22.743,331,22.743,332,22.743,333,22.743,334,22.743,335,22.743,336,22.743,337,22.743,338,22.743,339,22.743]],["docTitle/docs/dev-essentials/0.1/concepts/bundles-and-transactions",[0,3.362]],["docBody/docs/dev-essentials/0.1/concepts/bundles-and-transactions",[0,3.234,4,4.818,17,9.05,33,4.958,37,10.485,42,13.268,48,6.042,55,11.412,68,9.044,73,11.953,159,20.888,205,10.926,208,14.093,340,23.307,341,23.307,342,23.307,343,23.307,344,23.307,345,20.888,346,23.307,347,23.307,348,23.307,349,23.307,350,23.307,351,23.307,352,23.307,353,23.307,354,23.307,355,23.307,356,23.307,357,23.307,358,23.307,359,25.314,360,23.307,361,15.687,362,23.307,363,23.307,364,23.307]],["docTitle/docs/dev-essentials/0.1/concepts/minimum-weight-magnitude",[0,3.362]],["docBody/docs/dev-essentials/0.1/concepts/minimum-weight-magnitude",[0,3.137,4,4.621,33,5.04,42,17.793,276,27.827,365,31.257,366,31.257,367,31.257,368,31.257,369,31.257,370,31.257,371,31.257,372,31.257,373,31.257,374,31.257,375,31.257,376,31.257,377,31.257,378,31.257]],["docTitle/docs/dev-essentials/0.1/concepts/reattach-rebroadcast-promote",[0,3.362]],["docBody/docs/dev-essentials/0.1/concepts/reattach-rebroadcast-promote",[0,3.224,81,19.047,359,26.726,379,25.324,380,28.483,381,34.405,382,30.834,383,34.405,384,34.405]],["docTitle/docs/dev-essentials/0.1/concepts/trinary",[68,20.826]],["docBody/docs/dev-essentials/0.1/concepts/trinary",[68,14.999,385,38.652,386,38.652,387,38.652,388,38.652,389,38.652,390,38.652]],["docTitle/docs/dev-essentials/0.1/how-to-guides/convert-data-to-trytes",[0,3.362]],["docBody/docs/dev-essentials/0.1/how-to-guides/convert-data-to-trytes",[0,3.182,33,4.714,94,11.839,130,17.582,131,19.721,132,14.383,133,14.671,134,13.342,144,26.999,158,12.656,391,32.613,392,32.613,393,32.613,394,32.613,395,32.613]],["docTitle/docs/dev-essentials/0.1/how-to-guides/create-an-address",[0,3.362]],["docBody/docs/dev-essentials/0.1/how-to-guides/create-an-address",[0,3.194,33,4.565,59,11.421,61,9.239,94,11.253,130,16.712,131,18.744,132,13.671,133,13.945,134,12.681,158,12.029,176,27.782,396,30.999,397,24.08,398,30.999,399,30.999,400,27.782,401,30.999]],["docTitle/docs/dev-essentials/0.1/how-to-guides/derive-addresses-from-private-keys",[0,3.362]],["docBody/docs/dev-essentials/0.1/how-to-guides/derive-addresses-from-private-keys",[0,3.254,4,5.377,33,5.245,77,14.763,94,9.941,130,14.763,131,16.559,132,12.077,133,12.319,134,11.202,141,17.734,152,13.717,158,10.626,205,12.837,402,27.384,403,27.384,404,27.384,405,27.384,406,26.772]],["docTitle/docs/dev-essentials/0.1/how-to-guides/send-bundle",[0,3.362]],["docBody/docs/dev-essentials/0.1/how-to-guides/send-bundle",[0,3.176,4,3.962,17,7.442,33,5.358,49,20.817,94,9.728,130,14.447,131,16.204,132,11.818,133,12.055,134,10.963,135,13.423,136,24.017,141,17.355,144,22.185,156,18.387,158,10.399,208,21.679,407,24.017,408,26.798,409,22.185,410,26.798,411,26.798,412,26.798,413,32.132,414,26.798,415,26.798,416,26.798]],["docTitle/docs/dev-essentials/0.1/how-to-guides/check-transaction-confirmation",[0,3.362]],["docBody/docs/dev-essentials/0.1/how-to-guides/check-transaction-confirmation",[0,3.199,33,5.309,94,10.317,117,20.918,130,15.321,131,17.185,132,12.534,133,12.785,134,11.626,158,11.028,208,17.185,407,25.47,417,28.42,418,28.42,419,28.42,420,37.275,421,28.956,422,37.275,423,23.528,424,25.47,425,28.42]],["docTitle/docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle",[0,3.362]],["docBody/docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle",[0,3.249,17,6.856,33,4.829,42,14.052,48,6.399,49,19.176,68,9.579,94,8.961,130,13.308,131,14.927,132,10.887,133,11.105,134,10.098,135,12.365,158,9.579,208,14.927,345,22.124,426,24.685,427,24.685,428,24.685,429,24.685,430,24.685,431,24.685,432,24.685,433,24.685,434,33.911,435,24.685,436,24.685,437,14.052,438,24.685,439,24.685,440,24.685]],["docTitle/docs/dev-essentials/0.1/references/structure-of-a-transaction",[0,3.362]],["docBody/docs/dev-essentials/0.1/references/structure-of-a-transaction",[0,2.895,441,40.311]],["docTitle/docs/dev-essentials/0.1/references/structure-of-a-bundle",[0,3.362]],["docBody/docs/dev-essentials/0.1/references/structure-of-a-bundle",[0,2.98,33,4.43,73,19.621,359,29.72,361,25.749,442,17.564]],["docTitle/docs/dev-essentials/0.1/references/security-levels",[0,3.362]],["docBody/docs/dev-essentials/0.1/references/security-levels",[0,3.141,33,4.476,443,38.652]],["docTitle/docs/dev-essentials/0.1/references/tryte-alphabet",[0,3.362]],["docBody/docs/dev-essentials/0.1/references/tryte-alphabet",[0,2.526,95,23.63,444,40.311]],["docTitle/docs/dev-essentials/0.1/references/units-of-iota-tokens",[4,7.934]],["docBody/docs/dev-essentials/0.1/references/units-of-iota-tokens",[0,2.447,4,6.709,48,10.124,445,39.054,446,39.054]],["docTitle/docs/dev-essentials/0.1/references/glossary",[0,3.362]],["docBody/docs/dev-essentials/0.1/references/glossary",[0,3.192,4,6.462,48,8.791,63,18.17,68,13.159,185,17.975,276,17.332,298,22.124,447,24.685,448,24.685,449,24.685,450,24.685,451,24.685,452,24.685,453,24.685,454,24.685,455,24.685,456,24.685,457,24.685,458,24.685,459,24.685,460,24.685,461,24.685,462,24.685,463,24.685,464,24.685,465,24.685,466,24.685,467,24.685,468,24.685,469,24.685]],["docTitle/docs/client-libraries/0.1/introduction/overview",[0,3.362]],["docBody/docs/client-libraries/0.1/introduction/overview",[0,3.189,21,21.078,61,8.535,87,19.273,101,20.195,102,22.652,106,20.739,118,16.787,214,16.204,470,28.636,471,26.162,472,20.739,473,28.636,474,28.636,475,28.636,476,28.636,477,20.106,478,28.636,479,17.898]],["docTitle/docs/iota-js/0.1/introduction/overview",[101,28.933]],["docBody/docs/iota-js/0.1/introduction/overview",[0,2.871,4,5.181,101,22.94,155,23.558,203,22.697,406,25.796,481,31.41,482,19.951,483,33.055,484,29.876,485,31.41]],["docTitle/docs/iota-java/0.1/introduction/overview",[102,32.452]],["docBody/docs/iota-java/0.1/introduction/overview",[0,2.792,4,5.599,102,26.951,203,24.527,406,27.876,482,21.56,486,33.942]],["docTitle/docs/iota-go/0.1/introduction/overview",[106,29.712]],["docBody/docs/iota-go/0.1/introduction/overview",[0,2.792,4,5.599,106,24.676,203,24.527,406,27.876,482,21.56,487,33.942]],["docTitle/docs/smartcity/0.1/introduction/overview",[4,7.934]],["docBody/docs/smartcity/0.1/introduction/overview",[0,2.744,4,6.474,247,20.352,251,18.414,488,36.761,489,36.761,490,19.32,491,36.761,492,32.946,493,36.761]],["docTitle/docs/node-software/0.1/introduction/overview",[0,3.362]],["docBody/docs/node-software/0.1/introduction/overview",[0,2.026,4,4.78,72,25.116,185,16.864,208,19.551,490,16.993,494,32.332,495,32.332,496,34.339,497,25.116,498,26.767,499,18.406,500,25.116,501,26.767,502,23.798,503,23.798,504,28.977,505,32.332,506,26.767,507,27.25,508,32.332]],["docTitle/docs/node-software/0.1/iri/introduction/overview",[4,7.934]],["docBody/docs/node-software/0.1/iri/introduction/overview",[0,2.976,4,5.133,33,4.021,185,18.578,217,23.37,509,34.723,510,34.723,511,34.723,512,34.723,513,34.723,514,34.723]],["docTitle/docs/node-software/0.1/iri/concepts/the-ledger",[0,3.362]],["docBody/docs/node-software/0.1/iri/concepts/the-ledger",[0,3.204,33,4.845,111,26.484,119,26.484,157,30.555,185,13.006,515,34.093,516,34.093,517,34.093,518,34.093]],["docTitle/docs/node-software/0.1/iri/concepts/neighbor-iri-node",[185,20.474]],["docBody/docs/node-software/0.1/iri/concepts/neighbor-iri-node",[0,2.76,185,17.918,519,37.124,520,37.124,521,37.124,522,37.124,523,37.124,524,37.124]],["docTitle/docs/node-software/0.1/iri/concepts/transaction-validation",[0,3.362]],["docBody/docs/node-software/0.1/iri/concepts/transaction-validation",[0,3.2,4,4.821,17,9.057,185,18.609,525,32.613,526,40.708,527,32.613,528,32.613,529,32.613]],["docTitle/docs/node-software/0.1/iri/concepts/zero-message-queue",[0,3.362]],["docBody/docs/node-software/0.1/iri/concepts/zero-message-queue",[0,3.005,33,4.135,48,9.258,155,19.772,530,26.286,531,35.713,532,35.713,533,35.713,534,35.713,535,35.713,536,35.713,537,32.007]],["docTitle/docs/node-software/0.1/iri/concepts/local-snapshot",[0,3.362]],["docBody/docs/node-software/0.1/iri/concepts/local-snapshot",[0,3.208,33,4.532,42,14.335,75,19.561,95,14.762,185,17.334,538,25.182,539,25.182,540,25.182,541,25.182,542,22.568,543,25.182,544,34.376,545,25.182,546,30.809,547,30.809,548,25.182,549,34.376,550,25.182,551,25.182,552,25.182,553,25.182,554,25.182,555,25.182,556,30.809,557,25.182,558,25.182,559,25.182]],["docTitle/docs/node-software/0.1/iri/concepts/tip-selection",[0,3.362]],["docBody/docs/node-software/0.1/iri/concepts/tip-selection",[0,3.28,4,4.199,17,9.373,33,3.908,48,4.99,80,23.696,112,14.952,208,17.173,490,10.116,560,19.248,561,30.868,562,19.248,563,37.258,564,17.25,565,19.248,566,19.248,567,19.248,568,19.248,569,19.248,570,15.935,571,19.248,572,19.248,573,19.248,574,19.248,575,19.248,576,19.248,577,19.248,578,19.248,579,19.248,580,17.25,581,23.696,582,19.248,583,17.25,584,28.4,585,19.248]],["docTitle/docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux",[586,48.098]],["docBody/docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux",[0,3.031,17,4.291,33,5.014,48,4.005,59,4.475,68,5.995,73,7.923,87,10.398,97,14.092,102,26.183,111,12.001,112,12.001,115,12.79,116,12.79,117,11.371,118,9.056,135,12.041,152,7.739,158,5.995,185,18.251,205,11.269,259,19.901,586,13.846,587,15.449,588,13.846,589,12.001,590,12.001,591,15.449,592,11.371,593,13.846,594,12.79,595,13.846,596,13.846,597,13.846,598,13.846,599,15.449,600,15.449,601,15.449,602,15.449,603,15.449,604,15.449,605,15.449,606,24.039,607,15.449,608,9.342,609,15.449,610,15.449,611,15.449,612,15.449,613,15.449,614,15.449,615,15.449,616,15.449,617,13.846,618,15.449,619,15.449,620,15.449,621,15.449,622,15.449,623,15.449,624,8.795,625,6.813,626,15.449,627,15.449,628,15.449,629,15.449,630,15.449,631,15.449,632,15.449,633,15.449,634,15.449,635,15.449,636,15.449,637,15.449,638,15.449,639,15.449,640,15.449,641,15.449,642,15.449,643,13.846,644,15.449,645,15.449,646,15.449,647,15.449,648,15.449,649,15.449,650,13.846,651,15.449,652,15.449,653,15.449,654,13.846,655,13.846]],["docTitle/docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker",[656,48.098]],["docBody/docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker",[0,2.947,17,5.346,33,4.314,48,4.99,59,8.227,62,13.038,64,13.514,65,17.173,68,7.469,73,9.871,87,12.954,111,14.952,112,14.952,113,17.25,115,15.935,116,15.935,117,14.167,118,11.283,160,31.659,185,18.288,188,17.25,588,17.25,589,14.952,590,14.952,593,17.25,594,15.935,595,17.25,596,17.25,597,17.25,598,17.25,624,19.212,625,8.489,650,17.25,654,17.25,655,17.25,656,17.25,657,19.248,658,19.248,659,15.935,660,19.248,661,19.248,662,17.25,663,17.25,664,19.248,665,19.248,666,19.248,667,18.684,668,19.248,669,19.248,670,19.248,671,19.248,672,19.248,673,19.248,674,19.248,675,19.248,676,15.935,677,17.25,678,19.248,679,19.248,680,19.248]],["docTitle/docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy",[0,3.362]],["docBody/docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy",[0,3.082,33,4.316,681,28.42,682,28.42,683,28.42,684,28.42,685,37.275,686,28.42,687,28.42,688,44.154,689,28.42,690,28.42,691,28.42,692,15.321,693,28.42,694,28.42,695,28.42,696,19.127,697,28.42,698,28.42,699,28.42,700,28.42,701,28.42,702,28.42,703,28.42,704,28.42,705,28.42,706,28.42,707,28.42]],["docTitle/docs/node-software/0.1/iri/how-to-guides/prune-transactions-from-the-ledger",[0,3.362]],["docBody/docs/node-software/0.1/iri/how-to-guides/prune-transactions-from-the-ledger",[0,3.232,17,9.137,185,12.551,546,36.682,556,36.682,708,32.899,709,32.899,710,32.899,711,32.899,712,29.485]],["docTitle/docs/node-software/0.1/iri/how-to-guides/find-neighbor-iri-nodes",[185,20.474]],["docBody/docs/node-software/0.1/iri/how-to-guides/find-neighbor-iri-nodes",[185,15.055,713,39.464,714,39.464,715,39.464,716,39.464]],["docTitle/docs/node-software/0.1/iri/how-to-guides/interact-with-an-iri-node",[0,3.362]],["docBody/docs/node-software/0.1/iri/how-to-guides/interact-with-an-iri-node",[0,3.15,17,8.139,33,3.393,48,7.597,59,12.23,68,11.372,94,16.807,119,32.796,132,12.925,133,13.183,134,11.989,158,11.372,472,24.736,717,29.306,718,26.265,719,26.265,720,29.306]],["docTitle/docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node",[0,3.362]],["docBody/docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node",[0,3.17,17,7.088,33,4.017,48,6.617,68,9.905,73,13.09,77,13.76,94,16.942,132,11.256,133,11.482,134,10.441,158,9.905,272,30.704,472,25.257,537,22.875,718,22.875,719,22.875,721,25.524,722,25.524,723,25.524,724,25.524,725,21.13,726,25.524,727,25.524,728,25.524]],["docTitle/docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing",[729,29.136,730,35.477]],["docBody/docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing",[0,3.134,33,4.118,42,12.002,48,5.466,59,6.107,96,13.178,97,12.359,102,12.749,124,12.749,156,15.565,272,20.427,589,16.378,729,15.519,730,18.896,731,21.084,732,35.559,733,21.084,734,21.084,735,21.084,736,21.084,737,21.084,738,21.084,739,21.084,740,21.084,741,21.084,742,18.896,743,21.084,744,21.084,745,21.084,746,21.084,747,21.084,748,21.084,749,21.084,750,21.084,751,30.35,752,14.803,753,21.084,754,21.084,755,21.084,756,21.084,757,21.084,758,21.084,759,21.084,760,21.084,761,21.084,762,18.896,763,21.084,764,21.084,765,21.084,766,21.084,767,21.084,768,21.084,769,16.378,770,21.084,771,21.084,772,21.084,773,21.084,774,21.084,775,21.084,776,21.084,777,21.084,778,21.084,779,21.084]],["docTitle/docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy",[0,3.362]],["docBody/docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy",[0,3.133,33,5.232,61,8.103,94,9.869,152,13.618,185,13.809,276,28.572,624,15.476,780,27.186,781,27.186,782,27.186,783,24.365,784,24.365,785,13.943,786,24.365,787,24.365,788,24.365,789,24.365,790,24.365,791,27.186,792,27.186,793,27.186,794,27.186,795,27.186,796,27.186,797,27.186,798,27.186,799,27.186,800,27.186,801,27.186]],["docTitle/docs/node-software/0.1/iri/how-to-guides/update-the-iri",[185,20.474]],["docBody/docs/node-software/0.1/iri/how-to-guides/update-the-iri",[0,2.303,61,10.957,185,18.872,205,17.232,617,32.946,802,36.761,803,36.761,804,36.761]],["docTitle/docs/node-software/0.1/iri/references/api-reference",[59,15.546]],["docBody/docs/node-software/0.1/iri/references/api-reference",[0,3.257,4,1.591,17,2.988,33,3.978,37,12.13,59,7.811,61,3.207,94,16.059,119,8.358,166,6.125,208,6.506,262,10.523,359,8.358,379,7.92,380,8.907,382,9.643,424,9.643,472,24.491,490,9.435,564,9.643,581,7.554,805,11.626,806,10.76,807,10.76,808,10.76,809,10.76,810,36.622,811,34.364,812,34.364,813,17.952,814,10.76,815,10.76,816,10.76,817,10.76,818,10.76,819,9.643,820,10.76,821,10.76,822,10.76,823,8.79,824,13.213,825,13.945,826,5.153,827,8.358,828,10.76,829,10.76,830,9.643,831,10.76,832,10.76,833,9.643,834,10.76,835,10.76,836,10.76,837,10.76,838,10.76,839,10.76,840,10.76,841,10.76,842,10.76]],["docTitle/docs/node-software/0.1/iri/references/api-errors",[59,15.546]],["docBody/docs/node-software/0.1/iri/references/api-errors",[0,2.675,59,11.186,185,14.732,205,14.067,490,15.771,561,33.168,581,21.069,812,35.02,843,30.008,844,42.698,845,34.608,846,30.008,847,30.008,848,30.008,849,24.843,850,15.39,851,30.008,852,30.008,853,18.756,854,21.069,855,30.008,856,30.008,857,24.843]],["docTitle/docs/node-software/0.1/iri/references/best-practice",[0,3.362]],["docBody/docs/node-software/0.1/iri/references/best-practice",[0,3.168,4,4.019,33,5.232,37,12.23,48,7.048,59,11.788,276,19.087,580,24.365,857,22.506,858,27.186,859,27.186,860,27.186,861,27.186,862,27.186,863,27.186,864,27.186,865,32.441,866,28.119,867,28.119,868,27.186,869,19.087,870,27.186,871,27.186,872,27.186,873,27.186,874,27.186]],["docTitle/docs/node-software/0.1/iri/references/data-in-the-ledger",[0,3.362]],["docBody/docs/node-software/0.1/iri/references/data-in-the-ledger",[0,2.86,185,15.055,875,39.464,876,39.464]],["docTitle/docs/node-software/0.1/iri/references/data-in-the-snapshot-metadata-file",[0,3.362]],["docBody/docs/node-software/0.1/iri/references/data-in-the-snapshot-metadata-file",[0,2.553,542,36.519]],["docTitle/docs/node-software/0.1/iri/references/iri-configuration-options",[185,20.474]],["docBody/docs/node-software/0.1/iri/references/iri-configuration-options",[0,3.18,33,3.999,59,11.377,72,26.827,80,24.247,185,13.175,217,17.063,272,28.383,581,24.247,866,26.827,867,26.827,869,24.247,877,25.351,878,25.351,879,42.172,880,26.827,881,20.244,882,25.419,883,34.534,884,25.351,885,25.351,886,25.351]],["docTitle/docs/node-software/0.1/iri/references/zmq-events",[272,36.12]],["docBody/docs/node-software/0.1/iri/references/zmq-events",[0,2.826,33,4.476,42,22.003,48,10.02,272,26.014,887,38.652]],["docTitle/docs/node-software/0.1/iri/references/troubleshooting",[0,3.362]],["docBody/docs/node-software/0.1/iri/references/troubleshooting",[0,2.836,4,5.04,33,3.948,185,17.271,888,30.555,889,34.093,890,20.615,891,34.093,892,30.555,893,34.093,894,34.093,895,34.093,896,34.093,897,34.093,898,34.093,899,34.093]],["docTitle/docs/node-software/0.1/chronicle/introduction/overview",[0,3.362]],["docBody/docs/node-software/0.1/chronicle/introduction/overview",[0,3.176,4,4.401,33,4.926,59,8.624,185,14.656,496,29.844,900,29.771,901,29.771,902,29.771,903,29.771,904,40.282,905,29.771,906,16.947,907,28.278,908,29.771,909,13.392,910,29.771]],["docTitle/docs/node-software/0.1/chronicle/how-to-guides/get-started",[62,24.638]],["docBody/docs/node-software/0.1/chronicle/how-to-guides/get-started",[0,3.199,17,5.855,33,3.514,48,5.466,61,9.046,62,9.679,68,8.182,73,10.813,77,11.367,79,16.378,117,15.519,124,18.352,125,21.309,185,8.043,496,23.576,625,9.298,907,22.339,911,21.084,912,30.35,913,21.084,914,21.084,915,21.084,916,21.084,917,14.803,918,21.084,919,21.084,920,21.084,921,21.084,922,21.084,923,21.084,924,21.084,925,21.084,926,21.084,927,18.896,928,21.084,929,21.084,930,21.084,931,21.084,932,21.084,933,21.084,934,21.084,935,21.084,936,21.084,937,21.084,938,21.084,939,21.084,940,21.084,941,21.084,942,21.084,943,21.084,944,21.084,945,21.084,946,17.455,947,21.084,948,21.084,949,18.896]],["docTitle/docs/node-software/0.1/chronicle/references/api-reference",[59,15.546]],["docBody/docs/node-software/0.1/chronicle/references/api-reference",[0,3.194,33,3.589,48,8.036,59,8.98,61,9.239,94,14.312,472,21.827,805,25.533,810,32.64,811,30.627,819,27.782,833,27.782,950,30.999,951,27.782,952,30.999]],["docTitle/docs/node-software/0.1/chronicle/references/architecture",[0,3.362]],["docBody/docs/node-software/0.1/chronicle/references/architecture",[0,3.155,109,23.722,490,17.757,496,26.245,906,19.233,907,30.626,953,33.786,954,33.786,955,33.786,956,33.786,957,33.786,958,33.786,959,30.28]],["docTitle/docs/node-software/0.1/chronicle/references/data-model",[907,39.502]],["docBody/docs/node-software/0.1/chronicle/references/data-model",[0,3.201,4,4.508,17,8.469,205,14.295,326,27.331,361,20.525,581,21.411,904,27.331,907,28.718,960,30.495,961,30.495,962,30.495,963,30.495,964,39.017,965,30.309,966,30.495,967,27.331,968,30.495]],["docTitle/docs/node-software/0.1/chronicle/references/design-goals",[0,3.362]],["docBody/docs/node-software/0.1/chronicle/references/design-goals",[0,3.165,4,5.33,166,20.525,969,20.525,970,36.056,971,36.056,972,36.056,973,36.056]],["docTitle/docs/node-software/0.1/goshimmer/introduction/overview",[507,36.12]],["docBody/docs/node-software/0.1/goshimmer/introduction/overview",[0,2.728,507,33.206,969,24.784,974,36.405,975,36.405,976,36.405,977,36.405]],["docTitle/docs/node-software/0.1/goshimmer/how-to-guides/run-the-node",[507,36.12]],["docBody/docs/node-software/0.1/goshimmer/how-to-guides/run-the-node",[0,3.102,17,6.785,33,4.653,48,6.333,62,7.241,64,11.075,65,14.772,71,14.772,106,8.733,152,12.237,160,29.843,490,17.695,507,27.945,624,13.907,662,14.136,663,14.136,696,16.442,725,20.225,783,14.136,784,14.136,785,8.089,786,14.136,787,14.136,788,14.136,789,14.136,790,21.895,830,21.895,969,20.735,978,15.773,979,15.773,980,24.43,981,15.773,982,15.773,983,24.43,984,15.773,985,15.773,986,14.136,987,7.394,988,15.773,989,15.773,990,15.773,991,15.773,992,15.773,993,20.225,994,20.225,995,24.43,996,24.43,997,24.43,998,18.977,999,21.895,1000,24.43,1001,24.43,1002,15.773,1003,15.773,1004,15.773,1005,29.9,1006,15.773,1007,17.982,1008,21.895,1009,24.43,1010,21.895,1011,15.773,1012,15.773,1013,11.61,1014,12.253,1015,15.773]],["docTitle/docs/node-software/0.1/goshimmer/how-to-guides/send-spam",[0,3.362]],["docBody/docs/node-software/0.1/goshimmer/how-to-guides/send-spam",[0,3.124,33,4.984,507,24.036,1010,32.007,1016,35.713,1017,35.713,1018,35.713,1019,35.713,1020,35.713]],["docTitle/docs/node-software/0.1/goshimmer/how-to-guides/subscribe-to-events",[0,3.362]],["docBody/docs/node-software/0.1/goshimmer/how-to-guides/subscribe-to-events",[0,3.134,17,7.893,33,3.291,48,7.368,68,11.028,73,14.575,77,15.321,94,17.079,132,12.534,133,12.785,134,11.626,272,30.856,472,25.382,725,23.528,762,33.407,1021,28.42,1022,28.42,1023,28.42]],["docTitle/docs/node-software/0.1/goshimmer/references/command-line-flags",[0,3.362]],["docBody/docs/node-software/0.1/goshimmer/references/command-line-flags",[0,2.992,33,4.476,507,26.014,1024,38.652,1025,31.999]],["docTitle/docs/compass/0.1/introduction/overview",[0,3.362]],["docBody/docs/compass/0.1/introduction/overview",[0,3.228,4,7.315,48,8.455,1026,32.613,1027,32.613,1028,32.613,1029,32.613]],["docTitle/docs/compass/0.1/how-to-guides/set-up-a-private-tangle",[0,3.362]],["docBody/docs/compass/0.1/how-to-guides/set-up-a-private-tangle",[0,3.22,4,3.588,17,4.344,33,4.446,42,8.904,48,4.055,55,11.884,59,4.531,61,4.662,68,6.07,73,12.448,77,8.433,81,8.66,135,7.835,156,12.448,160,16.336,185,15.282,262,9.169,423,12.949,490,12.756,561,12.151,592,11.513,625,6.898,752,10.982,827,12.151,880,12.151,890,9.458,909,10.919,917,20.882,1007,11.513,1030,15.642,1031,15.642,1032,9.458,1033,20.094,1034,15.642,1035,15.642,1036,15.642,1037,14.019,1038,15.642,1039,15.642,1040,15.642,1041,15.642,1042,15.642,1043,15.642,1044,15.642,1045,15.642,1046,14.019,1047,15.642,1048,15.642,1049,15.642,1050,15.642,1051,15.642,1052,15.642,1053,15.642,1054,15.642,1055,21.753,1056,15.642,1057,15.642,1058,15.642,1059,15.642,1060,14.019,1061,10.982,1062,15.642,1063,15.642,1064,15.642,1065,15.642,1066,15.642,1067,15.642,1068,15.642,1069,15.642,1070,15.642,1071,15.642,1072,14.019,1073,15.642,1074,15.642,1075,15.642,1076,21.753,1077,23.104,1078,15.642,1079,14.019]],["docTitle/docs/compass/0.1/references/compass-configuration-options",[0,3.362]],["docBody/docs/compass/0.1/references/compass-configuration-options",[0,2.553,217,27.425]],["docTitle/docs/compass/0.1/references/merkle-tree-compute-times",[0,3.362]],["docBody/docs/compass/0.1/references/merkle-tree-compute-times",[0,2.472,158,15.314,233,27.708,1080,39.464,1081,39.464]],["docTitle/docs/compass/0.1/references/troubleshooting",[0,3.362]],["docBody/docs/compass/0.1/references/troubleshooting",[0,2.026,4,4.78,62,14.843,160,27.25,185,16.864,442,14.843,667,17.9,880,25.116,917,22.701,1013,23.798,1014,25.116,1055,39.618,1060,28.977,1061,22.701,1082,22.701,1083,32.332,1084,32.332,1085,32.332,1086,18.406,1087,32.332,1088,32.332]],["docTitle/docs/wallets/0.1/introduction/overview",[0,3.362]],["docBody/docs/wallets/0.1/introduction/overview",[0,3.073,199,25.749,1089,38.258,1090,24.777,1091,38.258]],["docTitle/docs/wallets/0.1/trinity/introduction/overview",[0,3.362]],["docBody/docs/wallets/0.1/trinity/introduction/overview",[0,3.224,4,6.22,33,3.984,199,23.156,200,24.156,1092,34.405,1093,28.483,1094,34.405]],["docTitle/docs/wallets/0.1/trinity/concepts/hardware-wallet",[0,3.362]],["docBody/docs/wallets/0.1/trinity/concepts/hardware-wallet",[0,3.237,4,4.299,42,16.554,47,37.696,48,7.539,68,11.284,811,22.589,812,22.589,1095,42.061,1096,42.061,1097,29.079,1098,29.079,1099,29.079,1100,29.079,1101,29.079,1102,29.079]],["docTitle/docs/wallets/0.1/trinity/concepts/node-quorum",[0,3.362]],["docBody/docs/wallets/0.1/trinity/concepts/node-quorum",[0,2.878,48,10.339,1103,39.883]],["docTitle/docs/wallets/0.1/trinity/how-to-guides/create-an-account",[0,3.362]],["docBody/docs/wallets/0.1/trinity/how-to-guides/create-an-account",[0,3.238,33,5.263,38,28.483,78,24.156,203,22.281,204,19.047]],["docTitle/docs/wallets/0.1/trinity/how-to-guides/back-up-seed",[0,3.362]],["docBody/docs/wallets/0.1/trinity/how-to-guides/back-up-seed",[0,3.246,4,6.084,55,20.149,66,29.745,1104,33.189,1105,33.189,1106,33.189,1107,27.476]],["docTitle/docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop",[0,3.362]],["docBody/docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop",[0,3.21,62,11.961,64,18.293,65,15.755,199,17.536,1108,26.055,1109,26.055,1110,35.309,1111,26.055,1112,26.055,1113,39.831,1114,21.57,1115,26.055,1116,23.351,1117,17.536,1118,35.181,1119,26.055,1120,29.318,1121,26.055,1122,26.055,1123,22.674,1124,26.055,1125,26.055,1126,26.055,1127,26.055,1128,26.055]],["docTitle/docs/wallets/0.1/trinity/how-to-guides/read-your-balance",[0,3.362]],["docBody/docs/wallets/0.1/trinity/how-to-guides/read-your-balance",[0,3.031,185,15.215]],["docTitle/docs/wallets/0.1/trinity/how-to-guides/send-a-transaction",[0,3.362]],["docBody/docs/wallets/0.1/trinity/how-to-guides/send-a-transaction",[0,3.233,4,6.685,33,5.414,55,14.811,91,21.239,208,18.292,1129,25.043,1130,30.25,1131,30.25,1132,23.499,1133,25.043,1134,22.265]],["docTitle/docs/wallets/0.1/trinity/how-to-guides/receive-a-transaction",[0,3.362]],["docBody/docs/wallets/0.1/trinity/how-to-guides/receive-a-transaction",[0,3.189,33,3.984,55,20.601,208,25.442,1129,28.483,1134,30.969,1135,34.405,1136,28.483]],["docTitle/docs/wallets/0.1/trinity/how-to-guides/create-a-qr-code",[1136,44.43]],["docBody/docs/wallets/0.1/trinity/how-to-guides/create-a-qr-code",[0,2.712,33,4.175,37,16.22,91,25.315,134,14.75,1136,38.403,1137,36.056,1138,36.056,1139,36.056,1140,36.056,1141,36.056]],["docTitle/docs/wallets/0.1/trinity/how-to-guides/create-deep-link",[0,3.362]],["docBody/docs/wallets/0.1/trinity/how-to-guides/create-deep-link",[0,3.267,33,4.663,61,9.555,155,17.747,1142,32.057,1143,32.057,1144,28.73,1145,32.057,1146,32.057]],["docTitle/docs/wallets/0.1/trinity/how-to-guides/connect-to-a-custom-node",[0,3.362]],["docBody/docs/wallets/0.1/trinity/how-to-guides/connect-to-a-custom-node",[0,3.24,33,4.132,48,9.25,61,7.931,135,17.873,199,17.908,202,16.631,217,17.908,490,23.577,692,14.345,805,17.232,826,12.743,865,23.847,1147,23.847,1148,23.847,1149,23.847,1150,26.608,1151,26.608,1152,26.608,1153,26.264,1154,26.608,1155,26.608]],["docTitle/docs/wallets/0.1/trinity/how-to-guides/outsource-pow",[0,3.362]],["docBody/docs/wallets/0.1/trinity/how-to-guides/outsource-pow",[0,3.264,33,4.765,692,17.893,805,21.494,1148,29.745,1149,29.745,1156,33.189]],["docTitle/docs/wallets/0.1/trinity/how-to-guides/manage-your-account",[0,3.362]],["docBody/docs/wallets/0.1/trinity/how-to-guides/manage-your-account",[0,3.311,33,3.367,203,18.832,1147,26.062,1157,29.079]],["docTitle/docs/wallets/0.1/trinity/how-to-guides/manage-your-security-settings",[0,3.362]],["docBody/docs/wallets/0.1/trinity/how-to-guides/manage-your-security-settings",[0,3.214,484,26.325,1158,37.495]],["docTitle/docs/wallets/0.1/trinity/how-to-guides/change-the-general-settings",[0,3.362]],["docBody/docs/wallets/0.1/trinity/how-to-guides/change-the-general-settings",[0,3.273,17,9.733,48,9.086]],["docTitle/docs/wallets/0.1/trinity/how-to-guides/auto-promote",[0,3.362]],["docBody/docs/wallets/0.1/trinity/how-to-guides/auto-promote",[0,3.233,33,4.342]],["docTitle/docs/wallets/0.1/trinity/how-to-guides/perform-a-snapshot-transition",[0,3.362]],["docBody/docs/wallets/0.1/trinity/how-to-guides/perform-a-snapshot-transition",[0,3.264,33,3.948,880,26.484,1159,34.093,1160,30.555,1161,34.093]],["docTitle/docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity",[0,3.362]],["docBody/docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity",[0,3.245,33,4.091,62,12.037,64,12.145,65,21.364,71,10.46,87,17.647,92,12.732,95,10.14,99,12.732,132,11.563,199,11.642,472,14.516,477,12.145,590,20.368,608,10.46,624,9.847,625,11.563,667,9.577,752,12.145,867,13.437,1077,13.437,1114,14.321,1129,14.321,1162,17.298,1163,26.22,1164,15.503,1165,17.298,1166,17.298,1167,17.298,1168,17.298,1169,17.298,1170,17.298,1171,17.298,1172,26.22,1173,23.499,1174,26.22,1175,17.298,1176,17.298,1177,14.321,1178,17.298,1179,17.298,1180,14.321,1181,17.298,1182,17.298,1183,17.298,1184,17.298,1185,17.298,1186,17.298,1187,17.298,1188,17.298,1189,17.298,1190,17.298,1191,17.298,1192,17.298,1193,17.298,1194,17.298,1195,10.46,1196,17.298,1197,17.298,1198,17.298,1199,13.437,1200,17.298,1201,17.298,1202,17.298]],["docTitle/docs/wallets/0.1/trinity/references/troubleshooting",[0,3.362]],["docBody/docs/wallets/0.1/trinity/references/troubleshooting",[0,3.293,4,5.68,33,4.449,888,26.681,1203,29.771,1204,23.126,1205,29.771,1206,29.771]],["docTitle/docs/wallets/0.1/hub/introduction/overview",[0,3.362]],["docBody/docs/wallets/0.1/hub/introduction/overview",[0,3.098,4,6.947,17,8.539,33,4.541,59,8.906,1207,30.745,1208,30.745,1209,30.745,1210,30.745,1211,30.745,1212,30.745,1213,25.453,1214,30.745,1215,30.745,1216,30.745,1217,30.745,1218,30.745,1219,30.745,1220,20.693,1221,30.745]],["docTitle/docs/wallets/0.1/hub/concepts/sweeps",[0,3.362]],["docBody/docs/wallets/0.1/hub/concepts/sweeps",[0,3.23,4,4.699,17,8.828,33,4.638,48,8.24,55,15.563,1222,31.785,1223,31.785,1224,31.785,1225,31.785,1226,31.785,1227,31.785,1228,31.785,1229,31.785]],["docTitle/docs/wallets/0.1/hub/how-to-guides/install-hub",[0,3.362]],["docBody/docs/wallets/0.1/hub/how-to-guides/install-hub",[0,3.199,4,2.477,17,7.108,33,2.964,48,6.635,59,12.265,61,4.995,62,7.693,68,9.932,73,13.127,77,13.798,79,13.018,81,9.278,91,11.766,92,12.335,97,9.824,124,15.477,152,8.394,592,18.839,624,9.54,625,7.391,890,15.477,906,9.54,917,24.405,969,9.54,1090,24.247,1213,13.874,1220,20.9,1230,16.758,1231,16.758,1232,16.758,1233,22.939,1234,15.019,1235,16.758,1236,16.758,1237,15.019,1238,16.758,1239,16.758,1240,16.758,1241,13.874,1242,16.758,1243,16.758,1244,16.758,1245,16.758,1246,34.759,1247,16.758,1248,16.758,1249,15.019,1250,16.758,1251,16.758,1252,16.758,1253,22.939,1254,16.758,1255,16.758,1256,16.575,1257,16.758,1258,16.758,1259,16.758,1260,16.758,1261,16.758,1262,15.019,1263,15.019,1264,16.758,1265,25.595,1266,16.758,1267,16.758]],["docTitle/docs/wallets/0.1/hub/how-to-guides/install-the-signing-server",[0,3.362]],["docBody/docs/wallets/0.1/hub/how-to-guides/install-the-signing-server",[0,3.221,4,2.905,17,5.457,48,5.094,61,5.857,68,11.19,73,10.078,77,10.594,96,12.282,124,11.882,152,9.843,592,14.464,624,11.186,625,8.666,890,11.882,906,11.186,917,23.983,1090,18.674,1173,17.611,1213,16.268,1233,17.611,1234,17.611,1237,17.611,1253,35.917,1262,17.611,1263,17.611,1268,37.631,1269,19.65,1270,19.65,1271,19.65,1272,41.89,1273,34.158,1274,34.158,1275,19.65,1276,19.65,1277,28.836,1278,28.836,1279,19.65,1280,19.65,1281,19.65,1282,19.65,1283,19.65,1284,19.65,1285,19.65,1286,19.65,1287,19.65,1288,19.65]],["docTitle/docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api",[59,11.467,1220,26.642]],["docBody/docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api",[0,3.202,4,5.573,17,6.513,33,5.282,48,6.08,59,11.818,100,19.791,152,11.748,752,16.466,785,12.028,946,19.416,1090,15.188,1220,28.883,1289,23.453,1290,23.453,1291,23.453,1292,23.453,1293,23.453,1294,23.453,1295,23.453,1296,23.453,1297,23.453,1298,23.453,1299,14.181,1300,19.416,1301,23.453,1302,23.453,1303,23.453,1304,18.218,1305,21.019,1306,23.453,1307,21.019,1308,23.453]],["docTitle/docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api",[59,11.467,1256,25.636]],["docBody/docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api",[0,3.191,4,5.555,17,10.435,33,4.711,48,9.741,59,10.884,68,12.646,73,11.953,77,12.565,94,16.531,132,10.279,133,10.485,134,9.535,152,11.675,472,25.211,946,19.295,1256,24.333,1304,18.105,1305,20.888,1307,20.888,1309,23.307,1310,23.307,1311,23.307,1312,23.307,1313,23.307]],["docTitle/docs/wallets/0.1/hub/how-to-guides/query-the-database",[0,3.362]],["docBody/docs/wallets/0.1/hub/how-to-guides/query-the-database",[0,3.165,33,5.263,1090,22.281,1249,37.709,1314,34.405,1315,34.405,1316,28.483,1317,28.483,1318,34.405]],["docTitle/docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange",[0,3.362]],["docBody/docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange",[0,3.215,4,6.469,17,4.455,33,3.934,48,4.159,59,7.17,61,4.782,62,7.365,68,11.727,71,9.701,73,8.228,77,8.649,81,8.882,87,10.797,166,9.132,169,13.281,201,14.378,205,7.52,270,12.462,442,7.365,472,16.731,592,11.808,625,7.075,643,14.378,752,17.378,890,9.701,1077,19.228,1133,13.281,1319,16.043,1320,16.043,1321,16.043,1322,16.043,1323,16.043,1324,16.043,1325,16.043,1326,16.043,1327,16.043,1328,16.043,1329,16.043,1330,22.183,1331,16.043,1332,32.899,1333,16.043,1334,16.043,1335,16.043,1336,16.043,1337,16.043,1338,16.043,1339,16.043,1340,14.378,1341,14.378,1342,16.043,1343,16.043,1344,16.043,1345,16.043,1346,16.043,1347,14.378,1348,16.043,1349,16.043,1350,16.043,1351,16.043,1352,16.043,1353,16.043,1354,16.043,1355,16.043,1356,16.043,1357,16.043,1358,16.043,1359,16.043,1360,16.043,1361,24.752,1362,16.043,1363,16.043,1364,16.043,1365,16.043,1366,13.281,1367,16.043]],["docTitle/docs/wallets/0.1/hub/how-to-guides/integrate-hub",[0,3.362]],["docBody/docs/wallets/0.1/hub/how-to-guides/integrate-hub",[0,3.233,4,7.233,17,11.392,33,4.75,48,8.559,61,12.226,1316,27.334,1368,23.749,1369,23.749,1370,37.954,1371,23.749,1372,23.749,1373,23.749,1374,23.749,1375,23.749,1376,23.749,1377,23.749,1378,23.749,1379,23.749]],["docTitle/docs/wallets/0.1/hub/how-to-guides/recover-tokens",[4,7.934]],["docBody/docs/wallets/0.1/hub/how-to-guides/recover-tokens",[0,3.235,4,5.811,17,5.99,33,5.157,48,5.591,61,6.428,68,11.971,94,7.83,95,12.643,96,13.48,130,11.627,132,9.512,133,9.702,134,8.823,146,17.855,147,17.855,149,17.855,152,10.804,361,20.762,849,17.855,1220,14.516,1380,21.568,1381,21.568,1382,21.568,1383,19.33,1384,21.568,1385,21.568,1386,21.568,1387,21.568,1388,21.568,1389,21.568,1390,21.568,1391,19.33,1392,21.568,1393,21.568,1394,21.568,1395,19.33,1396,21.568,1397,21.568,1398,21.568,1399,21.568,1400,21.568,1401,21.568]],["docTitle/docs/wallets/0.1/hub/references/grpc-api-reference",[59,15.546]],["docBody/docs/wallets/0.1/hub/references/grpc-api-reference",[0,2.991,33,2.84,59,7.104,1090,15.882,1220,22.721,1402,21.979,1403,24.524,1404,24.524,1405,24.524,1406,24.524,1407,24.524,1408,24.524,1409,24.524,1410,24.524,1411,24.524,1412,24.524,1413,24.524,1414,24.524,1415,24.524,1416,24.524,1417,24.524,1418,24.524,1419,24.524,1420,24.524,1421,24.524,1422,24.524,1423,24.524,1424,21.979,1425,24.524,1426,24.524,1427,21.979,1428,24.524,1429,24.524,1430,24.524,1431,24.524,1432,24.524,1433,24.524,1434,24.524,1435,24.524,1436,24.524,1437,24.524,1438,24.524,1439,24.524,1440,24.524,1441,24.524,1442,24.524,1443,24.524,1444,24.524,1445,24.524,1446,24.524,1447,24.524,1448,24.524,1449,20.303,1450,24.524]],["docTitle/docs/wallets/0.1/hub/references/restful-api-reference",[59,11.467,1256,25.636]],["docBody/docs/wallets/0.1/hub/references/restful-api-reference",[0,3.187,4,2.829,33,3.515,37,16.714,42,4.751,59,4.189,61,2.487,88,11.961,89,3.912,94,14.859,124,5.047,166,14.695,169,21.37,195,7.48,203,9.366,205,8.971,209,7.48,361,5.617,379,6.143,423,6.909,472,22.661,805,9.366,810,33.887,811,31.797,812,31.797,824,20.815,825,21.968,827,6.483,849,21.37,850,4.28,909,3.754,951,7.48,969,4.751,993,6.909,1090,9.366,1133,21.37,1134,6.143,1153,6.143,1256,9.366,1304,6.483,1316,6.909,1317,6.909,1332,20.459,1340,7.48,1341,7.48,1347,7.48,1366,27.846,1383,7.48,1395,12.962,1402,7.48,1424,7.48,1427,7.48,1451,8.346,1452,8.346,1453,8.346,1454,8.346,1455,8.346,1456,8.346,1457,6.483,1458,7.48,1459,8.346,1460,8.346,1461,8.346,1462,8.346,1463,23.135,1464,8.346,1465,17.152,1466,8.346,1467,7.48,1468,8.346,1469,5.405,1470,8.346,1471,12.962,1472,14.462,1473,5.405,1474,8.346,1475,22.828,1476,6.909,1477,8.346,1478,11.235,1479,8.346,1480,5.405,1481,6.483,1482,8.346,1483,6.143,1484,5.216,1485,8.346,1486,15.364,1487,23.135,1488,25.127,1489,8.346,1490,8.346,1491,5.617,1492,6.483,1493,8.346,1494,14.462,1495,14.462,1496,11.973,1497,8.346,1498,8.346,1499,7.48,1500,7.48]],["docTitle/docs/wallets/0.1/hub/references/command-line-flags",[0,3.362]],["docBody/docs/wallets/0.1/hub/references/command-line-flags",[0,3.141,4,5.714,1501,38.652]],["docTitle/docs/wallets/0.1/hub/references/database-tables",[0,3.362]],["docBody/docs/wallets/0.1/hub/references/database-tables",[0,3.191,59,9.614,1304,25.782,1317,27.476,1366,27.476,1458,29.745,1463,29.745,1502,33.189,1503,33.189,1504,33.189,1505,33.189,1506,33.189,1507,33.189,1508,33.189]],["docTitle/docs/wallets/0.1/hub/references/security-considerations",[0,3.362]],["docBody/docs/wallets/0.1/hub/references/security-considerations",[0,3.234,4,6.979,17,11.62,55,16.692,1509,34.093]],["docTitle/docs/wallets/0.1/hub/references/troubleshooting",[0,3.362]],["docBody/docs/wallets/0.1/hub/references/troubleshooting",[0,2.809,482,21.779,785,19.621,1220,25.749,1510,29.72,1511,38.258,1512,38.258]],["docTitle/docs/utils/0.1/introduction/overview",[0,3.362]],["docBody/docs/utils/0.1/introduction/overview",[0,3.214,4,6.705,214,13.191,247,21.601,251,15.275,471,27.749,625,13.449,1513,20.525,1514,30.495,1515,30.495]],["docTitle/docs/utils/0.1/community/mam-watcher/overview",[214,23.214]],["docBody/docs/utils/0.1/community/mam-watcher/overview",[0,3.23,4,3.99,33,4.171,61,8.045,63,19.866,124,16.321,214,20.805,624,15.365,625,11.903,1516,26.99,1517,22.345,1518,24.19,1519,40.548,1520,26.99,1521,22.345,1522,26.99,1523,26.99,1524,26.99,1525,26.99,1526,26.99]],["docTitle/docs/utils/0.1/community/one-command-tangle/overview",[0,3.362]],["docBody/docs/utils/0.1/community/one-command-tangle/overview",[0,3.198,4,4.837,17,6.51,33,3.788,48,3.877,59,10.292,61,8.615,68,5.804,156,12.021,158,11.216,160,15.776,185,15.031,199,10.067,214,6.47,233,10.501,262,8.768,490,12.319,624,8.514,625,6.596,692,8.063,752,10.501,769,18.208,827,11.619,850,12.021,853,14.65,986,31.842,987,13.549,1033,12.382,1046,13.405,1072,13.405,1077,11.619,1134,11.009,1517,12.382,1527,14.957,1528,14.957,1529,14.957,1530,14.957,1531,14.957,1532,14.957,1533,14.957,1534,14.957,1535,14.957,1536,14.957,1537,14.957,1538,10.067,1539,14.957,1540,14.957,1541,14.957,1542,14.957,1543,14.957,1544,14.957,1545,14.957,1546,14.957,1547,14.957,1548,14.957,1549,14.957,1550,14.957,1551,14.957,1552,14.957,1553,14.957,1554,14.957,1555,14.957,1556,14.957,1557,12.382,1558,13.405,1559,14.957,1560,8.768,1561,14.957,1562,14.957,1563,14.957,1564,14.957,1565,14.957,1566,14.957,1567,14.957,1568,14.957,1569,14.957,1570,14.957,1571,14.957,1572,14.957,1573,14.957,1574,14.957,1575,14.957,1576,14.957,1577,14.957,1578,12.382,1579,14.957]],["docTitle/docs/utils/0.1/community/raspberry-pi-pub-sub/overview",[247,21.915,251,19.828]],["docBody/docs/utils/0.1/community/raspberry-pi-pub-sub/overview",[0,3.175,4,5.766,61,7.456,101,13.485,135,17.141,155,13.848,156,12.829,214,10.82,247,18.945,251,12.53,413,22.418,624,14.24,625,11.032,692,13.485,824,18.411,909,11.253,1517,20.708,1518,22.418,1580,25.014,1581,39.004,1582,39.004,1583,22.418,1584,25.014,1585,25.014,1586,25.014,1587,25.014,1588,25.014,1589,25.014,1590,25.014,1591,34.22,1592,34.22,1593,25.014,1594,25.014,1595,25.014]],["docTitle/docs/utils/0.1/official/iota-area-codes/overview",[4,7.934]],["docBody/docs/utils/0.1/official/iota-area-codes/overview",[0,3.159,4,6.041,17,8.295,33,4.731,48,5.346,59,5.973,94,7.486,130,11.117,131,12.469,132,9.094,133,9.276,134,12.218,152,10.329,158,8.002,239,24.726,547,18.481,1596,20.621,1597,20.621,1598,47.174,1599,20.621,1600,18.481,1601,20.621,1602,20.621,1603,20.621,1604,20.621,1605,20.621,1606,20.621,1607,20.621,1608,20.621,1609,20.621,1610,20.621,1611,20.621,1612,29.867,1613,20.621,1614,20.621,1615,20.621,1616,20.621,1617,20.621,1618,14.478,1619,18.481,1620,20.621,1621,18.481,1622,20.621,1623,20.621,1624,20.621,1625,20.621,1626,20.621,1627,20.621,1628,20.621]],["docTitle/docs/utils/0.1/official/proof-of-existance/overview",[0,3.362]],["docBody/docs/utils/0.1/official/proof-of-existance/overview",[0,3.247,4,3.852,17,11.062,33,4.939,48,6.754,94,9.458,95,15.273,96,16.285,130,14.046,132,11.491,133,11.721,134,10.659,152,13.051,158,10.111,742,23.351,1629,26.055,1630,26.055,1631,26.055,1632,26.055,1633,26.055,1634,26.055,1635,26.055,1636,21.57,1637,26.055,1638,26.055,1639,26.055]],["docTitle/docs/utils/0.1/official/tangle-certificate/overview",[0,3.362]],["docBody/docs/utils/0.1/official/tangle-certificate/overview",[0,3.194,17,7.55,33,3.148,48,7.048,59,7.875,68,10.549,73,13.943,94,9.869,95,15.936,96,16.992,130,14.656,132,11.989,133,12.23,134,11.121,156,13.943,969,20.606,1116,32.441,1640,27.186,1641,27.186,1642,27.186,1643,27.186,1644,36.198,1645,27.186,1646,27.186,1647,27.186,1648,27.186,1649,27.186,1650,27.186,1651,18.297,1652,27.186]],["docTitle/docs/utils/0.1/official/tryte-compress/overview",[0,3.362]],["docBody/docs/utils/0.1/official/tryte-compress/overview",[0,3.237,4,5.326,17,7.496,33,4.695,48,6.997,59,10.435,94,9.798,95,15.822,96,16.869,130,14.551,132,11.903,133,12.142,134,11.041,152,13.52,1496,22.345,1583,24.19,1621,24.19,1653,26.99,1654,26.99,1655,26.99,1656,24.19,1657,26.99,1658,26.99,1659,26.99,1660,26.99]],["docTitle/docs/blueprints/0.1/introduction/overview",[0,3.362]],["docBody/docs/blueprints/0.1/introduction/overview",[0,3.108,4,6.982,154,23.006,156,16.03,909,17.829,999,35.521,1299,18.9,1661,25.876,1662,31.257,1663,21.946,1664,31.257,1665,21.946,1666,31.257,1667,24.281,1668,25.876,1669,25.876,1670,31.257]],["docTitle/docs/blueprints/0.1/data-marketplace/overview",[0,3.362]],["docBody/docs/blueprints/0.1/data-marketplace/overview",[0,3.221,4,4.735,21,16.74,33,2.633,48,5.896,59,9.279,68,8.825,155,12.591,158,8.825,214,13.855,471,24.153,483,17.667,484,15.968,625,10.03,909,18.107,1256,14.729,1661,18.828,1671,22.743,1672,22.743,1673,22.743,1674,22.743,1675,12.947,1676,22.743,1677,22.743,1678,22.743,1679,15.968,1680,22.743,1681,22.743,1682,22.743,1683,22.743,1684,22.743,1685,17.667,1686,22.743,1687,22.743,1688,18.828,1689,20.383,1690,23.577,1691,18.828,1692,18.828]],["docTitle/docs/blueprints/0.1/data-marketplace/architecture",[0,3.362]],["docBody/docs/blueprints/0.1/data-marketplace/architecture",[0,3.205,4,4.019,61,8.103,158,10.549,244,22.506,247,15.051,251,13.618,253,19.087,906,15.476,909,12.23,1618,19.087,1661,22.506,1693,27.186,1694,20.01,1695,27.186,1696,24.365,1697,27.186,1698,27.186,1699,27.186,1700,24.365,1701,27.186,1702,27.186,1703,27.186,1704,24.365,1705,24.365,1706,24.365,1707,24.365,1708,24.365,1709,24.365,1710,24.365,1711,12.744,1712,22.506]],["docTitle/docs/blueprints/0.1/data-marketplace/deployment-and-testing",[0,3.362]],["docBody/docs/blueprints/0.1/data-marketplace/deployment-and-testing",[0,3.226,4,4.34,33,3.838,46,19.775,59,11.516,61,4.567,68,5.946,72,22.803,77,8.261,91,16.771,94,5.562,132,6.758,133,6.893,134,6.268,158,12.864,214,14.339,233,10.758,239,19.775,244,12.685,247,8.483,251,7.675,253,10.758,484,10.758,866,11.903,969,13.598,1120,11.278,1177,12.685,1618,16.771,1636,12.685,1700,13.733,1704,13.733,1705,13.733,1706,13.733,1707,13.733,1708,13.733,1709,13.733,1710,13.733,1711,7.183,1712,12.685,1713,22.317,1714,13.733,1715,26.308,1716,29.355,1717,26.308,1718,13.733,1719,12.685,1720,15.323,1721,15.323,1722,15.323,1723,15.323,1724,23.886,1725,23.886,1726,23.886,1727,15.323,1728,15.323,1729,15.323,1730,15.323,1731,15.323,1732,15.323,1733,15.323,1734,15.323,1735,15.323,1736,15.323,1737,15.323,1738,15.323,1739,15.323,1740,15.323,1741,15.323,1742,15.323]],["docTitle/docs/blueprints/0.1/doc-immutability/overview",[0,3.362]],["docBody/docs/blueprints/0.1/doc-immutability/overview",[0,3.204,4,6.051,100,19.893,154,24.215,158,12.766,471,23.299,625,14.509,906,18.728,1299,19.893,1618,23.098,1743,32.899,1744,32.899]],["docTitle/docs/blueprints/0.1/doc-immutability/architecture",[0,3.362]],["docBody/docs/blueprints/0.1/doc-immutability/architecture",[0,3.256,4,3.876,17,8.794,42,9.847,48,6.797,61,9.437,68,12.287,73,13.447,77,14.135,94,6.28,97,10.14,101,14.135,154,12.732,270,27.446,379,23.306,729,12.732,906,9.847,969,18.025,1110,14.321,1299,22.96,1690,19.299,1694,19.299,1719,14.321,1745,15.503,1746,12.145,1747,26.22,1748,17.298,1749,17.298,1750,17.298,1751,17.298,1752,17.298,1753,17.298,1754,17.298,1755,17.298,1756,17.298,1757,17.298,1758,17.298,1759,17.298,1760,17.298,1761,17.298,1762,17.298,1763,26.22,1764,17.298,1765,26.22,1766,17.298,1767,17.298,1768,17.298,1769,17.298,1770,17.298,1771,17.298]],["docTitle/docs/blueprints/0.1/p2p-energy/overview",[1665,37.68]],["docBody/docs/blueprints/0.1/p2p-energy/overview",[0,2.802,33,3.843,85,23.302,214,17.801,471,25.464,826,15.895,1663,23.302,1665,28.894,1690,30.291,1691,27.476,1692,27.476,1746,23.302,1772,33.189,1773,33.189,1774,33.189,1775,33.189]],["docTitle/docs/blueprints/0.1/p2p-energy/architecture",[0,3.362]],["docBody/docs/blueprints/0.1/p2p-energy/architecture",[0,3.242,4,2.477,59,12.265,61,4.995,158,9.932,206,19.882,214,18.314,906,9.54,969,9.54,1513,11.279,1663,27.712,1665,27.712,1694,12.335,1696,15.019,1746,27.712,1776,16.758,1777,16.758,1778,16.758,1779,25.595,1780,16.758,1781,15.019,1782,15.019,1783,31.053,1784,16.758,1785,16.758,1786,16.758,1787,16.758,1788,16.758,1789,16.758,1790,25.595,1791,16.758,1792,16.758,1793,16.758,1794,16.758,1795,16.758,1796,16.758,1797,16.758,1798,16.758,1799,16.758,1800,16.758,1801,16.758,1802,16.758,1803,31.053,1804,16.758,1805,16.758,1806,16.758,1807,16.758,1808,16.758,1809,16.758,1810,16.758]],["docTitle/docs/blueprints/0.1/p2p-energy/deployment-and-testing",[1665,37.68]],["docBody/docs/blueprints/0.1/p2p-energy/deployment-and-testing",[0,3.171,4,6.616,33,3.059,59,10.287,77,14.244,94,16.246,158,13.781,214,15.361,233,18.551,247,14.627,251,13.235,625,11.652,1177,21.873,1665,30.116,1715,23.679,1718,23.679,1719,21.873,1811,26.421,1812,26.421,1813,26.421,1814,40.115,1815,26.421]],["docTitle/docs/blueprints/0.1/tangle-data-storage/overview",[0,3.362]],["docBody/docs/blueprints/0.1/tangle-data-storage/overview",[0,3.257,4,6.409,33,3.589,158,12.029,471,24.68,625,13.671,1690,29.019,1816,25.663,1817,30.999]],["docTitle/docs/blueprints/0.1/tangle-data-storage/architecture",[0,3.362]],["docBody/docs/blueprints/0.1/tangle-data-storage/architecture",[0,3.12,59,11.629,61,9.507,94,8.206,233,15.872,409,18.715,500,17.561,906,12.869,909,16.626,1086,21.039,1110,30.597,1667,28.71,1694,23.477,1745,20.26,1746,28.186,1816,30.597,1818,22.606,1819,20.26,1820,20.26,1821,22.606,1822,22.606,1823,36.958,1824,22.606,1825,22.606,1826,22.606,1827,22.606,1828,22.606,1829,22.606,1830,22.606,1831,22.606,1832,22.606,1833,22.606,1834,22.606,1835,22.606,1836,22.606,1837,22.606,1838,20.26,1839,22.606,1840,22.606,1841,22.606,1842,22.606]],["docTitle/docs/blueprints/0.1/tangle-data-storage/deployment-and-testing",[0,3.362]],["docBody/docs/blueprints/0.1/tangle-data-storage/deployment-and-testing",[0,2.975,4,6.538,33,2.955,59,7.394,94,9.266,625,11.256,909,19.896,1086,25.97,1667,34.356,1746,32.03,1816,36.614,1819,22.875,1820,22.875,1838,35.323,1843,25.524,1844,39.413,1845,25.524,1846,25.524,1847,25.524,1848,25.524]],["docTitle/docs/blueprints/0.1/track-and-trace/overview",[0,3.362]],["docBody/docs/blueprints/0.1/track-and-trace/overview",[0,3.28,4,3.879,33,3.038,158,10.181,214,15.289,471,22.755,769,20.381,1483,19.311,1668,21.72,1669,21.72,1690,26.017,1691,21.72,1692,21.72,1849,26.237,1850,26.237,1851,26.237,1852,26.237,1853,26.237,1854,26.237]],["docTitle/docs/blueprints/0.1/track-and-trace/architecture",[0,3.362]],["docBody/docs/blueprints/0.1/track-and-trace/architecture",[0,3.018,4,5.967,17,6.355,48,5.932,61,6.82,101,12.336,214,18.394,993,18.943,1256,14.818,1469,20.833,1600,28.83,1668,30.798,1669,30.798,1694,16.842,1855,22.881,1856,22.881,1857,22.881,1858,22.881,1859,22.881,1860,22.881,1861,22.881,1862,22.881,1863,32.169,1864,22.881,1865,22.881,1866,22.881,1867,22.881,1868,22.881,1869,22.881,1870,22.881,1871,22.881,1872,22.881,1873,22.881,1874,22.881,1875,22.881,1876,22.881,1877,22.881,1878,22.881,1879,22.881,1880,22.881,1881,22.881,1882,22.881,1883,22.881,1884,22.881,1885,22.881,1886,22.881,1887,22.881,1888,22.881,1889,22.881,1890,22.881]],["docTitle/docs/blueprints/0.1/track-and-trace/deployment-and-testing",[0,3.362]],["docBody/docs/blueprints/0.1/track-and-trace/deployment-and-testing",[0,2.93,158,14.265,185,14.024,625,16.212,1746,25.81,1891,36.761,1892,43.791,1893,36.761,1894,32.946]],["docTitle/docs/iot/0.1/introduction/overview",[480,22.016,1685,24.358,1895,21.104]],["docBody/docs/iot/0.1/introduction/overview",[4,3.863,21,25.944,70,11.151,85,12.09,88,19.735,154,12.674,156,13.4,200,12.09,437,9.802,442,11.995,477,12.09,480,12.09,499,9.802,500,13.376,530,12.674,823,8.431,826,15.122,866,13.376,881,10.094,909,15.857,959,15.432,987,8.072,1032,10.412,1132,13.376,1195,10.412,1484,16.331,1491,11.589,1492,20.297,1499,15.432,1513,11.589,1560,10.094,1663,18.345,1675,21.571,1679,12.09,1685,24.528,1688,21.631,1711,12.248,1782,23.417,1894,15.432,1895,23.723,1896,14.255,1897,17.219,1898,26.129,1899,23.417,1900,15.432,1901,26.129,1902,17.219,1903,17.219,1904,14.255,1905,15.432,1906,17.219,1907,17.219,1908,17.219,1909,17.219,1910,26.129,1911,17.219,1912,17.219,1913,17.219,1914,17.219,1915,17.219,1916,17.219,1917,17.219,1918,15.432,1919,17.219,1920,17.219,1921,11.589,1922,14.255,1923,17.219,1924,17.219,1925,15.432,1926,17.219,1927,15.432,1928,15.432,1929,17.219,1930,17.219,1931,17.219,1932,17.219,1933,17.219,1934,17.219,1935,17.219,1936,15.432,1937,17.219,1938,17.219,1939,17.219,1940,17.219,1941,17.219,1942,11.589,1943,17.219,1944,17.219,1945,17.219,1946,13.376,1947,11.151,1948,8.431,1949,17.219,1950,11.589,1951,15.432]],["docTitle/docs/iot/0.1/concepts/flashing",[1952,30.551]],["docBody/docs/iot/0.1/concepts/flashing",[0,0.952,33,1.76,37,6.837,78,10.671,88,9.5,89,7.125,134,11.946,437,8.652,471,13.512,497,11.807,499,8.652,667,19.82,826,20.185,850,12.173,867,11.807,882,11.187,1032,9.191,1123,16.624,1469,9.843,1484,9.5,1491,10.229,1510,22.685,1513,10.229,1667,18.438,1675,8.652,1947,15.371,1948,22.146,1952,23.992,1953,15.743,1954,18.912,1955,22.685,1956,23.172,1957,15.199,1958,14.352,1959,7.988,1960,9.843,1961,21.494,1962,22.375,1963,15.199,1964,15.199,1965,12.583,1966,12.583,1967,15.199,1968,11.807,1969,29.203,1970,15.199,1971,13.622,1972,13.622,1973,15.199,1974,15.199,1975,15.199,1976,18.438,1977,13.622,1978,15.199,1979,15.199,1980,33.004,1981,13.622,1982,15.199,1983,10.671,1984,10.671,1985,15.199,1986,27.323,1987,9.191,1988,15.199,1989,11.807,1990,11.187,1991,15.199,1992,13.622,1993,15.371,1994,9.843,1995,13.622,1996,13.622,1997,13.622,1998,12.583,1999,11.187,2000,11.807,2001,10.229,2002,15.199,2003,11.807,2004,17.47,2005,15.199,2006,15.199,2007,23.735,2008,12.583,2009,15.199,2010,15.199,2011,15.199]],["docTitle/docs/iot/0.1/concepts/ipv6-mesh-network",[2012,39.502]],["docBody/docs/iot/0.1/concepts/ipv6-mesh-network",[0,0.515,29,6.803,37,3.697,88,11.821,89,6.689,155,10.471,204,7.9,205,3.852,304,22.915,421,11.085,442,10.37,482,4.678,490,13.437,499,10.766,583,7.365,608,8.629,659,6.803,696,5.531,826,15.998,854,5.77,857,11.814,869,5.77,881,26.125,882,24.587,892,16.95,967,7.365,987,6.689,998,6.384,1007,6.049,1033,6.803,1123,8.123,1299,4.969,1300,6.803,1391,7.365,1457,11.085,1469,5.322,1491,5.531,1500,7.365,1513,9.604,1656,7.365,1663,17.951,1675,18.146,1711,6.689,1781,7.365,1895,18.868,1922,11.814,1942,5.531,1946,11.085,1962,8.919,1999,6.049,2000,6.384,2008,6.803,2012,30.412,2013,18.913,2014,25.566,2015,25.948,2016,17.546,2017,20.243,2018,14.27,2019,14.27,2020,14.27,2021,11.814,2022,14.27,2023,12.789,2024,11.814,2025,14.27,2026,14.27,2027,21.167,2028,19.924,2029,33.404,2030,8.218,2031,17.208,2032,28.034,2033,8.218,2034,8.218,2035,8.218,2036,8.218,2037,18.868,2038,23.668,2039,14.27,2040,14.27,2041,8.218,2042,7.365,2043,6.803,2044,22.587,2045,14.27,2046,19.861,2047,14.27,2048,8.218,2049,14.27,2050,8.218,2051,8.218,2052,8.218,2053,25.125,2054,6.803,2055,8.218,2056,8.218,2057,8.218,2058,8.218,2059,8.218,2060,21.167,2061,8.218,2062,8.218,2063,25.568,2064,25.568,2065,8.218,2066,12.789,2067,8.218,2068,8.218,2069,8.218,2070,7.365,2071,8.218,2072,6.803,2073,8.218,2074,12.789,2075,8.218,2076,8.218,2077,7.365,2078,8.218,2079,17.546,2080,18.913,2081,25.568,2082,8.218,2083,8.218,2084,8.218,2085,8.218,2086,8.218,2087,8.218,2088,8.218,2089,8.218,2090,8.218,2091,4.678,2092,8.218,2093,14.27,2094,8.218,2095,8.218,2096,8.218,2097,8.218,2098,8.218,2099,8.218,2100,6.803]],["docTitle/docs/iot/0.1/how-to-guides/get-started-with-microcontrollers",[437,17.85,1195,18.961,1948,15.353]],["docBody/docs/iot/0.1/how-to-guides/get-started-with-microcontrollers",[0,1.801,4,2.193,17,2.387,33,2.697,37,3.866,48,2.228,68,3.335,73,4.407,81,4.758,88,9.271,89,9.174,92,6.326,95,5.038,109,6.034,134,3.516,148,6.676,168,6.326,200,6.034,202,12.231,247,4.758,251,7.43,253,6.034,437,8.444,442,14.952,471,8.444,482,4.892,490,4.517,499,8.444,501,12.28,503,6.326,530,10.918,608,5.197,667,4.758,823,4.208,825,6.676,826,16.948,850,16.703,987,4.029,1032,11.833,1153,6.326,1195,11.833,1199,6.676,1473,5.566,1484,16.427,1492,31.079,1651,13.171,1675,8.444,1685,6.676,1688,7.115,1711,12.321,1712,12.28,1895,5.784,1921,5.784,1942,17.69,1947,9.606,1948,19.589,1950,5.784,1951,7.702,1952,8.444,1953,10.55,1954,5.566,1955,6.676,1956,18.454,1959,13.813,1960,9.606,1961,10.918,1962,9.271,1968,6.676,1983,10.415,1987,11.833,1990,14.404,1993,5.566,1994,9.606,2000,11.523,2001,13.171,2003,18.09,2004,10.918,2016,6.676,2017,7.702,2028,9.271,2072,19.279,2079,6.676,2091,4.892,2100,12.28,2101,7.997,2102,8.594,2103,17.69,2104,7.115,2105,19.57,2106,26.283,2107,8.594,2108,8.594,2109,8.594,2110,8.594,2111,8.594,2112,8.594,2113,8.594,2114,14.833,2115,13.294,2116,8.594,2117,8.594,2118,8.594,2119,19.279,2120,7.702,2121,8.594,2122,7.702,2123,7.702,2124,8.594,2125,15.673,2126,8.594,2127,14.833,2128,9.984,2129,16.35,2130,7.702,2131,13.294,2132,12.28,2133,7.115,2134,6.676,2135,6.034,2136,7.702,2137,7.115,2138,7.115,2139,11.523,2140,7.115,2141,26.283,2142,20.871,2143,21.759,2144,19.57,2145,5.371,2146,15.202,2147,8.594,2148,6.034,2149,10.415,2150,8.594,2151,6.676,2152,7.702,2153,7.115,2154,6.676,2155,8.594,2156,7.115,2157,8.594,2158,14.833,2159,28.749,2160,32.568,2161,13.294,2162,8.594,2163,8.594,2164,8.594,2165,8.594,2166,8.594,2167,8.594,2168,7.115,2169,8.594,2170,8.594,2171,8.594,2172,7.702,2173,8.594,2174,6.326,2175,6.326,2176,10.415,2177,9.984,2178,7.702,2179,6.326,2180,5.371]],["docTitle/docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller",[823,12.711,987,12.169,1948,12.711,2103,17.473]],["docBody/docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller",[0,1.813,17,5.483,33,3.065,37,3.911,48,3.884,62,9.063,68,5.814,71,5.257,75,6.753,88,5.433,89,9.254,124,5.257,125,6.104,134,6.129,141,5.63,155,4.813,156,4.458,202,9.364,204,8.294,206,6.753,207,13.427,437,4.949,442,6.878,471,13.36,472,10.929,482,4.949,497,6.753,498,12.403,499,8.528,502,6.399,608,5.257,624,4.949,667,8.294,785,18.235,823,11.491,826,12.676,850,13.575,853,12.338,854,6.104,909,6.739,987,11.002,998,6.753,1013,11.027,1014,6.753,1025,7.197,1117,13.286,1123,8.528,1144,7.791,1195,5.257,1199,6.753,1299,5.257,1473,5.63,1476,7.197,1480,12.785,1481,6.753,1486,10.083,1510,11.638,1557,7.197,1560,5.096,1711,9.254,1713,5.096,1921,10.083,1942,5.851,1946,11.638,1947,9.702,1948,19.659,1950,5.851,1952,13.36,1953,12.653,1954,12.785,1955,6.753,1956,21.762,1958,14.191,1959,17.21,1961,11.027,1962,9.364,1968,6.753,1972,7.791,1976,15.335,1986,7.197,1987,21.5,1989,6.753,1990,11.027,1992,7.791,2001,5.851,2004,17.274,2091,4.949,2101,12.653,2103,10.083,2123,7.791,2125,17.814,2128,23.931,2129,25.769,2131,13.427,2134,6.753,2135,10.519,2139,11.638,2145,9.364,2149,13.86,2153,16.343,2154,6.753,2176,13.86,2177,10.083,2179,6.399,2180,12.338,2181,7.197,2182,4.949,2183,10.519,2184,12.403,2185,19.741,2186,17.814,2187,7.791,2188,8.693,2189,11.638,2190,7.791,2191,21.296,2192,11.638,2193,8.693,2194,7.791,2195,8.693,2196,8.693,2197,8.693,2198,7.791,2199,6.399,2200,8.693,2201,6.399,2202,7.791,2203,6.753,2204,8.693,2205,6.399,2206,14.981,2207,8.693,2208,8.693,2209,7.197,2210,8.693,2211,7.197,2212,10.519,2213,13.427,2214,13.427,2215,7.197,2216,7.791,2217,9.364,2218,11.638,2219,9.702,2220,11.638,2221,7.791,2222,7.791,2223,6.753,2224,6.753,2225,7.197,2226,7.197,2227,8.693,2228,5.851,2229,6.399,2230,5.851]],["docTitle/docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain",[785,13.314,2191,19.108,2192,20.167,2223,20.167]],["docBody/docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain",[71,15.755,134,10.659,200,18.293,204,14.425,421,20.24,499,14.832,570,21.57,667,14.425,785,13.362,1086,22.674,1117,17.536,1120,25.895,1510,20.24,1679,18.293,1948,12.757,1976,20.24,1984,18.293,2191,35.121,2192,35.655,2205,31.393,2211,21.57,2217,21.989,2219,22.783,2223,20.24,2231,31.53,2232,26.055,2233,26.055,2234,26.055,2235,26.055,2236,26.055,2237,26.055,2238,26.055,2239,26.055]],["docTitle/docs/iot/0.1/how-to-guides/setup-sbc",[823,10.845,987,10.383,1032,13.393,1959,11.641,1960,14.344]],["docBody/docs/iot/0.1/how-to-guides/setup-sbc",[0,1.661,4,0.771,17,1.449,33,2.18,37,8.47,48,1.352,61,1.555,62,7.432,64,3.663,68,2.024,70,3.379,71,5.755,75,4.053,79,17.976,81,2.888,85,3.663,88,3.261,89,8.826,97,3.058,125,9.213,141,3.379,168,7.005,202,3.261,204,7.265,205,16.002,251,6.573,262,7.692,437,9.216,442,16.343,497,4.053,498,4.319,501,4.319,502,9.659,506,4.319,530,9.659,667,7.265,676,4.319,696,20.455,712,8.529,785,4.881,823,14.31,825,4.053,826,14.556,850,8.303,853,18.267,869,6.682,881,21.941,890,3.155,927,22.339,987,11.684,998,4.053,1013,3.84,1032,9.789,1061,3.663,1079,4.676,1082,3.663,1107,15.588,1114,4.319,1117,8.832,1123,2.97,1195,3.155,1299,5.755,1465,4.676,1467,16.875,1469,6.163,1476,4.319,1480,13.681,1481,4.053,1483,3.84,1484,11.768,1486,8.832,1488,4.319,1491,19.671,1538,6.405,1557,4.319,1651,3.511,1675,5.418,1717,4.676,1895,6.405,1904,4.319,1905,8.529,1918,4.676,1925,4.676,1928,4.676,1946,7.393,1947,12.194,1952,5.418,1953,11.389,1954,3.379,1955,4.053,1958,3.155,1959,11.103,1960,12.194,1961,9.659,1962,14.464,1965,13.402,1966,13.402,1971,4.676,1981,4.676,1983,29.187,1984,3.663,1986,4.319,1987,16.895,1989,10.194,1993,18.095,1994,3.379,1998,4.319,2014,11.916,2016,4.053,2021,7.879,2038,11.768,2043,4.319,2060,7.879,2077,8.529,2091,5.418,2101,7.074,2125,3.511,2128,17.846,2129,19.618,2132,7.879,2133,4.319,2137,4.319,2145,8.202,2148,14.832,2151,4.053,2154,7.393,2161,4.676,2168,7.879,2177,3.511,2179,3.84,2180,5.948,2182,2.97,2183,3.663,2186,6.405,2190,4.676,2198,14.509,2199,3.84,2209,4.319,2211,4.319,2212,11.366,2213,8.529,2214,8.529,2215,4.319,2216,4.676,2217,13.203,2218,7.393,2219,12.194,2220,7.393,2228,10.896,2230,3.511,2240,5.217,2241,5.217,2242,5.217,2243,5.217,2244,5.217,2245,19.362,2246,5.217,2247,4.676,2248,18.829,2249,5.217,2250,5.217,2251,4.319,2252,5.217,2253,4.676,2254,5.217,2255,5.217,2256,5.217,2257,18.933,2258,24.925,2259,9.517,2260,9.517,2261,9.517,2262,9.517,2263,9.517,2264,4.676,2265,9.517,2266,9.517,2267,9.517,2268,7.879,2269,5.217,2270,13.122,2271,11.761,2272,5.217,2273,4.319,2274,5.217,2275,5.217,2276,13.122,2277,13.122,2278,5.217,2279,4.676,2280,4.319,2281,4.676,2282,5.217,2283,13.122,2284,18.829,2285,16.189,2286,9.517,2287,5.217,2288,5.217,2289,5.217,2290,5.217,2291,16.189,2292,4.676,2293,9.517,2294,5.217,2295,9.517,2296,5.217,2297,5.217,2298,5.217,2299,5.217,2300,11.761,2301,5.217,2302,5.217,2303,8.529,2304,5.217,2305,5.217,2306,5.217,2307,5.217,2308,5.217,2309,5.217,2310,5.217,2311,4.676]],["docTitle/docs/iot/0.1/how-to-guides/install-go-on-sbc",[106,29.712]],["docBody/docs/iot/0.1/how-to-guides/install-go-on-sbc",[0,3.043,62,15.795,106,27.706,152,17.234,2312,34.405,2313,34.405,2314,34.405,2315,34.405,2316,34.405]],["docTitle/docs/iot/0.1/how-to-guides/read-sensor-data",[909,11.678,1711,12.169,1948,12.711,1950,17.473]],["docBody/docs/iot/0.1/how-to-guides/read-sensor-data",[0,2.289,17,3.862,33,3.191,37,6.255,48,3.605,70,9.005,89,10.373,134,9.052,204,15.258,262,16.156,442,12.653,482,7.916,499,12.597,503,10.235,823,10.834,826,13.199,853,13.83,854,15.536,909,17.233,969,7.916,987,10.373,1086,7.916,1117,9.359,1123,20.794,1153,16.287,1299,8.408,1473,9.005,1480,14.33,1486,9.359,1675,7.916,1711,21.034,1713,8.151,1921,9.359,1942,9.359,1947,9.005,1948,17.885,1950,27.576,1952,15.689,1953,7.496,1954,14.33,1959,14.485,1961,10.235,1962,8.691,1976,26.642,1984,9.763,1987,8.408,1990,10.235,1996,12.462,2015,10.802,2066,12.462,2101,7.496,2103,14.893,2128,9.359,2129,9.763,2174,16.287,2175,16.287,2176,15.536,2177,9.359,2178,32.737,2180,17.226,2181,11.512,2182,7.916,2186,18.549,2203,10.802,2205,16.287,2212,15.536,2217,8.691,2218,10.802,2219,9.005,2220,10.802,2225,11.512,2226,11.512,2230,9.359,2317,13.905,2318,13.905,2319,13.905,2320,13.905,2321,27.56,2322,13.905,2323,13.905,2324,12.462,2325,13.905,2326,13.905,2327,13.905,2328,31.417,2329,10.235,2330,13.905,2331,13.905,2332,12.462,2333,13.905]],["docTitle/docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router",[823,12.711,987,12.169,2037,17.473,2038,16.226]],["docBody/docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router",[0,0.789,17,5.677,33,1.459,37,9.196,48,3.266,62,17.603,78,8.846,80,18.111,89,9.583,96,7.875,156,6.462,166,7.173,168,9.274,202,7.875,247,6.976,251,6.311,442,5.784,482,11.637,499,7.173,502,9.274,503,9.274,608,17.947,676,10.431,785,16.734,823,15.975,826,12.354,850,10.484,854,8.846,881,11.983,890,12.361,906,7.173,909,11.604,965,9.788,969,7.173,987,15.295,1007,9.274,1032,7.619,1082,8.846,1086,7.173,1093,10.431,1120,9.274,1123,7.173,1199,9.788,1256,8.16,1473,8.16,1478,15.88,1480,8.16,1488,10.431,1538,8.48,1560,7.386,1651,8.48,1675,19.892,1711,15.295,1713,17.398,1895,8.48,1922,10.431,1947,13.239,1953,16.001,1958,7.619,1959,6.622,1960,8.16,1962,12.777,1987,7.619,2012,21.846,2028,20.393,2031,13.759,2037,21.96,2038,20.393,2054,10.431,2091,11.637,2101,11.021,2104,10.431,2125,8.48,2140,10.431,2145,7.875,2172,11.292,2176,8.846,2177,8.48,2180,21.84,2182,7.173,2183,8.846,2186,17.361,2199,18.986,2217,7.875,2219,8.16,2225,10.431,2228,8.48,2229,9.274,2253,11.292,2280,10.431,2311,11.292,2329,9.274,2332,18.321,2334,11.292,2335,34.363,2336,12.6,2337,12.6,2338,20.442,2339,12.6,2340,12.6,2341,12.6,2342,12.6,2343,12.6,2344,12.6,2345,12.6,2346,12.6,2347,11.292,2348,12.6,2349,11.292,2350,12.6,2351,12.6,2352,12.6,2353,11.292,2354,12.6,2355,11.292,2356,20.442,2357,12.6,2358,11.292]],["docTitle/docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example",[823,12.711,987,12.169,1711,12.169,1713,15.218]],["docBody/docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example",[0,1.788,33,3.304,37,12.838,62,10.595,89,10.819,156,7.521,166,13.138,202,9.166,204,12.777,437,8.348,442,10.595,472,8.119,499,8.348,502,10.794,503,10.794,506,12.141,667,8.119,785,7.521,823,17.232,826,7.023,850,11.837,853,9.166,854,16.204,881,8.597,890,8.868,909,14.559,965,11.392,987,16.498,1025,12.141,1061,10.296,1082,10.296,1086,8.348,1093,12.141,1117,9.87,1123,16.245,1153,16.987,1299,8.868,1449,19.107,1473,9.497,1478,17.928,1480,9.497,1486,9.87,1558,13.143,1560,8.597,1675,8.348,1711,17.52,1713,20.632,1895,9.87,1921,19.207,1947,14.946,1948,17.232,1952,8.348,1953,7.906,1954,9.497,1958,8.868,1959,14.998,1977,13.143,1987,8.868,1990,10.794,2000,11.392,2021,12.141,2027,12.141,2028,9.166,2031,9.87,2037,15.533,2038,14.425,2054,12.141,2091,8.348,2104,12.141,2119,19.107,2128,9.87,2129,10.296,2145,9.166,2174,16.987,2175,16.987,2176,16.204,2177,9.87,2179,16.987,2180,9.166,2182,8.348,2183,10.296,2186,23.688,2203,22.168,2205,10.794,2217,9.166,2218,11.392,2219,9.497,2220,11.392,2224,11.392,2228,9.87,2229,10.794,2324,13.143,2329,10.794,2358,13.143,2359,14.665,2360,14.665,2361,14.665,2362,14.665,2363,13.143,2364,14.665,2365,14.665,2366,14.665,2367,14.665,2368,14.665,2369,14.665,2370,14.665]],["docTitle/docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client",[166,14.778,909,11.678,1711,12.169,1713,15.218]],["docBody/docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client",[0,1.492,33,2.757,37,6.865,89,11.162,106,8.449,156,7.827,166,18.829,205,13.725,262,8.946,437,8.687,442,10.931,499,8.687,594,19.712,667,16.209,785,7.827,824,17.526,850,7.827,853,18.299,881,13.958,882,11.233,906,8.687,909,13.171,1032,9.228,1086,8.687,1123,13.555,1132,18.496,1473,9.883,1480,9.883,1481,11.855,1484,14.882,1560,8.946,1679,10.715,1711,19.781,1713,23.27,1896,12.634,1904,12.634,1921,10.271,1948,16.195,1952,8.687,1953,12.837,1954,9.883,1958,20.001,1959,8.02,1960,9.883,1983,25.183,1993,9.883,1994,18.961,1999,11.233,2012,11.233,2014,21.55,2028,9.538,2031,10.271,2043,12.634,2053,21.34,2070,13.677,2091,8.687,2101,12.837,2135,10.715,2145,9.538,2148,26.684,2149,10.715,2180,9.538,2182,8.687,2191,11.233,2212,20.557,2215,12.634,2217,9.538,2228,10.271,2229,11.233,2230,26.717,2264,13.677,2371,15.261,2372,23.811,2373,33.076,2374,15.261,2375,15.261,2376,23.811,2377,23.811,2378,15.261,2379,15.261,2380,12.634,2381,19.712,2382,15.261,2383,15.261]],["docTitle/docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network",[823,10.845,881,12.984,987,10.383,2028,13.844,2031,14.907]],["docBody/docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network",[0,1.206,21,14.167,33,2.229,62,8.836,76,17.25,89,9.023,156,9.871,166,10.957,205,18.627,262,16.648,442,13.038,490,10.116,659,23.511,823,16.524,826,16.163,850,9.871,853,12.03,881,23.294,909,12.776,965,14.952,987,15.82,1061,13.514,1082,13.514,1123,10.957,1473,12.465,1483,14.167,1560,11.283,1675,10.957,1711,20.16,1713,24.375,1936,17.25,1948,13.905,1952,10.957,1958,11.639,1994,12.465,1999,14.167,2012,14.167,2028,23.287,2031,25.076,2037,25.076,2038,23.287,2079,14.952,2101,10.377,2145,12.03,2156,15.935,2180,12.03,2182,10.957,2183,13.514,2203,14.952,2212,13.514,2217,12.03,2219,12.465,2228,12.954,2229,14.167,2300,25.453,2363,17.25,2380,15.935,2384,19.248,2385,19.248,2386,19.248,2387,19.248,2388,19.248]],["docTitle/docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app",[156,13.314,909,11.678,1560,15.218,1711,12.169]],["docBody/docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app",[0,1.027,33,1.898,65,9.912,71,9.912,81,9.075,89,11.797,155,9.075,156,17.623,166,9.332,205,7.684,214,17.623,262,14.752,361,11.033,379,12.066,437,9.332,483,12.734,484,11.509,490,8.615,667,19.024,785,8.407,823,8.026,826,12.053,853,10.246,881,9.609,906,14.326,909,16.676,917,11.509,987,7.684,1032,9.912,1086,14.326,1123,23.193,1132,12.734,1486,16.938,1538,11.033,1560,17.956,1636,13.571,1679,17.669,1711,18.342,1713,14.752,1896,13.571,1921,23.127,1948,14.998,1950,11.033,1952,9.332,1953,13.567,1954,16.298,1958,9.912,1959,8.615,1960,10.616,1983,21.506,1994,16.298,1998,13.571,2024,20.834,2028,10.246,2031,11.033,2037,11.033,2038,10.246,2091,9.332,2101,13.567,2135,17.669,2149,17.669,2180,10.246,2182,9.332,2212,17.669,2230,11.033,2279,14.691,2380,25.358,2381,20.834,2389,16.393,2390,16.393,2391,25.166,2392,25.166,2393,16.393,2394,16.393,2395,25.166,2396,16.393,2397,25.166,2398,16.393,2399,16.393,2400,16.393]],["docTitle/docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280",[253,15.551,442,10.168,1711,10.383,2174,16.303,2175,16.303]],["docBody/docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280",[80,21.395,89,9.939,205,9.939,253,25.045,442,18.965,477,14.887,987,9.939,1123,12.07,1195,12.821,1484,19.046,1675,12.07,1711,19.364,1948,14.92,1953,11.431,1959,21.711,1993,23.101,2001,27.803,2008,17.553,2015,16.471,2016,16.471,2024,25.228,2072,17.553,2074,19.002,2101,11.431,2146,30.294,2152,19.002,2153,17.553,2174,30.406,2175,32.615,2186,20.509,2268,17.553,2347,19.002,2401,21.203,2402,21.203,2403,21.203,2404,30.473,2405,21.203,2406,30.473,2407,21.203,2408,21.203,2409,21.203,2410,19.002,2411,17.553,2412,19.002,2413,19.002,2414,21.203,2415,21.203]],["docTitle/docs/iot/0.1/how-to-guides/connect-programmer",[442,14.396,1956,22.016,2189,24.358]],["docBody/docs/iot/0.1/how-to-guides/connect-programmer",[0,1.069,17,4.739,33,1.976,46,21.482,48,4.423,62,7.833,68,6.621,85,11.98,89,7.998,202,21.928,442,18.248,471,26.408,826,15.038,850,8.751,1195,15.691,1484,10.664,1491,11.484,1492,13.254,1942,21.133,1948,18.479,1952,14.771,1953,18.914,1956,29.895,1958,18.986,1959,18.439,1987,18.986,1989,13.254,1997,28.14,2001,17.464,2004,34.146,2079,20.157,2091,9.713,2101,9.199,2103,21.133,2115,15.292,2122,15.292,2125,17.464,2132,14.126,2133,14.126,2134,30.877,2135,18.219,2136,15.292,2137,14.126,2143,21.482,2148,11.98,2181,14.126,2182,9.713,2183,11.98,2184,25.994,2189,20.157,2416,17.063,2417,15.292,2418,17.063]],["docTitle/docs/iot/0.1/how-to-guides/connect-to-serial-interface",[442,11.918,1993,16.812,1994,16.812,2138,21.492]],["docBody/docs/iot/0.1/how-to-guides/connect-to-serial-interface",[0,1.637,33,3.026,85,12.09,88,10.762,89,8.072,106,9.533,148,13.376,442,17.396,482,9.802,826,16.881,850,8.831,909,7.746,1134,12.674,1195,15.8,1513,11.589,1651,11.589,1948,20.907,1950,11.589,1953,19.003,1958,19.093,1959,19.915,1987,27.777,1993,11.151,1994,22.827,2001,11.589,2003,13.376,2023,15.432,2091,9.802,2100,14.255,2101,14.086,2119,26.14,2120,23.417,2125,11.589,2128,30.007,2129,28.006,2130,15.432,2138,21.631,2139,13.376,2140,14.255,2142,15.432,2143,21.631,2148,22.169,2149,12.09,2154,24.528,2182,9.802,2189,13.376,2199,12.674,2251,14.255,2329,12.674,2334,23.417,2417,23.417,2419,15.432,2420,17.219,2421,17.219,2422,17.219,2423,17.219,2424,17.219,2425,17.219,2426,17.219,2427,17.219,2428,17.219,2429,17.219]],["docTitle/docs/iot/0.1/how-to-guides/connect-a-I2C-sensor",[442,14.396,1711,14.699,2146,24.358]],["docBody/docs/iot/0.1/how-to-guides/connect-a-I2C-sensor",[0,1.561,33,2.885,78,11.361,80,17.494,89,7.585,92,11.91,168,11.91,205,17.275,442,18.618,499,17.296,677,14.502,826,16.345,850,17.503,882,25.12,909,13.668,987,7.585,1032,18.372,1195,9.784,1330,14.502,1469,10.479,1484,15.573,1491,10.89,1513,10.89,1619,14.502,1675,19.428,1711,20.558,1899,22.33,1927,14.502,1942,10.89,1948,19.856,1953,18.399,1959,8.504,1968,12.569,1995,14.502,1999,11.91,2001,22.969,2003,12.569,2091,9.211,2101,13.432,2103,20.449,2125,10.89,2139,12.569,2145,10.113,2146,34.068,2149,11.361,2151,12.569,2156,20.627,2176,11.361,2177,10.89,2182,9.211,2187,14.502,2209,13.396,2268,25.153,2292,14.502,2411,13.396,2412,14.502,2413,22.33,2430,16.181,2431,16.181,2432,24.916,2433,16.181,2434,16.181,2435,16.181,2436,16.181,2437,16.181,2438,16.181,2439,16.181,2440,16.181,2441,16.181,2442,16.181,2443,16.181]],["docTitle/docs/iot/0.1/references/troubleshooting",[2224,41.69]],["docBody/docs/iot/0.1/references/troubleshooting",[65,9.38,70,15.618,71,9.38,89,16.943,155,13.351,200,10.892,204,8.588,421,18.734,471,13.729,570,12.843,608,20.178,785,7.956,823,11.808,824,11.418,826,14.169,850,7.956,987,11.305,1013,17.751,1014,18.734,1082,16.932,1086,13.729,1117,16.231,1120,17.751,1164,13.903,1241,12.843,1449,19.965,1469,19.16,1478,18.734,1480,10.046,1486,10.441,1663,10.892,1679,10.892,1948,11.808,1952,18.996,1956,10.892,1962,9.696,1984,10.892,2004,17.751,2014,11.418,2015,12.051,2027,12.843,2028,9.696,2037,10.441,2038,9.696,2042,13.903,2101,8.363,2103,10.441,2134,18.734,2135,20.772,2145,9.696,2179,21.777,2184,12.843,2186,22.459,2191,29.396,2192,18.734,2202,13.903,2205,17.751,2217,15.073,2219,15.618,2221,26.516,2222,21.614,2223,18.734,2224,12.051,2228,10.441,2231,21.614,2281,21.614,2303,13.903,2349,13.903,2353,26.516,2381,12.843,2444,12.843,2445,15.513,2446,15.513,2447,15.513,2448,24.116,2449,21.614,2450,24.116,2451,24.116,2452,15.513,2453,15.513,2454,15.513,2455,15.513,2456,15.513,2457,15.513,2458,15.513,2459,15.513,2460,24.116,2461,15.513,2462,15.513,2463,15.513,2464,15.513]],["docTitle/docs/iota-go/0.1/core/introduction/overview",[106,29.712]],["docBody/docs/iota-go/0.1/core/introduction/overview",[0,3.191,4,3.446,17,6.473,33,2.699,37,10.485,59,6.752,61,6.947,106,20.802,109,16.364,118,13.663,276,22.88,482,13.268,487,20.888,2465,15.687,2466,23.307,2467,20.888,2468,20.888,2469,20.888,2470,20.888,2471,20.888,2472,20.888,2473,20.888,2474,23.307,2475,23.307,2476,23.307,2477,23.307,2478,23.307,2479,23.307,2480,23.307,2481,23.307,2482,23.307,2483,23.307,2484,36.465,2485,29.205,2486,20.888,2487,20.888,2488,20.888,2489,20.888,2490,20.888,2491,20.888,2492,29.205,2493,20.888,2494,20.888]],["docTitle/docs/iota-go/0.1/account-module/introduction/overview",[0,3.362]],["docBody/docs/iota-go/0.1/account-module/introduction/overview",[0,3.212,4,6.183,17,6.901,33,2.877,37,11.178,59,7.198,61,7.406,106,18.859,109,17.446,118,14.566,482,14.145,2465,16.724,2467,22.27,2468,22.27,2469,22.27,2470,22.27,2471,22.27,2472,22.27,2473,22.27,2484,37.48,2485,30.529,2486,22.27,2487,22.27,2488,22.27,2489,22.27,2490,22.27,2491,22.27,2492,30.529,2493,22.27,2494,22.27,2495,20.571,2496,24.849]],["docTitle/docs/iota-go/0.1/account-module/how-to-guides/create-account",[0,3.362]],["docBody/docs/iota-go/0.1/account-module/how-to-guides/create-account",[0,3.255,33,4.455,48,6.316,55,16.455,59,9.735,61,7.262,132,10.745,133,10.961,134,9.967,397,18.927,692,13.136,1618,17.107,2497,20.171,2498,20.171,2499,24.365,2500,18.606,2501,20.171,2502,24.365,2503,24.365,2504,24.365,2505,24.365,2506,24.365,2507,24.365,2508,24.365,2509,24.365,2510,33.607,2511,21.837,2512,24.365,2513,24.365,2514,24.365]],["docTitle/docs/iota-go/0.1/account-module/how-to-guides/listen-to-events",[0,3.362]],["docBody/docs/iota-go/0.1/account-module/how-to-guides/listen-to-events",[0,3.241,33,4.021,692,18.719,2515,34.723,2516,28.746,2517,34.723,2518,34.723]],["docTitle/docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda",[0,3.362]],["docBody/docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda",[0,3.162,33,5.304,61,7.712,135,12.961,1469,16.757,2500,26.732,2519,21.421,2520,21.421,2521,21.421,2522,21.421,2523,21.421,2524,21.421,2525,21.421,2526,21.421,2527,23.19,2528,21.421,2529,21.421,2530,25.875,2531,25.875,2532,25.875,2533,25.875,2534,25.875,2535,21.421,2536,21.421,2537,21.421,2538,21.421,2539,25.875,2540,23.19]],["docTitle/docs/iota-go/0.1/account-module/how-to-guides/create-plugin",[0,3.362]],["docBody/docs/iota-go/0.1/account-module/how-to-guides/create-plugin",[0,3.233,33,4.663,106,17.747,203,20.76,204,17.747,692,17.282,1538,21.575,2541,32.057,2542,32.057,2543,32.057,2544,32.057,2545,32.057,2546,32.057]],["docTitle/docs/iota-go/0.1/account-module/how-to-guides/import-seed-state",[0,3.362]],["docBody/docs/iota-go/0.1/account-module/how-to-guides/import-seed-state",[0,3.238,33,3.984,55,16.845,61,10.255,2547,34.405,2548,34.405,2549,34.405,2550,34.405]],["docTitle/docs/iota-go/0.1/account-module/references/cda-advice",[2500,29.712]],["docBody/docs/iota-go/0.1/account-module/references/cda-advice",[0,2.859,55,17.001,2500,23.425,2551,28.746,2552,28.746,2553,28.746,2554,35.029,2555,28.746,2556,28.746,2557,28.746,2558,28.746,2559,28.746,2560,28.746,2561,28.746]],["docTitle/docs/iota-java/0.1/core/introduction/overview",[102,32.452]],["docBody/docs/iota-java/0.1/core/introduction/overview",[0,3.037,4,5.05,17,5.457,33,2.275,59,9.895,61,5.857,81,10.879,102,26.85,103,23.872,118,11.519,400,17.611,409,16.268,486,17.611,608,11.882,625,8.666,729,21.225,805,12.726,1180,16.268,1457,15.265,1538,13.225,2230,13.225,2273,16.268,2444,23.872,2465,13.225,2562,17.611,2563,17.611,2564,17.611,2565,17.611,2566,17.611,2567,17.611,2568,17.611,2569,17.611,2570,17.611,2571,17.611,2572,17.611,2573,17.611,2574,17.611,2575,17.611,2576,25.843,2577,17.611,2578,17.611,2579,17.611,2580,17.611,2581,17.611,2582,17.611,2583,17.611,2584,35.917,2585,17.611,2586,17.611,2587,17.611,2588,19.65,2589,19.65,2590,19.65,2591,17.611,2592,17.611,2593,28.836,2594,19.65,2595,19.65,2596,19.65,2597,19.65,2598,19.65,2599,19.65,2600,19.65,2601,19.65,2602,19.65,2603,19.65,2604,19.65]],["docTitle/docs/iota-java/0.1/account-module/introduction/overview",[0,3.362]],["docBody/docs/iota-java/0.1/account-module/introduction/overview",[0,3.097,4,6.383,17,5.956,33,2.483,59,8.899,61,6.392,81,11.872,102,26.885,103,25.434,118,12.571,608,12.967,625,9.458,729,22.613,805,13.888,1180,17.753,1457,16.659,1538,14.433,2230,14.433,2273,17.753,2444,25.434,2465,14.433,2495,17.753,2562,19.219,2563,19.219,2564,19.219,2565,19.219,2566,19.219,2567,19.219,2568,19.219,2569,19.219,2570,19.219,2571,19.219,2572,19.219,2573,19.219,2574,19.219,2575,19.219,2576,27.534,2577,19.219,2578,19.219,2579,19.219,2580,19.219,2581,19.219,2582,19.219,2583,19.219,2584,37.186,2585,19.219,2586,19.219,2587,19.219,2591,19.219,2592,19.219]],["docTitle/docs/iota-java/0.1/account-module/how-to-guides/create-account",[0,3.362]],["docBody/docs/iota-java/0.1/account-module/how-to-guides/create-account",[0,3.262,33,4.074,48,6.754,55,17.225,59,7.547,61,7.766,81,14.425,102,15.755,132,11.491,133,11.721,134,10.659,397,20.24,500,20.24,692,14.046,2497,21.57,2498,21.57,2500,22.052,2501,21.57,2605,23.351,2606,26.055,2607,26.055,2608,26.055,2609,26.055,2610,26.055]],["docTitle/docs/iota-java/0.1/account-module/how-to-guides/listen-to-events",[0,3.362]],["docBody/docs/iota-java/0.1/account-module/how-to-guides/listen-to-events",[0,3.244,692,19.438,2516,29.849,2611,36.056]],["docTitle/docs/iota-java/0.1/account-module/how-to-guides/create-and-manage-cda",[0,3.362]],["docBody/docs/iota-java/0.1/account-module/how-to-guides/create-and-manage-cda",[0,3.078,33,5.296,61,8.407,135,14.129,2500,27.664,2519,23.351,2520,23.351,2521,23.351,2522,23.351,2523,23.351,2524,23.351,2525,23.351,2526,23.351,2527,25.279,2528,23.351,2529,23.351,2535,23.351,2536,23.351,2537,23.351,2538,23.351,2540,25.279]],["docTitle/docs/iota-java/0.1/account-module/how-to-guides/create-plugin",[0,3.362]],["docBody/docs/iota-java/0.1/account-module/how-to-guides/create-plugin",[0,3.155,17,9.383,48,8.759,692,18.214,1008,40.41,2355,30.28,2612,33.786,2613,45.089,2614,33.786,2615,33.786]],["docTitle/docs/iota-java/0.1/account-module/references/cda-advice",[2500,29.712]],["docBody/docs/iota-java/0.1/account-module/references/cda-advice",[0,2.859,55,17.001,2500,23.425,2551,28.746,2552,28.746,2553,28.746,2554,35.029,2555,28.746,2556,28.746,2557,28.746,2558,28.746,2559,28.746,2560,28.746,2561,28.746]],["docTitle/docs/iota-js/0.1/core/introduction/overview",[101,28.933]],["docBody/docs/iota-js/0.1/core/introduction/overview",[0,2.963,4,2.413,59,7.266,61,4.865,89,7.651,94,12.445,97,9.568,99,18.462,100,18.472,101,13.522,118,9.568,135,8.175,202,25.425,361,10.985,380,13.512,406,18.462,481,14.628,504,14.628,561,23.73,581,17.61,625,7.198,667,13.886,785,8.371,826,7.817,850,8.371,1241,13.512,1300,20.765,1496,20.765,1578,13.512,1651,10.985,2199,12.013,2201,12.013,2465,10.985,2616,14.628,2617,13.512,2618,16.321,2619,16.321,2620,49.715,2621,16.321,2622,34.283,2623,16.321,2624,16.321,2625,16.321,2626,16.321,2627,16.321,2628,16.321,2629,16.321,2630,16.321,2631,16.321,2632,16.321,2633,16.321,2634,16.321,2635,16.321,2636,16.321,2637,16.321,2638,16.321,2639,16.321,2640,16.321,2641,16.321,2642,16.321,2643,16.321,2644,16.321,2645,16.321,2646,16.321,2647,16.321,2648,16.321,2649,16.321,2650,16.321,2651,16.321,2652,16.321,2653,16.321,2654,16.321,2655,13.512,2656,14.628,2657,14.628,2658,13.512]],["docTitle/docs/iota-js/0.1/core/how-to-guides/create-custom-methods",[0,3.362]],["docBody/docs/iota-js/0.1/core/how-to-guides/create-custom-methods",[0,2.499,59,11.553,70,25.829,805,25.829]],["docTitle/docs/iota-js/0.1/account-module/introduction/overview",[0,3.362]],["docBody/docs/iota-js/0.1/account-module/introduction/overview",[0,3.215,4,5.93,59,10.287,61,7.875,94,15.571,97,15.488,99,26.139,100,24.257,101,19.146,118,15.488,625,11.652,667,19.661,1578,21.873,1651,17.782,2201,19.447,2465,17.782,2495,21.873,2616,23.679,2617,21.873,2655,21.873,2656,23.679,2657,23.679,2658,21.873]],["docTitle/docs/iota-js/0.1/account-module/how-to-guides/create-account",[0,3.362]],["docBody/docs/iota-js/0.1/account-module/how-to-guides/create-account",[0,3.248,33,3.103,48,9.294,59,7.763,61,10.686,94,9.728,130,14.447,131,16.204,132,11.818,133,12.055,134,10.963,397,20.817,692,14.447,2251,22.185,2497,22.185,2498,22.185,2500,19.849,2501,22.185,2511,24.017,2605,24.017,2659,26.798,2660,26.798,2661,26.798,2662,26.798,2663,26.798]],["docTitle/docs/iota-js/0.1/account-module/how-to-guides/listen-to-events",[0,3.362]],["docBody/docs/iota-js/0.1/account-module/how-to-guides/listen-to-events",[0,3.249,33,3.984,94,12.49,692,18.548,2500,19.047,2516,28.483,2664,34.405]],["docTitle/docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda",[0,3.362]],["docBody/docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda",[0,3.137,33,5.392,61,8.162,135,13.717,2500,26.714,2519,22.67,2520,22.67,2521,22.67,2522,22.67,2523,22.67,2524,22.67,2525,22.67,2526,22.67,2528,22.67,2529,22.67,2535,22.67,2536,22.67,2537,22.67,2538,22.67,2665,27.384,2666,27.384,2667,27.384,2668,27.384,2669,27.384]],["docTitle/docs/iota-js/0.1/account-module/references/cda-advice",[2500,29.712]],["docBody/docs/iota-js/0.1/account-module/references/cda-advice",[0,2.859,55,17.001,2500,23.425,2551,28.746,2552,28.746,2553,28.746,2554,35.029,2555,28.746,2556,28.746,2557,28.746,2558,28.746,2559,28.746,2560,28.746,2561,28.746]],["docTitle/docs/iota-js/0.1/mam/introduction/overview",[0,3.362]],["docBody/docs/iota-js/0.1/mam/introduction/overview",[0,3.222,4,3.533,59,9.606,61,7.124,94,14.932,97,14.01,99,24.409,100,20.053,101,12.885,118,14.01,155,13.232,158,9.274,214,18.691,483,18.566,484,16.781,485,21.42,1560,14.01,2201,17.592,2465,16.086,2617,19.786,2655,19.786,2670,23.9,2671,23.9,2672,23.9,2673,23.9,2674,29.721,2675,21.42,2676,21.42,2677,21.42,2678,21.42,2679,21.42,2680,21.42,2681,21.42]],["docTitle/docs/iota-js/0.1/mam/concepts/channels",[214,23.214]],["docBody/docs/iota-js/0.1/mam/concepts/channels",[0,3.22,214,14.747,2682,34.093,2683,34.093,2684,34.093,2685,34.093,2686,34.093,2687,45.27]],["docTitle/docs/iota-js/0.1/mam/how-to-guides/create-public-channel",[0,3.362]],["docBody/docs/iota-js/0.1/mam/how-to-guides/create-public-channel",[0,3.135,33,3.984,141,22.281,152,17.234,158,13.351,214,19.661,2688,30.834,2689,30.834,2690,34.405,2691,30.834,2692,30.834]],["docTitle/docs/iota-js/0.1/mam/how-to-guides/create-restricted-channel",[0,3.362]],["docBody/docs/iota-js/0.1/mam/how-to-guides/create-restricted-channel",[0,3.135,33,3.984,141,22.281,152,17.234,158,13.351,214,19.661,2688,30.834,2689,30.834,2691,30.834,2692,30.834,2693,34.405]],["docTitle/docs/iota-js/0.1/mam/how-to-guides/create-mam-webpage",[158,20.826]],["docBody/docs/iota-js/0.1/mam/how-to-guides/create-mam-webpage",[0,2.326,158,18.226,2694,37.124,2695,37.124,2696,37.124,2697,37.124,2698,37.124,2699,37.124,2700,37.124]],["docTitle/docs/iota-js/0.1/mam/references/api-reference",[2701,48.098]],["docBody/docs/iota-js/0.1/mam/references/api-reference",[0,3.181,4,5.011,63,11.758,70,10.345,214,10.671,270,19.164,845,39.168,949,32.835,1483,32.168,1560,9.364,2674,14.317,2675,14.317,2676,14.317,2677,14.317,2678,14.317,2679,14.317,2680,14.317,2681,14.317,2701,14.317,2702,15.974,2703,15.974,2704,15.974,2705,15.974,2706,15.974,2707,15.974,2708,15.974,2709,15.974,2710,30.14,2711,15.974,2712,38.724,2713,30.14,2714,15.974,2715,33.897,2716,15.974,2717,15.974,2718,15.974,2719,36.637,2720,36.637,2721,24.67,2722,15.974,2723,15.974,2724,15.974,2725,15.974,2726,15.974,2727,15.974,2728,15.974,2729,15.974,2730,15.974,2731,15.974,2732,15.974,2733,15.974,2734,15.974,2735,15.974,2736,15.974,2737,24.67,2738,15.974,2739,15.974,2740,24.67,2741,15.974,2742,15.974]],["docTitle/docs/smartcity/0.1/astropiota/introduction/overview",[479,33.543]],["docBody/docs/smartcity/0.1/astropiota/introduction/overview",[0,3.128,214,13.299,251,15.4,477,21.586,479,28.432,2743,30.745,2744,30.745,2745,30.745,2746,27.537,2747,30.745,2748,30.745,2749,27.537,2750,30.745,2751,27.554,2752,30.745,2753,30.745,2754,30.745,2755,27.554,2756,27.554]],["docTitle/docs/smartcity/0.1/astropiota/how-to-guides/build",[479,33.543]],["docBody/docs/smartcity/0.1/astropiota/how-to-guides/build",[0,1.998,68,14.342,86,28.586,97,13.252,247,26.307,251,23.095,479,19.935,492,20.26,608,13.669,994,18.715,1076,20.26,1086,12.869,1160,28.586,1204,17.561,1689,20.26,1959,16.763,1960,14.64,2046,17.561,2151,24.777,2746,22.394,2749,22.394,2757,22.606,2758,31.896,2759,22.606,2760,22.606,2761,20.26,2762,22.606,2763,22.606,2764,22.606,2765,22.606,2766,22.606,2767,22.606,2768,22.606,2769,22.606,2770,22.606,2771,22.606,2772,22.606,2773,22.606,2774,22.606,2775,22.606,2776,22.606,2777,22.606,2778,20.26,2779,22.606,2780,20.26,2781,20.26,2782,18.715,2783,22.606,2784,22.606]],["docTitle/docs/smartcity/0.1/astropiota/how-to-guides/run",[479,33.543]],["docBody/docs/smartcity/0.1/astropiota/how-to-guides/run",[0,2.868,4,5.495,37,12.728,65,20.347,94,13.492,97,16.585,100,11.579,101,18.14,206,14.876,214,8.283,247,23.771,251,20.79,262,16.585,479,24.784,490,14.87,823,13.853,1007,14.095,1061,13.445,1521,23.423,2046,26.139,2245,14.876,2419,25.357,2746,27.841,2749,30.947,2778,25.357,2782,27.856,2785,19.15,2786,19.15,2787,19.15,2788,19.15,2789,19.15,2790,19.15,2791,28.293,2792,19.15,2793,19.15,2794,19.15,2795,19.15,2796,19.15,2797,19.15,2798,19.15,2799,19.15,2800,19.15,2801,19.15,2802,19.15,2803,19.15,2804,17.162,2805,19.15,2806,19.15]],["docTitle/docs/smartcity/0.1/astropiota/how-to-guides/connect",[251,19.828,2807,35.477]],["docBody/docs/smartcity/0.1/astropiota/how-to-guides/connect",[0,2.419,247,23.639,251,21.388,472,16.613,994,31.969,1086,17.083,1204,23.311,2046,29.997,2194,26.894,2226,24.843,2780,34.608,2781,26.894,2782,31.969,2804,26.894,2807,26.894,2808,30.008,2809,30.008,2810,30.008,2811,38.616,2812,30.008,2813,30.008,2814,30.008,2815,30.008,2816,30.008,2817,30.008]],["docTitle/docs/smartcity/0.1/astropiota/how-to-guides/customize",[479,33.543]],["docBody/docs/smartcity/0.1/astropiota/how-to-guides/customize",[0,1.781,49,22.077,214,12.293,477,19.954,479,27.597,1521,23.528,2746,31.001,2749,26.171,2751,25.47,2755,25.47,2756,25.47,2818,28.42,2819,28.42,2820,28.42,2821,28.42,2822,28.42,2823,28.42,2824,28.42,2825,28.42,2826,28.42,2827,28.42,2828,28.42,2829,28.42,2830,28.42,2831,28.42,2832,28.42,2833,28.42,2834,28.42,2835,28.42,2836,28.42,2837,28.42,2838,28.42,2839,28.42,2840,28.42,2841,28.42]],["docTitle/docs/smartcity/0.1/astropiota/references/sensehat-specs",[2746,27.793,2749,27.793]],["docBody/docs/smartcity/0.1/astropiota/references/sensehat-specs",[0,2.665,77,22.932,81,16.482,437,16.947,2410,26.681,2746,29.866,2749,26.974,2761,26.681,2842,29.771,2843,42.537,2844,29.771,2845,29.771,2846,29.771,2847,29.771,2848,29.771,2849,29.771,2850,29.771,2851,29.771,2852,29.771,2853,29.771,2854,29.771,2855,29.771,2856,29.771,2857,29.771,2858,29.771,2859,29.771,2860,29.771]],["docTitle/docs/general/0.1/introduction/overview",[0,3.362]],["docBody/docs/general/0.1/introduction/overview",[0,2.878,4,5.896,2861,39.883]],["docTitle/docs/general/0.1/how-to-guides/expose-your-local-device",[0,3.362]],["docBody/docs/general/0.1/how-to-guides/expose-your-local-device",[0,3.057,4,2.905,33,3.955,37,8.84,61,5.857,62,9.021,81,18.911,89,9.211,204,10.879,205,16.012,696,29.136,785,10.078,823,16.725,869,13.797,881,11.519,890,11.882,1090,22.121,1714,17.611,1953,10.594,2038,23.52,2091,11.186,2101,10.594,2148,13.797,2182,11.186,2329,14.464,2449,17.611,2862,19.65,2863,19.65,2864,19.65,2865,19.65,2866,19.65,2867,19.65,2868,19.65,2869,19.65,2870,19.65,2871,19.65,2872,19.65,2873,37.631,2874,19.65,2875,40.076,2876,19.65,2877,28.836,2878,19.65,2879,19.65,2880,19.65,2881,28.836,2882,28.836,2883,34.158,2884,19.65,2885,28.836,2886,28.836,2887,19.65,2888,19.65]],["docTitle/docs/general/0.1/how-to-guides/set-up-virtual-machine",[62,24.638]],["docBody/docs/general/0.1/how-to-guides/set-up-virtual-machine",[0,2.873,33,2.767,48,6.196,62,22.066,65,14.452,70,15.478,71,14.452,96,14.938,125,16.781,205,11.204,262,14.01,589,18.566,696,16.086,890,14.452,1713,19.44,2245,18.566,2889,23.9,2890,23.9,2891,23.9,2892,23.9,2893,23.9,2894,23.9,2895,23.9,2896,23.9,2897,23.9,2898,23.9,2899,23.9,2900,23.9,2901,23.9,2902,33.162,2903,33.162,2904,23.9,2905,23.9,2906,23.9,2907,23.9,2908,23.9,2909,23.9,2910,23.9,2911,23.9,2912,23.9,2913,23.9,2914,23.9,2915,23.9,2916,23.9,2917,38.082,2918,23.9,2919,23.9]],["docTitle/docs/general/0.1/how-to-guides/setup-sbc",[0,3.362]],["docBody/docs/general/0.1/how-to-guides/setup-sbc",[0,3.166,33,3.817,61,5.511,204,10.237,205,8.667,251,13.808,530,13.609,692,17.769,696,24.588,869,12.982,1107,22.821,1962,11.557,1965,27.286,1983,28.77,1987,23.628,1993,11.974,2014,13.609,2060,15.307,2128,22.183,2168,15.307,2245,14.363,2247,16.571,2257,16.571,2271,16.571,2280,15.307,2920,18.49,2921,18.49,2922,18.49,2923,18.49,2924,18.49,2925,18.49,2926,18.49,2927,18.49,2928,18.49,2929,18.49,2930,27.566,2931,18.49,2932,18.49,2933,18.49,2934,18.49,2935,18.49,2936,18.49,2937,18.49,2938,18.49,2939,27.566,2940,32.96,2941,18.49,2942,18.49,2943,18.49,2944,18.49,2945,18.49,2946,18.49,2947,18.49,2948,18.49,2949,18.49,2950,18.49,2951,18.49,2952,18.49,2953,18.49,2954,18.49,2955,18.49]],["docTitle/docs/general/0.1/references/troubleshooting",[0,3.362]],["docBody/docs/general/0.1/references/troubleshooting",[0,2.967,141,24.527,590,29.42,1037,33.942,2335,33.942,2956,37.873,2957,37.873]],["docTitle/docs/contribution/0.1/style-guide",[0,3.362]],["docBody/docs/contribution/0.1/style-guide",[0,3.295,4,2.787,33,3.861,48,8.026,55,9.231,61,5.619,95,11.051,100,6.901,109,13.237,124,14.564,127,10.229,132,5.033,133,5.134,135,5.717,155,6.319,166,10.732,204,6.319,217,7.682,259,9.449,437,6.497,624,6.497,625,14.704,769,8.866,785,5.853,969,6.497,1204,8.866,1299,6.901,1471,10.229,1487,10.229,1618,16.911,1900,10.229,1966,9.449,1984,8.013,2201,8.401,2411,15.607,2658,15.607,2958,11.413,2959,11.413,2960,11.413,2961,11.413,2962,11.413,2963,11.413,2964,11.413,2965,11.413,2966,11.413,2967,11.413,2968,11.413,2969,11.413,2970,11.413,2971,11.413,2972,11.413,2973,11.413,2974,11.413,2975,11.413,2976,11.413,2977,11.413,2978,11.413,2979,11.413,2980,18.853,2981,11.413,2982,11.413,2983,11.413,2984,11.413,2985,11.413,2986,11.413,2987,18.853,2988,18.853,2989,11.413,2990,11.413,2991,11.413,2992,11.413,2993,11.413,2994,11.413,2995,11.413,2996,11.413,2997,11.413,2998,11.413,2999,11.413,3000,11.413,3001,11.413,3002,11.413,3003,11.413,3004,11.413,3005,11.413]]],"invertedIndex":[["",{"_index":0,"docTitle":{"docs/getting-started/0.1/introduction/what-is-dlt":{},"docs/getting-started/0.1/introduction/what-is-a-node":{},"docs/getting-started/0.1/introduction/what-is-the-tangle":{},"docs/getting-started/0.1/introduction/what-is-a-seed":{},"docs/getting-started/0.1/introduction/what-is-a-transaction":{},"docs/getting-started/0.1/introduction/what-is-a-bundle":{},"docs/getting-started/0.1/tutorials/get-started":{},"docs/getting-started/0.1/tutorials/receive-test-tokens":{},"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-the-trinity-wallet":{},"docs/getting-started/0.1/references/use-cases":{},"docs/dev-essentials/0.1/introduction/overview":{},"docs/dev-essentials/0.1/concepts/the-tangle":{},"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{},"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{},"docs/dev-essentials/0.1/concepts/minimum-weight-magnitude":{},"docs/dev-essentials/0.1/concepts/reattach-rebroadcast-promote":{},"docs/dev-essentials/0.1/how-to-guides/convert-data-to-trytes":{},"docs/dev-essentials/0.1/how-to-guides/create-an-address":{},"docs/dev-essentials/0.1/how-to-guides/derive-addresses-from-private-keys":{},"docs/dev-essentials/0.1/how-to-guides/send-bundle":{},"docs/dev-essentials/0.1/how-to-guides/check-transaction-confirmation":{},"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{},"docs/dev-essentials/0.1/references/structure-of-a-transaction":{},"docs/dev-essentials/0.1/references/structure-of-a-bundle":{},"docs/dev-essentials/0.1/references/security-levels":{},"docs/dev-essentials/0.1/references/tryte-alphabet":{},"docs/dev-essentials/0.1/references/glossary":{},"docs/client-libraries/0.1/introduction/overview":{},"docs/node-software/0.1/introduction/overview":{},"docs/node-software/0.1/iri/concepts/the-ledger":{},"docs/node-software/0.1/iri/concepts/transaction-validation":{},"docs/node-software/0.1/iri/concepts/zero-message-queue":{},"docs/node-software/0.1/iri/concepts/local-snapshot":{},"docs/node-software/0.1/iri/concepts/tip-selection":{},"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{},"docs/node-software/0.1/iri/how-to-guides/prune-transactions-from-the-ledger":{},"docs/node-software/0.1/iri/how-to-guides/interact-with-an-iri-node":{},"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node":{},"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{},"docs/node-software/0.1/iri/references/best-practice":{},"docs/node-software/0.1/iri/references/data-in-the-ledger":{},"docs/node-software/0.1/iri/references/data-in-the-snapshot-metadata-file":{},"docs/node-software/0.1/iri/references/troubleshooting":{},"docs/node-software/0.1/chronicle/introduction/overview":{},"docs/node-software/0.1/chronicle/references/architecture":{},"docs/node-software/0.1/chronicle/references/design-goals":{},"docs/node-software/0.1/goshimmer/how-to-guides/send-spam":{},"docs/node-software/0.1/goshimmer/how-to-guides/subscribe-to-events":{},"docs/node-software/0.1/goshimmer/references/command-line-flags":{},"docs/compass/0.1/introduction/overview":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/compass/0.1/references/compass-configuration-options":{},"docs/compass/0.1/references/merkle-tree-compute-times":{},"docs/compass/0.1/references/troubleshooting":{},"docs/wallets/0.1/introduction/overview":{},"docs/wallets/0.1/trinity/introduction/overview":{},"docs/wallets/0.1/trinity/concepts/hardware-wallet":{},"docs/wallets/0.1/trinity/concepts/node-quorum":{},"docs/wallets/0.1/trinity/how-to-guides/create-an-account":{},"docs/wallets/0.1/trinity/how-to-guides/back-up-seed":{},"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{},"docs/wallets/0.1/trinity/how-to-guides/read-your-balance":{},"docs/wallets/0.1/trinity/how-to-guides/send-a-transaction":{},"docs/wallets/0.1/trinity/how-to-guides/receive-a-transaction":{},"docs/wallets/0.1/trinity/how-to-guides/create-deep-link":{},"docs/wallets/0.1/trinity/how-to-guides/connect-to-a-custom-node":{},"docs/wallets/0.1/trinity/how-to-guides/outsource-pow":{},"docs/wallets/0.1/trinity/how-to-guides/manage-your-account":{},"docs/wallets/0.1/trinity/how-to-guides/manage-your-security-settings":{},"docs/wallets/0.1/trinity/how-to-guides/change-the-general-settings":{},"docs/wallets/0.1/trinity/how-to-guides/auto-promote":{},"docs/wallets/0.1/trinity/how-to-guides/perform-a-snapshot-transition":{},"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/wallets/0.1/trinity/references/troubleshooting":{},"docs/wallets/0.1/hub/introduction/overview":{},"docs/wallets/0.1/hub/concepts/sweeps":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{},"docs/wallets/0.1/hub/how-to-guides/query-the-database":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/wallets/0.1/hub/how-to-guides/integrate-hub":{},"docs/wallets/0.1/hub/references/command-line-flags":{},"docs/wallets/0.1/hub/references/database-tables":{},"docs/wallets/0.1/hub/references/security-considerations":{},"docs/wallets/0.1/hub/references/troubleshooting":{},"docs/utils/0.1/introduction/overview":{},"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/utils/0.1/official/proof-of-existance/overview":{},"docs/utils/0.1/official/tangle-certificate/overview":{},"docs/utils/0.1/official/tryte-compress/overview":{},"docs/blueprints/0.1/introduction/overview":{},"docs/blueprints/0.1/data-marketplace/overview":{},"docs/blueprints/0.1/data-marketplace/architecture":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/blueprints/0.1/doc-immutability/overview":{},"docs/blueprints/0.1/doc-immutability/architecture":{},"docs/blueprints/0.1/p2p-energy/architecture":{},"docs/blueprints/0.1/tangle-data-storage/overview":{},"docs/blueprints/0.1/tangle-data-storage/architecture":{},"docs/blueprints/0.1/tangle-data-storage/deployment-and-testing":{},"docs/blueprints/0.1/track-and-trace/overview":{},"docs/blueprints/0.1/track-and-trace/architecture":{},"docs/blueprints/0.1/track-and-trace/deployment-and-testing":{},"docs/iota-go/0.1/account-module/introduction/overview":{},"docs/iota-go/0.1/account-module/how-to-guides/create-account":{},"docs/iota-go/0.1/account-module/how-to-guides/listen-to-events":{},"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-go/0.1/account-module/how-to-guides/create-plugin":{},"docs/iota-go/0.1/account-module/how-to-guides/import-seed-state":{},"docs/iota-java/0.1/account-module/introduction/overview":{},"docs/iota-java/0.1/account-module/how-to-guides/create-account":{},"docs/iota-java/0.1/account-module/how-to-guides/listen-to-events":{},"docs/iota-java/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-java/0.1/account-module/how-to-guides/create-plugin":{},"docs/iota-js/0.1/core/how-to-guides/create-custom-methods":{},"docs/iota-js/0.1/account-module/introduction/overview":{},"docs/iota-js/0.1/account-module/how-to-guides/create-account":{},"docs/iota-js/0.1/account-module/how-to-guides/listen-to-events":{},"docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-js/0.1/mam/introduction/overview":{},"docs/iota-js/0.1/mam/how-to-guides/create-public-channel":{},"docs/iota-js/0.1/mam/how-to-guides/create-restricted-channel":{},"docs/general/0.1/introduction/overview":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{},"docs/general/0.1/how-to-guides/setup-sbc":{},"docs/general/0.1/references/troubleshooting":{},"docs/contribution/0.1/style-guide":{}},"docBody":{"docs/getting-started/0.1/introduction/what-is-dlt":{},"docs/getting-started/0.1/introduction/what-is-iota":{},"docs/getting-started/0.1/introduction/what-is-a-node":{},"docs/getting-started/0.1/introduction/what-is-the-tangle":{},"docs/getting-started/0.1/introduction/what-is-a-seed":{},"docs/getting-started/0.1/introduction/what-is-a-transaction":{},"docs/getting-started/0.1/introduction/what-is-a-bundle":{},"docs/getting-started/0.1/tutorials/get-started":{},"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/getting-started/0.1/tutorials/receive-test-tokens":{},"docs/getting-started/0.1/tutorials/send-iota-tokens":{},"docs/getting-started/0.1/tutorials/run-your-own-iri-node":{},"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-the-trinity-wallet":{},"docs/getting-started/0.1/references/quickstart-dev-handbook":{},"docs/getting-started/0.1/references/iota-networks":{},"docs/getting-started/0.1/references/use-cases":{},"docs/dev-essentials/0.1/introduction/overview":{},"docs/dev-essentials/0.1/concepts/the-tangle":{},"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{},"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{},"docs/dev-essentials/0.1/concepts/minimum-weight-magnitude":{},"docs/dev-essentials/0.1/concepts/reattach-rebroadcast-promote":{},"docs/dev-essentials/0.1/how-to-guides/convert-data-to-trytes":{},"docs/dev-essentials/0.1/how-to-guides/create-an-address":{},"docs/dev-essentials/0.1/how-to-guides/derive-addresses-from-private-keys":{},"docs/dev-essentials/0.1/how-to-guides/send-bundle":{},"docs/dev-essentials/0.1/how-to-guides/check-transaction-confirmation":{},"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{},"docs/dev-essentials/0.1/references/structure-of-a-transaction":{},"docs/dev-essentials/0.1/references/structure-of-a-bundle":{},"docs/dev-essentials/0.1/references/security-levels":{},"docs/dev-essentials/0.1/references/tryte-alphabet":{},"docs/dev-essentials/0.1/references/units-of-iota-tokens":{},"docs/dev-essentials/0.1/references/glossary":{},"docs/client-libraries/0.1/introduction/overview":{},"docs/iota-js/0.1/introduction/overview":{},"docs/iota-java/0.1/introduction/overview":{},"docs/iota-go/0.1/introduction/overview":{},"docs/smartcity/0.1/introduction/overview":{},"docs/node-software/0.1/introduction/overview":{},"docs/node-software/0.1/iri/introduction/overview":{},"docs/node-software/0.1/iri/concepts/the-ledger":{},"docs/node-software/0.1/iri/concepts/neighbor-iri-node":{},"docs/node-software/0.1/iri/concepts/transaction-validation":{},"docs/node-software/0.1/iri/concepts/zero-message-queue":{},"docs/node-software/0.1/iri/concepts/local-snapshot":{},"docs/node-software/0.1/iri/concepts/tip-selection":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{},"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{},"docs/node-software/0.1/iri/how-to-guides/prune-transactions-from-the-ledger":{},"docs/node-software/0.1/iri/how-to-guides/interact-with-an-iri-node":{},"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node":{},"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{},"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{},"docs/node-software/0.1/iri/how-to-guides/update-the-iri":{},"docs/node-software/0.1/iri/references/api-reference":{},"docs/node-software/0.1/iri/references/api-errors":{},"docs/node-software/0.1/iri/references/best-practice":{},"docs/node-software/0.1/iri/references/data-in-the-ledger":{},"docs/node-software/0.1/iri/references/data-in-the-snapshot-metadata-file":{},"docs/node-software/0.1/iri/references/iri-configuration-options":{},"docs/node-software/0.1/iri/references/zmq-events":{},"docs/node-software/0.1/iri/references/troubleshooting":{},"docs/node-software/0.1/chronicle/introduction/overview":{},"docs/node-software/0.1/chronicle/how-to-guides/get-started":{},"docs/node-software/0.1/chronicle/references/api-reference":{},"docs/node-software/0.1/chronicle/references/architecture":{},"docs/node-software/0.1/chronicle/references/data-model":{},"docs/node-software/0.1/chronicle/references/design-goals":{},"docs/node-software/0.1/goshimmer/introduction/overview":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/node-software/0.1/goshimmer/how-to-guides/send-spam":{},"docs/node-software/0.1/goshimmer/how-to-guides/subscribe-to-events":{},"docs/node-software/0.1/goshimmer/references/command-line-flags":{},"docs/compass/0.1/introduction/overview":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/compass/0.1/references/compass-configuration-options":{},"docs/compass/0.1/references/merkle-tree-compute-times":{},"docs/compass/0.1/references/troubleshooting":{},"docs/wallets/0.1/introduction/overview":{},"docs/wallets/0.1/trinity/introduction/overview":{},"docs/wallets/0.1/trinity/concepts/hardware-wallet":{},"docs/wallets/0.1/trinity/concepts/node-quorum":{},"docs/wallets/0.1/trinity/how-to-guides/create-an-account":{},"docs/wallets/0.1/trinity/how-to-guides/back-up-seed":{},"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{},"docs/wallets/0.1/trinity/how-to-guides/read-your-balance":{},"docs/wallets/0.1/trinity/how-to-guides/send-a-transaction":{},"docs/wallets/0.1/trinity/how-to-guides/receive-a-transaction":{},"docs/wallets/0.1/trinity/how-to-guides/create-a-qr-code":{},"docs/wallets/0.1/trinity/how-to-guides/create-deep-link":{},"docs/wallets/0.1/trinity/how-to-guides/connect-to-a-custom-node":{},"docs/wallets/0.1/trinity/how-to-guides/outsource-pow":{},"docs/wallets/0.1/trinity/how-to-guides/manage-your-account":{},"docs/wallets/0.1/trinity/how-to-guides/manage-your-security-settings":{},"docs/wallets/0.1/trinity/how-to-guides/change-the-general-settings":{},"docs/wallets/0.1/trinity/how-to-guides/auto-promote":{},"docs/wallets/0.1/trinity/how-to-guides/perform-a-snapshot-transition":{},"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/wallets/0.1/trinity/references/troubleshooting":{},"docs/wallets/0.1/hub/introduction/overview":{},"docs/wallets/0.1/hub/concepts/sweeps":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{},"docs/wallets/0.1/hub/how-to-guides/query-the-database":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/wallets/0.1/hub/how-to-guides/integrate-hub":{},"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{},"docs/wallets/0.1/hub/references/grpc-api-reference":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/wallets/0.1/hub/references/command-line-flags":{},"docs/wallets/0.1/hub/references/database-tables":{},"docs/wallets/0.1/hub/references/security-considerations":{},"docs/wallets/0.1/hub/references/troubleshooting":{},"docs/utils/0.1/introduction/overview":{},"docs/utils/0.1/community/mam-watcher/overview":{},"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{},"docs/utils/0.1/official/iota-area-codes/overview":{},"docs/utils/0.1/official/proof-of-existance/overview":{},"docs/utils/0.1/official/tangle-certificate/overview":{},"docs/utils/0.1/official/tryte-compress/overview":{},"docs/blueprints/0.1/introduction/overview":{},"docs/blueprints/0.1/data-marketplace/overview":{},"docs/blueprints/0.1/data-marketplace/architecture":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/blueprints/0.1/doc-immutability/overview":{},"docs/blueprints/0.1/doc-immutability/architecture":{},"docs/blueprints/0.1/p2p-energy/overview":{},"docs/blueprints/0.1/p2p-energy/architecture":{},"docs/blueprints/0.1/p2p-energy/deployment-and-testing":{},"docs/blueprints/0.1/tangle-data-storage/overview":{},"docs/blueprints/0.1/tangle-data-storage/architecture":{},"docs/blueprints/0.1/tangle-data-storage/deployment-and-testing":{},"docs/blueprints/0.1/track-and-trace/overview":{},"docs/blueprints/0.1/track-and-trace/architecture":{},"docs/blueprints/0.1/track-and-trace/deployment-and-testing":{},"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/install-go-on-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{},"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{},"docs/iota-go/0.1/account-module/how-to-guides/create-account":{},"docs/iota-go/0.1/account-module/how-to-guides/listen-to-events":{},"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-go/0.1/account-module/how-to-guides/create-plugin":{},"docs/iota-go/0.1/account-module/how-to-guides/import-seed-state":{},"docs/iota-go/0.1/account-module/references/cda-advice":{},"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{},"docs/iota-java/0.1/account-module/how-to-guides/create-account":{},"docs/iota-java/0.1/account-module/how-to-guides/listen-to-events":{},"docs/iota-java/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-java/0.1/account-module/how-to-guides/create-plugin":{},"docs/iota-java/0.1/account-module/references/cda-advice":{},"docs/iota-js/0.1/core/introduction/overview":{},"docs/iota-js/0.1/core/how-to-guides/create-custom-methods":{},"docs/iota-js/0.1/account-module/introduction/overview":{},"docs/iota-js/0.1/account-module/how-to-guides/create-account":{},"docs/iota-js/0.1/account-module/how-to-guides/listen-to-events":{},"docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-js/0.1/account-module/references/cda-advice":{},"docs/iota-js/0.1/mam/introduction/overview":{},"docs/iota-js/0.1/mam/concepts/channels":{},"docs/iota-js/0.1/mam/how-to-guides/create-public-channel":{},"docs/iota-js/0.1/mam/how-to-guides/create-restricted-channel":{},"docs/iota-js/0.1/mam/how-to-guides/create-mam-webpage":{},"docs/iota-js/0.1/mam/references/api-reference":{},"docs/smartcity/0.1/astropiota/introduction/overview":{},"docs/smartcity/0.1/astropiota/how-to-guides/build":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{},"docs/smartcity/0.1/astropiota/how-to-guides/connect":{},"docs/smartcity/0.1/astropiota/how-to-guides/customize":{},"docs/smartcity/0.1/astropiota/references/sensehat-specs":{},"docs/general/0.1/introduction/overview":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{},"docs/general/0.1/how-to-guides/set-up-virtual-machine":{},"docs/general/0.1/how-to-guides/setup-sbc":{},"docs/general/0.1/references/troubleshooting":{},"docs/contribution/0.1/style-guide":{}}}],["0",{"_index":42,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-bundle":{},"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-the-trinity-wallet":{},"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{},"docs/dev-essentials/0.1/concepts/minimum-weight-magnitude":{},"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{},"docs/node-software/0.1/iri/concepts/local-snapshot":{},"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{},"docs/node-software/0.1/iri/references/zmq-events":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/wallets/0.1/trinity/concepts/hardware-wallet":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/blueprints/0.1/doc-immutability/architecture":{}}}],["0.2で、スクロールテキストは読むのに十分遅くなりますが、遅くなりすぎません。backcolourとtextcolourは、0から255までのrgb",{"_index":2831,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["000トリットはトライトでは9",{"_index":371,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/minimum-weight-magnitude":{}}}],["00:aa:bb:xx:yy:zz",{"_index":2388,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{}}}],["01",{"_index":2870,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["02_run_iri.sh",{"_index":1057,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["0x77",{"_index":2408,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{}}}],["0、1、2から100miを取り出し、送信者がその3",{"_index":52,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-bundle":{}}}],["0〜27トライトのオプションのタグ。null",{"_index":2734,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["0に設定し、ネットマスクをnmap",{"_index":2951,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["0またはvalu",{"_index":768,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["0トリットで終わっていない場合、トランザクションのnonc",{"_index":375,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/minimum-weight-magnitude":{}}}],["0（インデックスが0のトランザクション）。iri",{"_index":464,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/glossary":{}}}],["1",{"_index":48,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-bundle":{},"docs/getting-started/0.1/tutorials/get-started":{},"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-the-trinity-wallet":{},"docs/getting-started/0.1/references/quickstart-dev-handbook":{},"docs/dev-essentials/0.1/concepts/the-tangle":{},"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{},"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{},"docs/dev-essentials/0.1/references/units-of-iota-tokens":{},"docs/dev-essentials/0.1/references/glossary":{},"docs/node-software/0.1/iri/concepts/zero-message-queue":{},"docs/node-software/0.1/iri/concepts/tip-selection":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{},"docs/node-software/0.1/iri/how-to-guides/interact-with-an-iri-node":{},"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node":{},"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{},"docs/node-software/0.1/iri/references/best-practice":{},"docs/node-software/0.1/iri/references/zmq-events":{},"docs/node-software/0.1/chronicle/how-to-guides/get-started":{},"docs/node-software/0.1/chronicle/references/api-reference":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/node-software/0.1/goshimmer/how-to-guides/subscribe-to-events":{},"docs/compass/0.1/introduction/overview":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/wallets/0.1/trinity/concepts/hardware-wallet":{},"docs/wallets/0.1/trinity/concepts/node-quorum":{},"docs/wallets/0.1/trinity/how-to-guides/connect-to-a-custom-node":{},"docs/wallets/0.1/trinity/how-to-guides/change-the-general-settings":{},"docs/wallets/0.1/hub/concepts/sweeps":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/wallets/0.1/hub/how-to-guides/integrate-hub":{},"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{},"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/utils/0.1/official/iota-area-codes/overview":{},"docs/utils/0.1/official/proof-of-existance/overview":{},"docs/utils/0.1/official/tangle-certificate/overview":{},"docs/utils/0.1/official/tryte-compress/overview":{},"docs/blueprints/0.1/data-marketplace/overview":{},"docs/blueprints/0.1/doc-immutability/architecture":{},"docs/blueprints/0.1/track-and-trace/architecture":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iota-go/0.1/account-module/how-to-guides/create-account":{},"docs/iota-java/0.1/account-module/how-to-guides/create-account":{},"docs/iota-java/0.1/account-module/how-to-guides/create-plugin":{},"docs/iota-js/0.1/account-module/how-to-guides/create-account":{},"docs/general/0.1/how-to-guides/set-up-virtual-machine":{},"docs/contribution/0.1/style-guide":{}}}],["1,000トランザクション（tps）を送信します。tpsを変更したい場合は、tpsクエリパラメータを追加することができます。たとえば、10,000tpsを送信するには、次のようにエンドポイントにリクエストを送信します。http&#x3a;//localhost:8080/spammer?cmd=start&tps=10000",{"_index":1018,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/send-spam":{}}}],["1.0",{"_index":2763,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["1.11",{"_index":2469,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{}}}],["1.27mm",{"_index":2428,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["1.58",{"_index":2575,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["1.7.25",{"_index":2567,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["10",{"_index":95,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{},"docs/dev-essentials/0.1/references/tryte-alphabet":{},"docs/node-software/0.1/iri/concepts/local-snapshot":{},"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{},"docs/utils/0.1/official/proof-of-existance/overview":{},"docs/utils/0.1/official/tangle-certificate/overview":{},"docs/utils/0.1/official/tryte-compress/overview":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/contribution/0.1/style-guide":{}}}],["10.197.0.57",{"_index":2287,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["10.197.3.57",{"_index":2296,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["10.2.1を使用します。check制約はテーブルに追加できるデータを制限します。無効なデータを列に挿入しようとすると、mariadb",{"_index":1239,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["10.3.10がインストールされていることがわかります。これは、最小の10.2.1",{"_index":1250,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["100",{"_index":547,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/local-snapshot":{},"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["1000分の1セント未満の支払総額が発生する可能性があります。1miの現在の価格である1,000,000（100万）iotaトークンを確認することをお勧めします。センサーのコストと保守作業に応じて、1,000iから50,000i",{"_index":1729,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["100個のマイルストーンを取得し、それらをseen",{"_index":551,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/local-snapshot":{}}}],["10gb",{"_index":740,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["10gb以上のssd",{"_index":1038,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["10miとします。あなたのシードは2つのアドレス（インデックス0と1）を持ち、両方とも5miを含みます。したがって、3つのトランザクションを作成します。アドレス0から5miを取り出す入力トランザクション、アドレス1から5miを取り出す入力トランザクション、およびベンダーのアドレスに10miを支払う出力トランザクションです。（入力トランザクションの両方のアドレスがセキュリティレベル1",{"_index":348,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{}}}],["10miを受け取るには、これら3つのトランザクションすべてが有効でなければなりません。各トランザクションは、10miのiota",{"_index":349,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{}}}],["10のアドレスを見つけます。timewindowall関数はallwindowedstreamを返します。そのため、すべての要素が1つのストリームにまとめられます。パーティションでslidingwindowを使用したので、ここでの時間はそれほど重要ではありません。よって、1",{"_index":776,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["10以上。推奨バージョンは最新lt",{"_index":2617,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{},"docs/iota-js/0.1/account-module/introduction/overview":{},"docs/iota-js/0.1/mam/introduction/overview":{}}}],["10以上。最新のlt",{"_index":131,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/getting-started/0.1/tutorials/send-iota-tokens":{},"docs/dev-essentials/0.1/how-to-guides/convert-data-to-trytes":{},"docs/dev-essentials/0.1/how-to-guides/create-an-address":{},"docs/dev-essentials/0.1/how-to-guides/derive-addresses-from-private-keys":{},"docs/dev-essentials/0.1/how-to-guides/send-bundle":{},"docs/dev-essentials/0.1/how-to-guides/check-transaction-confirmation":{},"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{},"docs/utils/0.1/official/iota-area-codes/overview":{},"docs/iota-js/0.1/account-module/how-to-guides/create-account":{}}}],["10分以上ペンディングの場合は、バンドルを再添付することをお勧めします。10",{"_index":383,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/reattach-rebroadcast-promote":{}}}],["10年間で、750",{"_index":1674,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/overview":{}}}],["11",{"_index":2776,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["115200",{"_index":2278,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["120",{"_index":711,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/prune-transactions-from-the-ledger":{}}}],["127",{"_index":2076,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["127.0.0.1:8000/admin",{"_index":1331,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["128",{"_index":1761,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{}}}],["128ビットのハッシュアルゴリズム（例：sha256）を使用することをお勧めします。md5やsha1",{"_index":1762,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{}}}],["14",{"_index":1613,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["14265",{"_index":597,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["14265でローカルmainnetノードに接続し、localhostのポート50051でgrpc",{"_index":1255,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["14265でローカルmainnetノードに接続し、ローカルホストのポート50051でrest",{"_index":1257,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["14626（tcp/udp）と14666（tcp",{"_index":980,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["15600",{"_index":595,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["16",{"_index":2299,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["16gbのramと2つの仮想cpuを備えたamazon",{"_index":861,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/best-practice":{}}}],["16ビット（rgb",{"_index":2852,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/references/sensehat-specs":{}}}],["17.05",{"_index":662,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["18.04",{"_index":592,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["18.04サーバーが必要です。linuxサーバーがなく、windowsまたはmac",{"_index":2864,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["18.04）の場合は、build",{"_index":788,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["18でiri",{"_index":891,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/troubleshooting":{}}}],["1i",{"_index":1159,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/perform-a-snapshot-transition":{}}}],["1ki（1000i",{"_index":171,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/receive-test-tokens":{}}}],["1、2、または3",{"_index":450,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/glossary":{}}}],["1から3",{"_index":320,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{}}}],["1つからiotaトークンを取り出すトランザクションを送信した場合、そのアドレスからは2度とiota",{"_index":1135,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/receive-a-transaction":{}}}],["1つにテストデータを公開したくないかもしれません。代わりに、iota",{"_index":1528,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["1つにドキュメントを保存し、後で検証を行うときにドキュメントを再度取得するためのurl",{"_index":1757,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{}}}],["1つのcda",{"_index":2535,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-java/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["1つのiriノードと1",{"_index":1531,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["1つのアドレスから2回以上iotaトークンを取り出すと（署名すると）、より多くの秘密鍵が漏洩するため、攻撃者はその署名に総当たり攻撃を行いiota",{"_index":331,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{}}}],["1つのクロニクルノードがscyllaスウォームのすべてのシャードを管理および監督します。これは、各シャードへの少なくとも1",{"_index":953,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/references/architecture":{}}}],["1つのトランザクションでも、パッケージ化する必要があります。この場合、1",{"_index":350,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{}}}],["1つのトランザクションに収まらないことを意味します。その結果、低電力デバイスはセキュリティレベル2を使用したい場合がありますが、大規模企業はセキュリティレベル3",{"_index":443,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/security-levels":{}}}],["1つのトランザクションに収まらない場合があります。この場合、署名の残りの部分は、1つまたは2",{"_index":333,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{}}}],["1つの解決策は、一定期間後にトランザクションを削除することです。たとえば、タグテーブルには、リアルタイムインデックスとして機能する定義済みのttlがあります。ttlが1000秒に設定されている場合、行はその時間後に削除されます。タグによる検索は、ttl",{"_index":968,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/references/data-model":{}}}],["1つは、iota",{"_index":291,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/introduction/overview":{}}}],["1つは、アドレスがアクティブまたは期限切れになる条件を定義できることです。これらの条件は、送信者がiotaトークンをアドレスに送信しても安全かどうかを判断するのに役立ちます。このため、アカウントのアドレスは条件付き預け入れアドレス（cda",{"_index":2498,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-account":{},"docs/iota-java/0.1/account-module/how-to-guides/create-account":{},"docs/iota-js/0.1/account-module/how-to-guides/create-account":{}}}],["1つ以上のiriノードでトランザクションイベントを購読し、そのトランザクションデータをscylladbクラスターに保存します。このようにして、ローカルスナップショット中にiri",{"_index":911,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["1として表すことができます。これらの値はトリットと呼ばれます。3トリットは1トライトに相当します。これは27（33",{"_index":388,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/trinary":{}}}],["1とリーフ2の公開鍵をハッシュ化してノード1のハッシュ値を見つけます。次に、ノード1とノード2",{"_index":316,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/the-tangle":{}}}],["1のアドレスから80i",{"_index":362,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{}}}],["1は、リーフ1の公開鍵とリーフ2の公開鍵の両方をハッシュ化した結果のハッシュ値です。ノード2は、リーフ3の公開鍵とリーフ4の公開鍵の両方をハッシュ化した結果のハッシュ値です。コーディネーターのアドレスは、ノード1とノード2",{"_index":313,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/the-tangle":{}}}],["1より大きい場合、署名は1",{"_index":352,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{}}}],["1を参照し、トランザクション1はトランザクション2",{"_index":43,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-bundle":{}}}],["1トライトは27の値を表すことができる3トリットです。したがって、27文字が必要で、iotaでは'abcdefghijklmnopqrstuvwxyz9",{"_index":469,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/glossary":{}}}],["1分程度待つと、トランザクションが確定されたときにzmq",{"_index":1593,"docTitle":{},"docBody":{"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{}}}],["1回だけ作成および登録されます。資産の管理権は時間の経過とともに変化し、特定の資産の管理権の変化に関連する情報を集約するためにmamチャネルを使用することは意味があります。mamチャネルを使用することにより、実装の複雑さを制限でき、すべての異なる管理権の変更を適切な資産に簡単にリンクできます。さらに、mam",{"_index":1872,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["1回でもiota",{"_index":177,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-iota-tokens":{}}}],["1回のデータ購入を完了するために必要なすべての煩雑な事務的手続きは言うまでもありません。これらの条件により、リアルタイムのデータ取引はほとんど不可能になります。2025年までに、全データの約95％がリアルタイムでiotデバイスによって生成されると予測されているため（出典：idc",{"_index":1680,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/overview":{}}}],["1回ハッシュ化されて、セキュリティレベルごとに1つのキーダイジェストを導出します。次に、キーダイジェストが結合され、1回ハッシュ化されて、81",{"_index":328,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{}}}],["1回ハッシュ化されます。そしてキーダイジェストは結合され、81トライトのアドレスを導出するために1",{"_index":339,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{}}}],["1時間に最も使用された上位10",{"_index":759,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["1時間以内のアドレスごとのトランザクション数を計算する必要があります。スライディングウィンドウはこれに役立ちます。今回のユースケースでは、30",{"_index":772,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["1番目のトランザクションの詳細を見るには、1番目のトランザクションのハッシュをコピーしてdevnet.thetangle.orgに貼り付けます。これらの詳細は、web",{"_index":412,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/send-bundle":{}}}],["1秒あたりのトランザクション数。2つのカテゴリに分けられます。receiv",{"_index":996,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["1秒間に処理できるトランザクション数をテストするには、spammerapi",{"_index":1016,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/send-spam":{}}}],["1：astropiota",{"_index":488,"docTitle":{},"docBody":{"docs/smartcity/0.1/introduction/overview":{}}}],["2",{"_index":17,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-iota":{},"docs/getting-started/0.1/introduction/what-is-the-tangle":{},"docs/getting-started/0.1/introduction/what-is-a-bundle":{},"docs/getting-started/0.1/tutorials/get-started":{},"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/dev-essentials/0.1/introduction/overview":{},"docs/dev-essentials/0.1/concepts/the-tangle":{},"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{},"docs/dev-essentials/0.1/how-to-guides/send-bundle":{},"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{},"docs/node-software/0.1/iri/concepts/transaction-validation":{},"docs/node-software/0.1/iri/concepts/tip-selection":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{},"docs/node-software/0.1/iri/how-to-guides/prune-transactions-from-the-ledger":{},"docs/node-software/0.1/iri/how-to-guides/interact-with-an-iri-node":{},"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node":{},"docs/node-software/0.1/iri/references/api-reference":{},"docs/node-software/0.1/chronicle/how-to-guides/get-started":{},"docs/node-software/0.1/chronicle/references/data-model":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/node-software/0.1/goshimmer/how-to-guides/subscribe-to-events":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/wallets/0.1/trinity/how-to-guides/change-the-general-settings":{},"docs/wallets/0.1/hub/introduction/overview":{},"docs/wallets/0.1/hub/concepts/sweeps":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/wallets/0.1/hub/how-to-guides/integrate-hub":{},"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{},"docs/wallets/0.1/hub/references/security-considerations":{},"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/utils/0.1/official/iota-area-codes/overview":{},"docs/utils/0.1/official/proof-of-existance/overview":{},"docs/utils/0.1/official/tangle-certificate/overview":{},"docs/utils/0.1/official/tryte-compress/overview":{},"docs/blueprints/0.1/doc-immutability/architecture":{},"docs/blueprints/0.1/track-and-trace/architecture":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{},"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{},"docs/iota-java/0.1/account-module/how-to-guides/create-plugin":{}}}],["2,187トライト、4374トライト、または6,561トライトで構成されているため、秘密鍵にはセキュリティレベルごとに1つのキーフラグメントが存在します。たとえば、セキュリティレベル1の秘密鍵は2,187トライトで構成されています。よってセキュリティレベル1の秘密鍵は2,178/81=27より、27個のセグメントからなり、1つのキーフラグメントになります。セキュリティレベル2では2つのキーフラグメント、セキュリティレベル3では3",{"_index":327,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{}}}],["2,779,530,283",{"_index":13,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-iota":{}}}],["2.0、mit。通常iota財団のライブラリiota.j",{"_index":1754,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{}}}],["2.3.0",{"_index":2565,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["2.5",{"_index":2570,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["2.7",{"_index":1172,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["2.7pi",{"_index":1075,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["2.7piのiota",{"_index":1056,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["20",{"_index":46,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-bundle":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/iot/0.1/how-to-guides/connect-programmer":{}}}],["200",{"_index":811,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{},"docs/node-software/0.1/chronicle/references/api-reference":{},"docs/wallets/0.1/trinity/concepts/hardware-wallet":{},"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["2015",{"_index":1678,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/overview":{}}}],["2016年11月から2019年7",{"_index":926,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["2016年に、ハッカーはmintと呼ばれるlinuxディストリビューション用のisoファイルにバックドアをうまく挿入しました。また、これらの改ざんされたファイルにリンクするようにwebサイトを変更しました。さらに、ハッカーは新しく生成したファイルのハッシュ値をweb",{"_index":1744,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/overview":{}}}],["2017",{"_index":1681,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/overview":{}}}],["2019",{"_index":2465,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{},"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{},"docs/iota-js/0.1/core/introduction/overview":{},"docs/iota-js/0.1/account-module/introduction/overview":{},"docs/iota-js/0.1/mam/introduction/overview":{}}}],["20の事前にビルドされた（layerディレクトリ内の）マークル木を使用します。このマークル木は、コンパスが1年以上30",{"_index":1539,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["2128",{"_index":1763,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{}}}],["2256",{"_index":1765,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{}}}],["24",{"_index":712,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/prune-transactions-from-the-ledger":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["243",{"_index":815,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{}}}],["25",{"_index":2777,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["2512",{"_index":1767,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{}}}],["255.255.0.0",{"_index":2297,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["255.255.255.0",{"_index":2288,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["256",{"_index":2293,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["256\\*256",{"_index":2306,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["2673",{"_index":441,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/structure-of-a-transaction":{}}}],["27",{"_index":326,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{},"docs/node-software/0.1/chronicle/references/data-model":{}}}],["277,761",{"_index":14,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-iota":{}}}],["27トライト、54トライト、または81",{"_index":335,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{}}}],["27トライト、54トライト、または81トライトが選択されます。これらのトライトは、署名フラグメント内の81",{"_index":338,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{}}}],["27個のセグメントそれぞれがハッシュ化される回数です。各署名フラグメントには2,187",{"_index":336,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{}}}],["27回スポンジ関数でsubse",{"_index":324,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{}}}],["280",{"_index":2175,"docTitle":{"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{}},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{}}}],["2944.17",{"_index":2308,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["2gb",{"_index":739,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["2x8=16",{"_index":2298,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["2x8=16です。したがって、24ではなく16",{"_index":2953,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["2から残りの5miをアドレス3",{"_index":54,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-bundle":{}}}],["2がプリインストールされている場合は、デフォルトでpython",{"_index":1325,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["2つあります。docker",{"_index":979,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["2つのウォークに同じバリデータオブジェクトが渡されるため、互いに一貫性のある2",{"_index":578,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/tip-selection":{}}}],["2つのチップトランザクションは、どちらも無効ではないことを確認するために、互いの間の一貫性についてチェックします。したがって、クライアントのトランザクションは、他のトランザクションによって承認される可能性が高い2",{"_index":579,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/tip-selection":{}}}],["2つのチップトランザクションハッシュが生成され、それらが新しいトランザクションのtrunktransactionフィールドとbranchtransact",{"_index":565,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/tip-selection":{}}}],["2つのトランザクションが検証されます。ネットワークを介して伝播する新しいトランザクションが多いほど、他のトランザクションの検証が高速になるため、このプロセスによってiota",{"_index":20,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-iota":{}}}],["2つのトランザクションを参照しなければなりません。チップ選択は、ノードが自身の台帳の部分グラフから2つのランダムなチップトランザクションを選択するプロセスです。クライアントがgettransactionstoapprov",{"_index":560,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/tip-selection":{}}}],["2つの変数を作成します。1つはシード用、もう1",{"_index":2502,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-account":{}}}],["2つの異なるseeduuidフィールドから作成された2つのアドレスがあります。user_address",{"_index":1305,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{}}}],["2つの種類のうちの1",{"_index":351,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{}}}],["2つの親トランザクションを参照する必要があります。そのトランザクションは、バンドル内の最後のトランザクションまで、常にtrunktransactionフィールドで互いを参照します。それでは、branchtransactionフィールドはどうでしょうか。そしてバンドルの最後のトランザクションのtrunktransactionとbranchtransact",{"_index":296,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/introduction/overview":{}}}],["2つの重み付きランダムウォークは、同じマイルストーントランザクションから開始されます（latestsolidmileston",{"_index":567,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/tip-selection":{}}}],["2つの関数を作成します。1つはアクティブユーザーを取得し、もう1",{"_index":1351,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["2つ以上の未使用アドレスにiota",{"_index":1459,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["2で、これは2,779,530,283,277,761に相当します。この数が非常に大きいので、iotaトークンの単位はsi",{"_index":446,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/units-of-iota-tokens":{}}}],["2のアドレスから80i",{"_index":363,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{}}}],["2を使用してiota",{"_index":1367,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["2を使用します。これは、すべてのユーザーのiota",{"_index":1320,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["2回以上トークンを取り出してはいけません。その結果、送信側が受信側にすべてのトークンを転送しない場合でも、入力トランザクションはアドレスからすべてのiotaトークンを取り出す必要があります。残りのiota",{"_index":353,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{}}}],["2番目のトランザクションの詳細を表示するには、parent",{"_index":414,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/send-bundle":{}}}],["2種類のイベントをトリガできます。1つはバンドルがペンディング状態にあるとき、もう1",{"_index":2516,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/listen-to-events":{},"docs/iota-java/0.1/account-module/how-to-guides/listen-to-events":{},"docs/iota-js/0.1/account-module/how-to-guides/listen-to-events":{}}}],["2種類のリスナがあります。1つはチャネルを使用するもので、もう1",{"_index":2515,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/listen-to-events":{}}}],["2行の下に秘密の81",{"_index":1522,"docTitle":{},"docBody":{"docs/utils/0.1/community/mam-watcher/overview":{}}}],["2進数では、データは1または0として表すことができます。これらの値はビットと呼ばれます。8ビットは1バイトに相当し、256（28",{"_index":386,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/trinary":{}}}],["3",{"_index":68,"docTitle":{"docs/dev-essentials/0.1/concepts/trinary":{}},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/dev-essentials/0.1/concepts/the-tangle":{},"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{},"docs/dev-essentials/0.1/concepts/trinary":{},"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{},"docs/dev-essentials/0.1/references/glossary":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{},"docs/node-software/0.1/iri/how-to-guides/interact-with-an-iri-node":{},"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node":{},"docs/node-software/0.1/chronicle/how-to-guides/get-started":{},"docs/node-software/0.1/goshimmer/how-to-guides/subscribe-to-events":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/wallets/0.1/trinity/concepts/hardware-wallet":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{},"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/utils/0.1/official/tangle-certificate/overview":{},"docs/blueprints/0.1/data-marketplace/overview":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/blueprints/0.1/doc-immutability/architecture":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["3+)とpip",{"_index":719,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/interact-with-an-iri-node":{},"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node":{}}}],["3.6",{"_index":2569,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["30",{"_index":49,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-bundle":{},"docs/dev-essentials/0.1/how-to-guides/send-bundle":{},"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{},"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["300,000台の車両が5分ごとに1つのトランザクションを送信できるとします。過去のトランザクションは、最先端のクラウドソリューションに匹敵する時間内に取得する必要があります。クロニクルapi",{"_index":971,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/references/design-goals":{}}}],["30秒ごとに、transfer",{"_index":2512,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-account":{}}}],["365",{"_index":1273,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["384",{"_index":455,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/glossary":{}}}],["384を使用したkerl",{"_index":319,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{}}}],["3x8=24",{"_index":2294,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["3つのmam",{"_index":2692,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/how-to-guides/create-public-channel":{},"docs/iota-js/0.1/mam/how-to-guides/create-restricted-channel":{}}}],["3つのセキュリティレベルをすべて使用することにより、ほぼ無制限の数のアドレスと秘密鍵のペア（957",{"_index":321,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{}}}],["3つの公式ライブラリがあります。これらのライブラリと同様に、iota",{"_index":93,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{}}}],["3で、これは重み付きランダムウォークが過去の3",{"_index":462,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/glossary":{}}}],["3でダウンロードしたubuntu",{"_index":2904,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["3のアドレスから80i",{"_index":364,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{}}}],["3の値が使用されます。つまり、rwは3つ前のマイルストーンから開始します。null値は深さ3",{"_index":2730,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["3はraspberri",{"_index":2810,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/connect":{}}}],["3文字のチェックサムを書き留め、チェックサムをシードとは別に保存してください。このチェックサムは、正しいシードを入力したかどうかを確認できる安全メカニズムです。間違った文字を1",{"_index":1105,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/back-up-seed":{}}}],["3進コンピューターの処理の基本単位。トリットはしばしば1、0",{"_index":468,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/glossary":{}}}],["3進法3",{"_index":467,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/glossary":{}}}],["3進法では、データは1、0",{"_index":387,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/trinary":{}}}],["4",{"_index":73,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{},"docs/dev-essentials/0.1/references/structure-of-a-bundle":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{},"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node":{},"docs/node-software/0.1/chronicle/how-to-guides/get-started":{},"docs/node-software/0.1/goshimmer/how-to-guides/subscribe-to-events":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/utils/0.1/official/tangle-certificate/overview":{},"docs/blueprints/0.1/doc-immutability/architecture":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["4.0",{"_index":2172,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["4.1",{"_index":2090,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["4.11.12",{"_index":2348,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["4.12",{"_index":2338,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["4.2",{"_index":2092,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["4.5.1",{"_index":1171,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["4.6",{"_index":474,"docTitle":{},"docBody":{"docs/client-libraries/0.1/introduction/overview":{}}}],["40",{"_index":1731,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["400",{"_index":812,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{},"docs/node-software/0.1/iri/references/api-errors":{},"docs/wallets/0.1/trinity/concepts/hardware-wallet":{},"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["401",{"_index":852,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-errors":{}}}],["4gb",{"_index":588,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["4gb以上の空きram",{"_index":1532,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["4x3",{"_index":2764,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["4つのトライトはエリアコードで、およそ100",{"_index":1608,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["4つのリーフがあり、それぞれがコーディネーターの公開鍵と秘密鍵のペアの1つを表します。これらの鍵ペアは事前に作成され、コーディネーターのアドレスを計算するために使用されます。マークル木内の鍵ペアの総数は、公式2&lt;sup>depth&lt;/sup>のdepthによって異なります。この例では、マークル木のdepthは2",{"_index":305,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/the-tangle":{}}}],["4つの隣接ノードへの接続を試み、さらに4",{"_index":975,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/introduction/overview":{}}}],["4でiota",{"_index":1307,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{}}}],["4のiri",{"_index":618,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["4コアの仮想マシンでは約15",{"_index":1048,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["5",{"_index":77,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/dev-essentials/0.1/how-to-guides/derive-addresses-from-private-keys":{},"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node":{},"docs/node-software/0.1/chronicle/how-to-guides/get-started":{},"docs/node-software/0.1/goshimmer/how-to-guides/subscribe-to-events":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/blueprints/0.1/doc-immutability/architecture":{},"docs/blueprints/0.1/p2p-energy/deployment-and-testing":{},"docs/smartcity/0.1/astropiota/references/sensehat-specs":{}}}],["5.1",{"_index":2415,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{}}}],["5.2",{"_index":2409,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{}}}],["50",{"_index":1100,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/concepts/hardware-wallet":{}}}],["50,000",{"_index":557,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/local-snapshot":{}}}],["50,100）より小さいインデックスを持つマイルストーンによって確定されたトランザクションを刈り取ります。その結果、マイルストーン940,000と990,100",{"_index":559,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/local-snapshot":{}}}],["51037",{"_index":2379,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{}}}],["55",{"_index":50,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-bundle":{}}}],["5はトランザクション2と3を直接参照し、トランザクション6はトランザクション3を介して間接的にトランザクション5",{"_index":32,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-the-tangle":{}}}],["5分間待ってから、check_chang",{"_index":1357,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["5）の場合、フレームバッファドライバ/dev/fb1からアクセスできます。これは、sens",{"_index":2853,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/references/sensehat-specs":{}}}],["5）を備えた8×8",{"_index":2848,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/references/sensehat-specs":{}}}],["6",{"_index":81,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/dev-essentials/0.1/concepts/reattach-rebroadcast-promote":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{},"docs/iota-java/0.1/account-module/how-to-guides/create-account":{},"docs/smartcity/0.1/astropiota/references/sensehat-specs":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["60",{"_index":1081,"docTitle":{},"docBody":{"docs/compass/0.1/references/merkle-tree-compute-times":{}}}],["60fpsのリフレッシュレートと15ビットの色解像度（rgb",{"_index":2847,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/references/sensehat-specs":{}}}],["6282",{"_index":2084,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["64",{"_index":590,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{},"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/general/0.1/references/troubleshooting":{}}}],["6550",{"_index":2094,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["6775",{"_index":2083,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["67％（4つのうち3",{"_index":1103,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/concepts/node-quorum":{}}}],["6lowpan",{"_index":2012,"docTitle":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{}}}],["6か7",{"_index":895,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/troubleshooting":{}}}],["6があるアドレスから10miを取り出すようにノードに指示した場合、トランザクション6の親トランザクションの履歴がトランザクション6のアドレスに少なくとも10mi",{"_index":300,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/the-tangle":{}}}],["6がマイルストーンの場合、トランザクション5、3、2、および1",{"_index":34,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-the-tangle":{}}}],["6つのトライトはローカルコードで、14",{"_index":1611,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["6はトランザクション5を直接参照しているため、トランザクション5はトランザクション6の親トランザクションです。同様に、トランザクション6はトランザクション3を間接的に参照しているため、トランザクション3はトランザクション6",{"_index":299,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/the-tangle":{}}}],["6コマンドライン引数を追加する必要があります。ネットワークインターフェイス名も追加する必要があります。ネットワークインターフェイス名がなければ、クライアントはsbc",{"_index":2935,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["7",{"_index":92,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["75",{"_index":1653,"docTitle":{},"docBody":{"docs/utils/0.1/official/tryte-compress/overview":{}}}],["8",{"_index":97,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/blueprints/0.1/doc-immutability/architecture":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iota-js/0.1/core/introduction/overview":{},"docs/iota-js/0.1/account-module/introduction/overview":{},"docs/iota-js/0.1/mam/introduction/overview":{},"docs/smartcity/0.1/astropiota/how-to-guides/build":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["8+)またはpython",{"_index":718,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/interact-with-an-iri-node":{},"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node":{}}}],["8.9",{"_index":491,"docTitle":{},"docBody":{"docs/smartcity/0.1/introduction/overview":{}}}],["802.15.4",{"_index":2064,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["8025",{"_index":2082,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["8066",{"_index":2085,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["80と443",{"_index":1568,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["81",{"_index":63,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{},"docs/dev-essentials/0.1/references/glossary":{},"docs/utils/0.1/community/mam-watcher/overview":{},"docs/iota-js/0.1/mam/references/api-reference":{}}}],["81トライトである必要があります。アドレスが90トライトである場合、最後の9トライトはチェックサムです。9",{"_index":846,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-errors":{}}}],["81トライトのsubse",{"_index":323,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{}}}],["81トライトのセグメントに分割されます。次に、各セグメントは26",{"_index":325,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{}}}],["81トライトのハッシュ値に変換することです。このハッシュ値はトランザクションに固有のものです。トランザクションの内容の1",{"_index":293,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/introduction/overview":{}}}],["81文字未満で構成されるシードを入力すると、ライブラリはそのシードの末尾に9を追加して81",{"_index":1657,"docTitle":{},"docBody":{"docs/utils/0.1/official/tryte-compress/overview":{}}}],["81文字未満のシードを入力した場合、ライブラリは末尾に9を追加して81",{"_index":143,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{}}}],["8gbのram",{"_index":1036,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["8、またはnode.j",{"_index":130,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/getting-started/0.1/tutorials/send-iota-tokens":{},"docs/dev-essentials/0.1/how-to-guides/convert-data-to-trytes":{},"docs/dev-essentials/0.1/how-to-guides/create-an-address":{},"docs/dev-essentials/0.1/how-to-guides/derive-addresses-from-private-keys":{},"docs/dev-essentials/0.1/how-to-guides/send-bundle":{},"docs/dev-essentials/0.1/how-to-guides/check-transaction-confirmation":{},"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{},"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{},"docs/utils/0.1/official/iota-area-codes/overview":{},"docs/utils/0.1/official/proof-of-existance/overview":{},"docs/utils/0.1/official/tangle-certificate/overview":{},"docs/utils/0.1/official/tryte-compress/overview":{},"docs/iota-js/0.1/account-module/how-to-guides/create-account":{}}}],["8つの隣接ノードを持つことができます。各ノードは接続する4つの隣接ノードを選択し、自分を選択した他の4",{"_index":997,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["8以上かpython（3以上）とpip",{"_index":1022,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/subscribe-to-events":{}}}],["9",{"_index":91,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{},"docs/wallets/0.1/trinity/how-to-guides/send-a-transaction":{},"docs/wallets/0.1/trinity/how-to-guides/create-a-qr-code":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["90",{"_index":2377,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{}}}],["90トライトです。余分な9",{"_index":288,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/introduction/overview":{}}}],["990,100",{"_index":549,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/local-snapshot":{}}}],["9999",{"_index":1274,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["99％以上が無効になっています（出典：mckinsey",{"_index":1677,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/overview":{}}}],["9文字のチェックサムが81文字のアドレスの後ろに追加されるので、ユーザーは自分のシード（81文字）とアドレス（90",{"_index":451,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/glossary":{}}}],["_\"）を続けることができます。最大許容長は40",{"_index":1725,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["_\\_",{"_index":922,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["abc123",{"_index":1805,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["abc123の登録id",{"_index":1802,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["abil",{"_index":2022,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["absent",{"_index":851,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-errors":{}}}],["abstract",{"_index":2327,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/read-sensor-data":{}}}],["accept",{"_index":2374,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{}}}],["accepted隣接ノードがない場合は、autopeeringtcp/udpポート（14626",{"_index":1002,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["access",{"_index":2329,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["account",{"_index":203,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-the-trinity-wallet":{},"docs/iota-js/0.1/introduction/overview":{},"docs/iota-java/0.1/introduction/overview":{},"docs/iota-go/0.1/introduction/overview":{},"docs/wallets/0.1/trinity/how-to-guides/create-an-account":{},"docs/wallets/0.1/trinity/how-to-guides/manage-your-account":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/iota-go/0.1/account-module/how-to-guides/create-plugin":{}}}],["accountlisten",{"_index":2611,"docTitle":{},"docBody":{"docs/iota-java/0.1/account-module/how-to-guides/listen-to-events":{}}}],["accountplugin",{"_index":2613,"docTitle":{},"docBody":{"docs/iota-java/0.1/account-module/how-to-guides/create-plugin":{}}}],["act",{"_index":2039,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["action",{"_index":1464,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["acycl",{"_index":30,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-the-tangle":{},"docs/dev-essentials/0.1/concepts/the-tangle":{}}}],["ad",{"_index":76,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{}}}],["adapt",{"_index":2251,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/iota-js/0.1/account-module/how-to-guides/create-account":{}}}],["add",{"_index":1984,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/references/troubleshooting":{},"docs/contribution/0.1/style-guide":{}}}],["add()メソッドからのレスポンスにはipfsハッシュが含まれています。これは、タングルに添付される前にメタデータとsha256",{"_index":1833,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/architecture":{}}}],["addit",{"_index":497,"docTitle":{},"docBody":{"docs/node-software/0.1/introduction/overview":{},"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["addneighbor",{"_index":807,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{}}}],["addneighbors(uri",{"_index":2619,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["address",{"_index":205,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-the-trinity-wallet":{},"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{},"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{},"docs/dev-essentials/0.1/how-to-guides/derive-addresses-from-private-keys":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/update-the-iri":{},"docs/node-software/0.1/iri/references/api-errors":{},"docs/node-software/0.1/chronicle/references/data-model":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{},"docs/general/0.1/how-to-guides/set-up-virtual-machine":{},"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["addresscountaggreg",{"_index":774,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["address、value、obsoletetag、currentindex、lastindex、そしてtimestampフィールドの値のハッシュ値から導出されます。このバンドルハッシュは、パッケージを保証するために各トランザクションのbundl",{"_index":334,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{}}}],["address：str",{"_index":2721,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["admin_pass_phras",{"_index":1648,"docTitle":{},"docBody":{"docs/utils/0.1/official/tangle-certificate/overview":{}}}],["administr",{"_index":2880,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["advanc",{"_index":2885,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["affair",{"_index":1941,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["again",{"_index":2216,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["allow",{"_index":499,"docTitle":{},"docBody":{"docs/node-software/0.1/introduction/overview":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["allwindowedstreamはタプル内のすべてのreduceされたパーティションを含みます。各パーティションは、構造（address、amount_of_transactions）内に1",{"_index":777,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["alpha",{"_index":563,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/tip-selection":{}}}],["alpha設定オプションを使用して荷重に変換されます。最後に、0とすべての荷重の合計の間のランダムな値が生成され、0の値に達するまで承認トランザクションの荷重によって減算されます。ランダムな値を0",{"_index":575,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/tip-selection":{}}}],["alreadi",{"_index":1478,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/references/troubleshooting":{}}}],["alway",{"_index":677,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["amazon",{"_index":233,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{},"docs/compass/0.1/references/merkle-tree-compute-times":{},"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/blueprints/0.1/p2p-energy/deployment-and-testing":{},"docs/blueprints/0.1/tangle-data-storage/architecture":{}}}],["amount",{"_index":1144,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/create-deep-link":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{}}}],["and/or",{"_index":2185,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{}}}],["android",{"_index":1129,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/send-a-transaction":{},"docs/wallets/0.1/trinity/how-to-guides/receive-a-transaction":{},"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["anoth",{"_index":2295,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["anyth",{"_index":2416,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-programmer":{}}}],["apach",{"_index":729,"docTitle":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{},"docs/blueprints/0.1/doc-immutability/architecture":{},"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["api",{"_index":59,"docTitle":{"docs/node-software/0.1/iri/references/api-reference":{},"docs/node-software/0.1/iri/references/api-errors":{},"docs/node-software/0.1/chronicle/references/api-reference":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{},"docs/wallets/0.1/hub/references/grpc-api-reference":{},"docs/wallets/0.1/hub/references/restful-api-reference":{}},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/dev-essentials/0.1/how-to-guides/create-an-address":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{},"docs/node-software/0.1/iri/how-to-guides/interact-with-an-iri-node":{},"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{},"docs/node-software/0.1/iri/references/api-reference":{},"docs/node-software/0.1/iri/references/api-errors":{},"docs/node-software/0.1/iri/references/best-practice":{},"docs/node-software/0.1/iri/references/iri-configuration-options":{},"docs/node-software/0.1/chronicle/introduction/overview":{},"docs/node-software/0.1/chronicle/references/api-reference":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/wallets/0.1/hub/introduction/overview":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/wallets/0.1/hub/references/grpc-api-reference":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/wallets/0.1/hub/references/database-tables":{},"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/utils/0.1/official/iota-area-codes/overview":{},"docs/utils/0.1/official/tangle-certificate/overview":{},"docs/utils/0.1/official/tryte-compress/overview":{},"docs/blueprints/0.1/data-marketplace/overview":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/blueprints/0.1/p2p-energy/architecture":{},"docs/blueprints/0.1/p2p-energy/deployment-and-testing":{},"docs/blueprints/0.1/tangle-data-storage/architecture":{},"docs/blueprints/0.1/tangle-data-storage/deployment-and-testing":{},"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{},"docs/iota-go/0.1/account-module/how-to-guides/create-account":{},"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{},"docs/iota-java/0.1/account-module/how-to-guides/create-account":{},"docs/iota-js/0.1/core/introduction/overview":{},"docs/iota-js/0.1/core/how-to-guides/create-custom-methods":{},"docs/iota-js/0.1/account-module/introduction/overview":{},"docs/iota-js/0.1/account-module/how-to-guides/create-account":{},"docs/iota-js/0.1/mam/introduction/overview":{}}}],["api.iota.org/feed/training。フィードリストはページングをサポートし、必要に応じて表示します。ページの目次は、レンダリングされたアイテムのh2",{"_index":2996,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["apiがあります。api",{"_index":290,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/introduction/overview":{}}}],["apiがあります。このapi",{"_index":1402,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{},"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["apiがどのように応答し、どのホストがapi",{"_index":878,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/iri-configuration-options":{}}}],["apiが提供されます。オブジェクトリポジトリに保存される情報には、iotaタングル上でアクセス可能なチャネルのルートアドレスや制限付きmamチャネルが使用されている場合、mamチャネルに保存されている情報を復号化するために必要な暗号化キー（サイドキーと呼ばれます）が含まれます。次のタプルが作成され、オブジェクトリポジトリに保存されます。&amp;lt;assetuniqueid",{"_index":1876,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["apiとして書かれたバックエンドの2つの部分から成ります。このpoc",{"_index":1820,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/architecture":{},"docs/blueprints/0.1/tangle-data-storage/deployment-and-testing":{}}}],["apiとの通信などのタングル操作を実行する必要があります。アプリケーションのデータ消費部分はより複雑であり、デバイスのデータストリームへのアクセスと引き換えにiota",{"_index":1697,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/architecture":{}}}],["apiなどを介して定期的にデータを読み取るための簡単な方法を備えているセンサーであれば、データマーケットプレイスで使用できます。マーケットプレイスにデータを送信するには、スクリプトを実行してデータをiota",{"_index":1703,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/architecture":{}}}],["apiに公開されていません。たとえば、アドレスのシードuuid",{"_index":1314,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/query-the-database":{}}}],["apiのgettrytesエンドポイントへのcurlリクエストを作成します。トランザクションハッシュをhashes配列に貼り付け、urlをhttp&#x3a;//localhost:4000/apiなどのクロニクルノードのurl",{"_index":947,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["apiのいずれかを使用することを選択できます。これらのapiは、iota",{"_index":1209,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/introduction/overview":{}}}],["apiの形式を取ります。生産者と消費者の両方が自身をグリッドに登録するために使用します。エンティティが登録されると、グリッドはエンティティのmam出力チャネルの監視を開始します。登録が成功すると、idが返されます。このid",{"_index":1796,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["apiは2",{"_index":1825,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/architecture":{}}}],["apiは、webサーバー上でホストされる通常のweb",{"_index":1795,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["apiは、永続的に情報を格納する必要があるアーキテクチャのどの部分でも使用できます。apiは標準データベースのcrud操作をサポートし、すべての呼び出しでエンティティ登録id",{"_index":1799,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["apiはベータ版であり、変更される可能性があります。実稼働アプリケーションではこのapi",{"_index":951,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/references/api-reference":{},"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["apiはベータ版であり、変更される可能性があります。運用版アプリケーションではこのapi",{"_index":806,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{}}}],["apiまたはgrpc",{"_index":1208,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/introduction/overview":{}}}],["apiまたはrest",{"_index":1231,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["apiを介してscylla",{"_index":950,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/references/api-reference":{}}}],["apiを介してマイルストーンをiri",{"_index":1051,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["apiを使い始めるでgrpc",{"_index":1511,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/troubleshooting":{}}}],["apiを使用してiac",{"_index":1628,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["apiを使用してscylla",{"_index":945,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["apiを使用してtangl",{"_index":1640,"docTitle":{},"docBody":{"docs/utils/0.1/official/tangle-certificate/overview":{}}}],["apiを使用して、緯度と経度から独自のiacにエンコードし、iacをトランザクションのtag",{"_index":1614,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["apiを使用して、証明書を管理します。たとえば、証明書を間違えて無効にしたい場合は、setblacklist",{"_index":1652,"docTitle":{},"docBody":{"docs/utils/0.1/official/tangle-certificate/overview":{}}}],["apiを使用しているため、すべてのzmq",{"_index":737,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["apiを使用して座標からiacを作成し、トランザクションのtagフィールドにiacを追加してdevnetに送信します。devnetは、トークンが無料であること以外は、mainnetほとんど同じです。devnetに送信するトランザクションは、mainnet",{"_index":1620,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["apiを使用して情報を交換できます。この設計図のためにmam",{"_index":1871,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["apiを使用するには、iota",{"_index":1642,"docTitle":{},"docBody":{"docs/utils/0.1/official/tangle-certificate/overview":{}}}],["apiを通してiri",{"_index":193,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/run-your-own-iri-node":{}}}],["apiエンドポイントの一覧については、iri",{"_index":1073,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["apiエンドポイントはlatestmilestoneindexとlatestsolidsubtanglemilestoneindexの情報を返します。この情報を見るためにiri",{"_index":518,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/the-ledger":{}}}],["apiエンドポイントへのすべてのリクエストはiri",{"_index":782,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{}}}],["apiエンドポイントを介してノードと通信するクライアントアプリケーションの場合、aw",{"_index":871,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/best-practice":{}}}],["apiキー、およびcoinmarketcap",{"_index":1549,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["apiキーとcoinmarketcap",{"_index":1544,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["apiキーは/config/tools/tool",{"_index":1552,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["apiサーバーまたはrest",{"_index":1267,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["apiサーバーを公開すると、httpエンドポイントを介してハブと対話できます。これらのエンドポイントを使用すると、ハブデータベースおよびiotaノードと対話することにより、ユーザーのiotaトークンを管理できます。このガイドでは、rest",{"_index":1309,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{}}}],["apiサーバー：node.js（express",{"_index":1812,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/deployment-and-testing":{}}}],["apiメソッドの詳細については、api",{"_index":2473,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{}}}],["apiメソッドを呼び出して、着信トランザクション（numberofalltransactions）と発信トランザクション数（numberofsenttransactions）の両方を確認します。隣接ノードがiri",{"_index":897,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/troubleshooting":{}}}],["apiリクエストが失敗すると、レスポンスボディにhttpエラーコードとjson",{"_index":843,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-errors":{}}}],["apiリクエストをiriノードに送信するために使用します。jqは、json",{"_index":647,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["apiリクエストをスパミングすることによって、iriノードのオープンapiポートを悪用することができます。ipアドレスでapiリクエストを制限したり、apiリクエストの数を制限したりするには、iri",{"_index":681,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{}}}],["api呼び出しにreference引数を指定した場合、そのトランザクションが部分グラフ内にある場合にのみ、branchtransactionウォークはrefer",{"_index":568,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/tip-selection":{}}}],["api呼び出しの成功結果として、競合しない2",{"_index":566,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/tip-selection":{}}}],["api呼び出しの組み合わせで行われます。mam",{"_index":1787,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["api呼び出しはコストがかかる可能性があるため、ノード所有者はノードを一般に公開しないことがよくあります。そのため、iota",{"_index":24,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-node":{}}}],["api呼び出しは同期です。そのため、apiをバックグラウンドスレッドまたはワーカースレッドから呼び出して、apiがui",{"_index":2591,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["api呼び出しをハブに送信するためのテンプレートを作成します。'http&#x3a;//127.0.0.1:8888'url",{"_index":1338,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["api呼び出しを作成できます。discord",{"_index":1376,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/integrate-hub":{}}}],["api呼び出しを使用します。このメソッドは、使用済みアドレスの合計残高を1",{"_index":1382,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{}}}],["api呼び出しを行うプロセスを説明します。このガイドの最後には、iota",{"_index":1319,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["api呼び出しを送信するリバースプロキシサーバのドメイン名を1",{"_index":873,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/best-practice":{}}}],["api呼び出しを送信する前に、api呼び出しを作成できるgrpc",{"_index":1290,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{}}}],["api（get",{"_index":1834,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/architecture":{}}}],["api）を通じて、iotaを取引所に統合する簡単な方法を提供します。rest",{"_index":1207,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/introduction/overview":{}}}],["app/sensor_receiver.c",{"_index":2398,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["app/serv",{"_index":2393,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["applianc",{"_index":2112,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["applic",{"_index":1123,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{},"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{}}}],["applications/utilities/termin",{"_index":1118,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{}}}],["appname、appversion、latestmilestone、neighbors、tip",{"_index":2799,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["apt",{"_index":1233,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["architectur",{"_index":906,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/introduction/overview":{},"docs/node-software/0.1/chronicle/references/architecture":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{},"docs/blueprints/0.1/data-marketplace/architecture":{},"docs/blueprints/0.1/doc-immutability/overview":{},"docs/blueprints/0.1/doc-immutability/architecture":{},"docs/blueprints/0.1/p2p-energy/architecture":{},"docs/blueprints/0.1/tangle-data-storage/architecture":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["archive（ppa",{"_index":1242,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["arduino",{"_index":1978,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{}}}],["area",{"_index":2019,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["aren't",{"_index":2188,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{}}}],["argon2",{"_index":1211,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/introduction/overview":{}}}],["argument",{"_index":2269,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["arm",{"_index":2192,"docTitle":{"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{}},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{},"docs/iot/0.1/references/troubleshooting":{}}}],["arm64",{"_index":2479,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{}}}],["armbian",{"_index":2254,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["armシステムアーキテクチャ（32ビットまたは64",{"_index":2313,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/install-go-on-sbc":{}}}],["array",{"_index":2735,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["art",{"_index":2363,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{}}}],["articl",{"_index":1943,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["artimaガイドはjreでscala",{"_index":744,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["ascii",{"_index":834,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{}}}],["asciitotrytes()メソッドは基本的なascii文字のみをサポートします。その結果、アクセントやウムラウトなどの発音区別符号やひらがなや漢字などの日本語（2バイト文字）はサポートされておらず、invalid_ascii_char",{"_index":144,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/dev-essentials/0.1/how-to-guides/convert-data-to-trytes":{},"docs/dev-essentials/0.1/how-to-guides/send-bundle":{}}}],["asciiデータをトライトに変換し、mamチャネルに公開する前にjson",{"_index":2693,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/how-to-guides/create-restricted-channel":{}}}],["asciiデータをトライトに変換し、mamチャネルに発行する前にjson",{"_index":2690,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/how-to-guides/create-public-channel":{}}}],["ascii文字に変換するために、trytestoascii",{"_index":395,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/convert-data-to-trytes":{}}}],["ascファイルと.appimageファイルが両方とも~/download",{"_index":1128,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{}}}],["ask",{"_index":2279,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["aspect",{"_index":1906,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["asset",{"_index":1851,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/overview":{}}}],["assetcustodianid",{"_index":1862,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["assetcustodianidは最初はassetownerid",{"_index":1867,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["assetownerid",{"_index":1861,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["assetowneridに関する情報は、アプリを通じて挿入されるか、外部の情報源から取得されます（アプリを使用するための登録サーバーなど。この場合は会社のvat",{"_index":1866,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["assetsセクションにある.ascファイルと.gpg",{"_index":1126,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{}}}],["assetuniqueidは、qrコードスキャンによって読み取られ、登録apiを通じてアクセスするassetuniqueidサーバー（例：gs1",{"_index":1864,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["assign",{"_index":2432,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["astropiota",{"_index":479,"docTitle":{"docs/smartcity/0.1/astropiota/introduction/overview":{},"docs/smartcity/0.1/astropiota/how-to-guides/build":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{},"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}},"docBody":{"docs/client-libraries/0.1/introduction/overview":{},"docs/smartcity/0.1/astropiota/introduction/overview":{},"docs/smartcity/0.1/astropiota/how-to-guides/build":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{},"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["astropiotaはastropiのクローンです。astropiは、iss（国際宇宙ステーション）でraspberri",{"_index":2743,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/introduction/overview":{}}}],["astropiotaはjavascriptで書かれており、sens",{"_index":2752,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/introduction/overview":{}}}],["astropiotaは、タングルを使用してローカル環境データを追跡するためにmamに接続されている国際宇宙ステーションからのastropiのクローンです。地球上で、astropiota",{"_index":489,"docTitle":{},"docBody":{"docs/smartcity/0.1/introduction/overview":{}}}],["astropiotaはタングル上のローカル環境データを追跡するためにマスク認証メッセージング（mam）を使用します。地球上で、astropiota",{"_index":2747,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/introduction/overview":{}}}],["astropiotaを実行したい場合は、sshを介して対話するためにastropiotaのネットワークアドレスが必要です。raspberri",{"_index":2808,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/connect":{}}}],["astropiotaを実行するには、正しいハードウェアとraspberri",{"_index":2757,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["astropiotaサンプルコードは、dav",{"_index":2754,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/introduction/overview":{}}}],["astropiotaプロジェクトで使用されているsens",{"_index":2842,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/references/sensehat-specs":{}}}],["astropiota送信者はsens",{"_index":2818,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["astropiは、温度、湿度、その他のデータを検知するためにraspberri",{"_index":2744,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/introduction/overview":{}}}],["atmel",{"_index":2856,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/references/sensehat-specs":{}}}],["attach",{"_index":1560,"docTitle":{"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iota-js/0.1/mam/introduction/overview":{},"docs/iota-js/0.1/mam/references/api-reference":{}}}],["attachmenttimestamp",{"_index":381,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/reattach-rebroadcast-promote":{}}}],["attachtotangl",{"_index":813,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{}}}],["attachtotangle(trunktransact",{"_index":2621,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["attachtotangleapi",{"_index":864,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/best-practice":{}}}],["attachtotangleをオーバーライドして別のノードを使用してpowを実行したり、pow",{"_index":2706,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["attachtotangleエンドポイントはリソースを大量に消費します。結果として、attachtotangleエンドポイントへの多くの呼び出しは時々ノードをクラッシュさせることがあります。この問題を解決するには、専用のプロキシサーバーをインストールして、ノードのプルーフオブワーク（pow",{"_index":780,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{}}}],["attachtotangle関数によって使用されます。現在、mainnetとspamnnetで14、他のほとんどのdevnetで9です。null値はminweightmagnitudeを9",{"_index":2732,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["attachtotangle：funct",{"_index":2705,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["attiny88",{"_index":2857,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/references/sensehat-specs":{}}}],["authent",{"_index":484,"docTitle":{},"docBody":{"docs/iota-js/0.1/introduction/overview":{},"docs/wallets/0.1/trinity/how-to-guides/manage-your-security-settings":{},"docs/blueprints/0.1/data-marketplace/overview":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iota-js/0.1/mam/introduction/overview":{}}}],["auto",{"_index":1058,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["autoconfirm",{"_index":438,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{}}}],["automobil",{"_index":1919,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["automot",{"_index":1931,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["autopeeringtcp/udpポート（14626",{"_index":1015,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["avail",{"_index":854,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-errors":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["avoid",{"_index":2441,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["avxまたはss",{"_index":793,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{}}}],["avxベースのpow用のpow_avx",{"_index":2475,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{}}}],["awesom",{"_index":1184,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["awesometestplugin",{"_index":2615,"docTitle":{},"docBody":{"docs/iota-java/0.1/account-module/how-to-guides/create-plugin":{}}}],["awsには、クラウド上でlinux",{"_index":2894,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["awsまたはmicrosoft",{"_index":1699,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/architecture":{}}}],["axio",{"_index":1641,"docTitle":{},"docBody":{"docs/utils/0.1/official/tangle-certificate/overview":{}}}],["azur",{"_index":1700,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/architecture":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["aに100mi",{"_index":51,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-bundle":{}}}],["aに100miを送信したいとし、トークンが3つのアドレス0、1、2",{"_index":45,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-bundle":{}}}],["aのアドレスへ100mi",{"_index":53,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-bundle":{}}}],["b",{"_index":86,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["b+（b",{"_index":2768,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["back",{"_index":2215,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{}}}],["background",{"_index":1716,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["background.svg",{"_index":1645,"docTitle":{},"docBody":{"docs/utils/0.1/official/tangle-certificate/overview":{}}}],["background.svgファイルと同じディレクトリにindex.j",{"_index":1646,"docTitle":{},"docBody":{"docs/utils/0.1/official/tangle-certificate/overview":{}}}],["badgerdbデータベースに保存されます。データベースディレクトリを保存するパスをdb",{"_index":2504,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-account":{}}}],["balanc",{"_index":169,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/receive-test-tokens":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["balanceev",{"_index":1407,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["balancesubscript",{"_index":1347,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["balancesubscriptionrequest",{"_index":1406,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["base",{"_index":2183,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/connect-programmer":{}}}],["bashrc",{"_index":2236,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{}}}],["basic",{"_index":1944,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["batch",{"_index":1495,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["baud",{"_index":2276,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["baud_rat",{"_index":2275,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["bazel",{"_index":917,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/compass/0.1/references/troubleshooting":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["bazelを使ってビルドし、dock",{"_index":1039,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["be",{"_index":1929,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["becom",{"_index":1901,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["befor",{"_index":1968,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["benefici",{"_index":2210,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{}}}],["best",{"_index":580,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/tip-selection":{},"docs/node-software/0.1/iri/references/best-practice":{}}}],["beta3&lt;/vers",{"_index":2582,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["between",{"_index":583,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/tip-selection":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["bigger",{"_index":2304,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["billion",{"_index":1897,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["bin",{"_index":2239,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{}}}],["bin/hub/hub",{"_index":1252,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["bin/signing_server/signing_serv",{"_index":1281,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["binari",{"_index":1510,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/troubleshooting":{},"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{}}}],["biometr",{"_index":1158,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/manage-your-security-settings":{}}}],["bit",{"_index":2292,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["black",{"_index":2423,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["blake2",{"_index":1768,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{}}}],["blake2b",{"_index":1769,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{}}}],["ble",{"_index":2203,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{}}}],["blue",{"_index":1098,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/concepts/hardware-wallet":{}}}],["bluetooth",{"_index":2028,"docTitle":{"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{}},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/references/troubleshooting":{}}}],["bluez",{"_index":2352,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["bme",{"_index":2404,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{}}}],["bme/bmp",{"_index":2174,"docTitle":{"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{}},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{}}}],["bmx280",{"_index":2322,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/read-sensor-data":{}}}],["board",{"_index":1959,"docTitle":{"docs/iot/0.1/how-to-guides/setup-sbc":{}},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{},"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["bootload",{"_index":1980,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{}}}],["bootstrap",{"_index":1578,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/iota-js/0.1/core/introduction/overview":{},"docs/iota-js/0.1/account-module/introduction/overview":{}}}],["bootstrapフラグが渡されると、コンパスは前のマイルストーンを順番に参照する一連の4",{"_index":1067,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["bootstrapフラグを渡す必要はありません（フラグを渡してもコンパスは起動しません）。ただし、コンパスがマイルストーンをiri",{"_index":1070,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["border",{"_index":2037,"docTitle":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/references/troubleshooting":{}}}],["bosch",{"_index":253,"docTitle":{"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{}},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{},"docs/blueprints/0.1/data-marketplace/architecture":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{}}}],["both",{"_index":1998,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["bottom",{"_index":2237,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{}}}],["bounci",{"_index":2572,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["bounti",{"_index":1094,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/introduction/overview":{}}}],["box",{"_index":2998,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["branch",{"_index":2966,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["branchtransact",{"_index":380,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/reattach-rebroadcast-promote":{},"docs/node-software/0.1/iri/references/api-reference":{},"docs/iota-js/0.1/core/introduction/overview":{}}}],["branchtransactionおよびtrunktransactionパラメーターは、gettransactionstoapprov",{"_index":814,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{}}}],["branchtransactionとtrunktransact",{"_index":157,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/node-software/0.1/iri/concepts/the-ledger":{}}}],["branchtransactionとtrunktransactionフィールドで参照できるタングル内の2",{"_index":356,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{}}}],["branchtransactionとtrunktransactionフィールドは、タングル内の2",{"_index":360,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{}}}],["branchtransactionフィールドとtrunktransactionフィールドのトランザクションハッシュを参照して、トランザクション（子トランザクション）を他の2",{"_index":294,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/introduction/overview":{}}}],["breadboard",{"_index":2141,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["breakout",{"_index":2120,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["broadcast",{"_index":1071,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["broadcastandstor",{"_index":2596,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{}}}],["broadcastbundle(tailtransactionhash",{"_index":2624,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["broadcasttransact",{"_index":816,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{}}}],["broadcasttransactions(tryt",{"_index":2625,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["brokerディレクトリ内のconfig.ex",{"_index":924,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["bt",{"_index":2883,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["budget",{"_index":2317,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/read-sensor-data":{}}}],["buffer",{"_index":764,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["buffersスキーマファイルによって生成されたクラスにラップされています。全てのprotocol",{"_index":735,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["buffersメッセージと属性はflink",{"_index":736,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["bug",{"_index":1093,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/introduction/overview":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["build",{"_index":1199,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["build.sbt",{"_index":755,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["built",{"_index":2244,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["bundl",{"_index":361,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{},"docs/dev-essentials/0.1/references/structure-of-a-bundle":{},"docs/node-software/0.1/chronicle/references/data-model":{},"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iota-js/0.1/core/introduction/overview":{}}}],["bundle_hash",{"_index":960,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/references/data-model":{}}}],["bundles、addresses、tags、approve",{"_index":820,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{}}}],["bundles、addresses、tags、approvees、hint",{"_index":952,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/references/api-reference":{}}}],["bundleフィールドの中で同じ値を持ちます。bundl",{"_index":342,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{}}}],["bundleフィールドの値をコピーし、devnetタングルエクスプローラを開き、bundl",{"_index":153,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{}}}],["busi",{"_index":2445,"docTitle":{},"docBody":{"docs/iot/0.1/references/troubleshooting":{}}}],["buy",{"_index":1492,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/connect-programmer":{}}}],["byte",{"_index":2077,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["c",{"_index":87,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/getting-started/0.1/references/quickstart-dev-handbook":{},"docs/client-libraries/0.1/introduction/overview":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{},"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["c:\\\\users\\\\yourname\\\\download",{"_index":1112,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{}}}],["cabl",{"_index":2143,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["caddyfileファイルを編集して、powプロキシサーバを設定します。この例では、ローカルホストでpowプロキシサーバを実行しています。外部ネットワークからpowプロキシサーバにアクセスしたい場合は、urlをパブリックip",{"_index":797,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{}}}],["caddyの設定オプションでdock",{"_index":1571,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["caddyはすべてのリクエストのログをrequests.log",{"_index":801,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{}}}],["caddy実行可能ファイルと同じディレクトリにcaddyfil",{"_index":796,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{}}}],["calcul",{"_index":2360,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["call",{"_index":2003,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["callback",{"_index":2620,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["callbackeventlisten",{"_index":2518,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/listen-to-events":{}}}],["callback：funct",{"_index":2738,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["callback：str",{"_index":2727,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["cancel",{"_index":1475,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["captur",{"_index":2780,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{},"docs/smartcity/0.1/astropiota/how-to-guides/connect":{}}}],["card",{"_index":1966,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/contribution/0.1/style-guide":{}}}],["case",{"_index":85,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/blueprints/0.1/p2p-energy/overview":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["castl",{"_index":2573,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["caus",{"_index":2461,"docTitle":{},"docBody":{"docs/iot/0.1/references/troubleshooting":{}}}],["ca証明書の有効期間は365日に設定されています。すぐ期限切れにならないように、9999",{"_index":1271,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["cda",{"_index":2500,"docTitle":{"docs/iota-go/0.1/account-module/references/cda-advice":{},"docs/iota-java/0.1/account-module/references/cda-advice":{},"docs/iota-js/0.1/account-module/references/cda-advice":{}},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-account":{},"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-go/0.1/account-module/references/cda-advice":{},"docs/iota-java/0.1/account-module/how-to-guides/create-account":{},"docs/iota-java/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-java/0.1/account-module/references/cda-advice":{},"docs/iota-js/0.1/account-module/how-to-guides/create-account":{},"docs/iota-js/0.1/account-module/how-to-guides/listen-to-events":{},"docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-js/0.1/account-module/references/cda-advice":{}}}],["cdaがtimeoutat",{"_index":2524,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-java/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["cdaがまだアクティブであることを確認した後で、cda",{"_index":2527,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-java/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["cdaでexpected_amountとmulti_useフィールドを指定することはできません。cda条件に関する詳細なアドバイスについては、faq",{"_index":2523,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-java/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["cdaで残高の大部分を維持することをお勧めします。こうすることで、支払いをより速く、そしてより少ないトランザクションですみます。そのために、利用可能残高を新しいcda",{"_index":2536,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-java/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["cdaにトランザクションを送信するには、マグネットリンクをcda",{"_index":2540,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-java/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["cdaにトランザクションを送信するには、マグネットリンクをparsecdamagnet()メソッドに渡し、その結果をsendtocda",{"_index":2669,"docTitle":{},"docBody":{"docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["cdaに預け入れることを決定した場合はtru",{"_index":2531,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["cdaの最後の9文字はチェックサムで、アドレスとそのアドレスのすべての条件のハッシュ値です。トリニティやdevent蛇口はまだcdaをサポートしていないため、このチェックサムは、トリニティやdev",{"_index":2528,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-java/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["cdaは、バンドルの作成、送信、および確定にかかる時間内に期限切れになる可能性があります。そのため、cdaの条件に応じて、cdaに預け入れるかどうかを決定する必要があります。この意思決定プロセスを自動化するために、cdaに預け入れるかどうかについての決定（trueまたはfals",{"_index":2530,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["cdaは、定義した時間が経過すると失効します。アカウントにカスタムの時間ソースを使用させるには、現在の時間をミリ秒で出力するtimesourceメソッドを作成し、timesourceメソッドをaccount",{"_index":2663,"docTitle":{},"docBody":{"docs/iota-js/0.1/account-module/how-to-guides/create-account":{}}}],["cdaはアカウント内でのみ使用でき、汎用クライアントライブラリメソッドでは使用できません。故に、cda",{"_index":2526,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-java/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["cdaは記述的なオブジェクトなので、送信する前にcdaを任意の形式にシリアル化できます。generatecda()メソッドは以下のフィールドを持つcdaオブジェクトを返します。cda",{"_index":2538,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-java/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["cdaをsendoracleオブジェクトのoktosend",{"_index":2534,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["cdaをマグネットリンクにシリアル化するには、@iota/cdaモジュールのserializecdamagnet",{"_index":2668,"docTitle":{},"docBody":{"docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["cdaをマグネットリンクにシリアル化するには、cdaオブジェクトのasmagnetlink",{"_index":2539,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["cdaを作成し、利用可能残高の合計をそのcda",{"_index":2667,"docTitle":{},"docBody":{"docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["cdaを作成するとき、cdaがどのような条件を持つ必要があるのかを事前に知ることが難しい場合があります。この記事には、cda",{"_index":2551,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/references/cda-advice":{},"docs/iota-java/0.1/account-module/references/cda-advice":{},"docs/iota-js/0.1/account-module/references/cda-advice":{}}}],["cdaを作成するときに、timeoutatフィールドを指定して、アクティブか期限切れかを定義します。iotaトークンをアクティブなアドレスに預け入れることができますが、アクティブなアドレスからiotaトークンを取り出すことはできません。逆に期限切れのアドレスからはiotaトークンを取り出すことができますが、期限切れのアドレスにiota",{"_index":2520,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-java/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["cdaを使用して、使用済みアドレスからの取り出しリスクを軽減します。誰かにiotaトークンを要求すると、一定期間アクティブなcdaを作成できます。このようにして、その時間後にのみそのcdaからiotaトークンを取り出すつもりであることを送信者に知らせます。その結果、送信者は、cdaに残っている時間に応じて、iota",{"_index":2501,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-account":{},"docs/iota-java/0.1/account-module/how-to-guides/create-account":{},"docs/iota-js/0.1/account-module/how-to-guides/create-account":{}}}],["cdaアドレスの1つのシナリオは、webサイトまたはスクリーンなどの他のデジタル媒体で寄付アドレスを共有する場合です。このシナリオでは、任意の量の複数の預け入れを受け取ることができ、cdaの共有を完全に管理できます。timeout_at値が切れる前に、72時間経過するたびに、webサイトまたはスクリーンでcdaを更新することができます。これにより、cda",{"_index":2559,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/references/cda-advice":{},"docs/iota-java/0.1/account-module/references/cda-advice":{},"docs/iota-js/0.1/account-module/references/cda-advice":{}}}],["cda）を持っている必要があります。送信者にはiotaトークンを含む期限切れのcdaが必要であり、受信者にはトークンを送信するためのアクティブなcda",{"_index":2519,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-java/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["central",{"_index":2041,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["certain",{"_index":2051,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["certif",{"_index":1116,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{},"docs/utils/0.1/official/tangle-certificate/overview":{}}}],["cgoを有効にしてコンパイルされている場合、curlのtransform()メソッドなどの特定の関数はネイティブc",{"_index":2474,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{}}}],["chain",{"_index":1934,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["chang",{"_index":1486,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/references/troubleshooting":{}}}],["changemod",{"_index":2675,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/introduction/overview":{},"docs/iota-js/0.1/mam/references/api-reference":{}}}],["channel",{"_index":2395,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["channelkey：str",{"_index":2725,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["channelmode：str",{"_index":2723,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["channelroot",{"_index":1877,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["channelroot：str",{"_index":2722,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["channelsidekey&amp;gt",{"_index":1878,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["channel：object",{"_index":2726,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["charact",{"_index":90,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{}}}],["characterist",{"_index":2089,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["charg",{"_index":2113,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["cheap",{"_index":2115,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/connect-programmer":{}}}],["cheapest",{"_index":2167,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["check",{"_index":168,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/receive-test-tokens":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["check_changes.pi",{"_index":1361,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["check_changes.pyという新しいファイルを作成し、check_changes.pi",{"_index":1353,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["checkconsist",{"_index":818,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{}}}],["checkconsistency(transact",{"_index":2626,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["checksum",{"_index":2654,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["check制約をサポートしているため、デフォルトではハブはmariadb",{"_index":1238,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["chip",{"_index":2108,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["chrome、firefox",{"_index":1751,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{}}}],["chronicl",{"_index":496,"docTitle":{},"docBody":{"docs/node-software/0.1/introduction/overview":{},"docs/node-software/0.1/chronicle/introduction/overview":{},"docs/node-software/0.1/chronicle/how-to-guides/get-started":{},"docs/node-software/0.1/chronicle/references/architecture":{}}}],["chronicleおよびscylladbを実行しているデバイスには、バックアップ電源とインターネット接続が必要です。少なくとも1",{"_index":919,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["chronicleが起動すると、import",{"_index":941,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["circuit",{"_index":2151,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{},"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["ciriはzmq",{"_index":758,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["citi",{"_index":1910,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["class",{"_index":2330,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/read-sensor-data":{}}}],["client",{"_index":2230,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["client.c",{"_index":2394,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["client.crt、client.key、およびca.crt）をハブサーバーにコピーします。この例では、scpコマンドを使用してssh経由で送信します。192.168.2.212をハブサーバーのurlまたはipアドレスに変更します。/home/dave/hub",{"_index":1286,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["client.go",{"_index":2382,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{}}}],["clock",{"_index":2430,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["clone",{"_index":2135,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/references/troubleshooting":{}}}],["close",{"_index":2349,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/references/troubleshooting":{}}}],["cloud",{"_index":244,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{},"docs/blueprints/0.1/data-marketplace/architecture":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["cloudflareなどのパブリックipfsゲートウェイを使用して、トランザクションハッシュを使用してipf",{"_index":1839,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/architecture":{}}}],["clu6afkw/clx6afkb",{"_index":2851,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/references/sensehat-specs":{}}}],["cmd+スペースバーを押して、検索バーにtermin",{"_index":2914,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["cn=localhost",{"_index":1277,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["cocoapod",{"_index":1181,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["code",{"_index":134,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/getting-started/0.1/tutorials/send-iota-tokens":{},"docs/dev-essentials/0.1/how-to-guides/convert-data-to-trytes":{},"docs/dev-essentials/0.1/how-to-guides/create-an-address":{},"docs/dev-essentials/0.1/how-to-guides/derive-addresses-from-private-keys":{},"docs/dev-essentials/0.1/how-to-guides/send-bundle":{},"docs/dev-essentials/0.1/how-to-guides/check-transaction-confirmation":{},"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{},"docs/node-software/0.1/iri/how-to-guides/interact-with-an-iri-node":{},"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node":{},"docs/node-software/0.1/goshimmer/how-to-guides/subscribe-to-events":{},"docs/wallets/0.1/trinity/how-to-guides/create-a-qr-code":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{},"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{},"docs/utils/0.1/official/iota-area-codes/overview":{},"docs/utils/0.1/official/proof-of-existance/overview":{},"docs/utils/0.1/official/tangle-certificate/overview":{},"docs/utils/0.1/official/tryte-compress/overview":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iota-go/0.1/account-module/how-to-guides/create-account":{},"docs/iota-java/0.1/account-module/how-to-guides/create-account":{},"docs/iota-js/0.1/account-module/how-to-guides/create-account":{}}}],["codeとmarkdown",{"_index":3001,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["code（olc）のクローンです。iac",{"_index":1601,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["coinクラスのprice_in_usd",{"_index":1349,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["collect",{"_index":2389,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["combin",{"_index":2013,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["come",{"_index":2157,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["command",{"_index":853,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-errors":{},"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["command変数を別のapi",{"_index":720,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/interact-with-an-iri-node":{}}}],["commit",{"_index":2967,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["common",{"_index":2444,"docTitle":{},"docBody":{"docs/iot/0.1/references/troubleshooting":{},"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["commonli",{"_index":2166,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["commun",{"_index":1513,"docTitle":{},"docBody":{"docs/utils/0.1/introduction/overview":{},"docs/blueprints/0.1/p2p-energy/architecture":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["compact",{"_index":2242,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["compani",{"_index":2009,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{}}}],["comparison",{"_index":582,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/tip-selection":{}}}],["compass",{"_index":1537,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["compassディレクトリに戻り、bazel",{"_index":1066,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["compat",{"_index":2140,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["compil",{"_index":1976,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{}}}],["complet",{"_index":2091,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["compon",{"_index":2144,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["compos",{"_index":986,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["compose.yml",{"_index":1566,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["compose.ymlファイルにあるシードでマークル木を事前に計算します。その結果、誰かがこのノードのurlを持った場合、dock",{"_index":1565,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["composeapi(\\[set",{"_index":2618,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["composeがあれば、dock",{"_index":985,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["compress",{"_index":1656,"docTitle":{},"docBody":{"docs/utils/0.1/official/tryte-compress/overview":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["compressor",{"_index":1660,"docTitle":{},"docBody":{"docs/utils/0.1/official/tryte-compress/overview":{}}}],["comput",{"_index":1960,"docTitle":{"docs/iot/0.1/how-to-guides/setup-sbc":{}},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["concept",{"_index":1927,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["confid",{"_index":1949,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["config.ini",{"_index":633,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["config.json",{"_index":1046,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["config.jsonファイルでdebug変数をfals",{"_index":1736,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["config.jsonファイルにセンサーid",{"_index":1735,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["config.jsonファイルに設定されています。googl",{"_index":1551,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["config.jsonファイルを開き、seedフィールドの値を手順3",{"_index":1044,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["config/tools/ssl/caddyfileファイルの、your",{"_index":1569,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["config/tools/tool",{"_index":1550,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["config/tools/ディレクトリ内のファイルに設定情報を追加します。amazon",{"_index":1546,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["configur",{"_index":262,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{},"docs/node-software/0.1/iri/references/api-reference":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{},"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["configurationに移動して、ノードのurlhttp&#x3a;//localhost:14265",{"_index":1559,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["confirmed.jsファイルでは、iota",{"_index":427,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{}}}],["conflict",{"_index":2442,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["conform",{"_index":2075,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["congratul",{"_index":2227,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{}}}],["connect",{"_index":442,"docTitle":{"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}},"docBody":{"docs/dev-essentials/0.1/references/structure-of-a-bundle":{},"docs/compass/0.1/references/troubleshooting":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["connector",{"_index":2129,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["consid",{"_index":2133,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/connect-programmer":{}}}],["consol",{"_index":2380,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["constraint",{"_index":2403,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{}}}],["consum",{"_index":1785,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["consumpt",{"_index":2401,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{}}}],["content.md",{"_index":2983,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["continu",{"_index":2341,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["contract.txt",{"_index":1632,"docTitle":{},"docBody":{"docs/utils/0.1/official/proof-of-existance/overview":{}}}],["contract.txtファイルと同じディレクトリにindex.jsという新しいファイルを作成し、パッケージをrequir",{"_index":1633,"docTitle":{},"docBody":{"docs/utils/0.1/official/proof-of-existance/overview":{}}}],["control",{"_index":2986,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["convent",{"_index":2045,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["converterパッケージをrequri",{"_index":393,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/convert-data-to-trytes":{}}}],["cooki",{"_index":940,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["coordin",{"_index":1619,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["coordinates.net",{"_index":1728,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["core",{"_index":406,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/derive-addresses-from-private-keys":{},"docs/iota-js/0.1/introduction/overview":{},"docs/iota-java/0.1/introduction/overview":{},"docs/iota-go/0.1/introduction/overview":{},"docs/iota-js/0.1/core/introduction/overview":{}}}],["coreディレクトリ内のconfig.ex",{"_index":921,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["coreパッケージをrequir",{"_index":176,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-iota-tokens":{},"docs/dev-essentials/0.1/how-to-guides/create-an-address":{}}}],["coreパッケージをrequri",{"_index":419,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/check-transaction-confirmation":{}}}],["correct",{"_index":2181,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/connect-programmer":{}}}],["count",{"_index":2002,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{}}}],["cp2102",{"_index":2249,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["cpu",{"_index":1037,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/general/0.1/references/troubleshooting":{}}}],["cpuはavx",{"_index":794,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{}}}],["creat",{"_index":70,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/references/troubleshooting":{},"docs/iota-js/0.1/core/how-to-guides/create-custom-methods":{},"docs/iota-js/0.1/mam/references/api-reference":{},"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["createitemchannel",{"_index":1886,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["createunsignedbundl",{"_index":1392,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{}}}],["createunsignedbundle()関数がsignatur",{"_index":1390,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{}}}],["createus",{"_index":1340,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["createuser()メソッドはcreateuserrequestオブジェクトを受け取ります。apiリファレンスでcreateuserrequest",{"_index":1302,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{}}}],["createuserrepli",{"_index":1409,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["createuserrequest",{"_index":1408,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["cree",{"_index":2850,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/references/sensehat-specs":{}}}],["cron",{"_index":643,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["crontab",{"_index":2781,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{},"docs/smartcity/0.1/astropiota/how-to-guides/connect":{}}}],["cryptographi",{"_index":2574,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["csb",{"_index":2414,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{}}}],["ctps1",{"_index":447,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/glossary":{}}}],["ctrl",{"_index":752,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["ctrl+c",{"_index":1282,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["cube",{"_index":240,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["curl",{"_index":810,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{},"docs/node-software/0.1/chronicle/references/api-reference":{},"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["curliotaで使用されている主なハッシュ関数。curlはkeccakクリエイター（sha",{"_index":452,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/glossary":{}}}],["curlはモノのインターネット（iot",{"_index":453,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/glossary":{}}}],["curlを使用してgetnodeinfo",{"_index":194,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/run-your-own-iri-node":{}}}],["current",{"_index":829,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{}}}],["currentindex",{"_index":345,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{},"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{}}}],["currentindexフィールドとバンドル内の最後のトランザクションを定義するlastindex",{"_index":341,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{}}}],["currentindexフィールドは、バンドル内のトランザクションの位置です。lastindexフィールドは、バンドル内の最後のトランザクションです。lastindex",{"_index":410,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/send-bundle":{}}}],["custom",{"_index":1151,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/connect-to-a-custom-node":{}}}],["cを2回押して、grpc",{"_index":1308,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{}}}],["cを押してrepl",{"_index":753,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["cを押します。iri",{"_index":1064,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["cを押します。それから、コマンドを再実行する前に、.envファイルのextra_compass_flag",{"_index":1577,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["cフラグと一緒に渡す必要があります。たとえば、dockerホストの/path/to/conf/config.iniにconfig.iniファイルを保存した場合は、dock",{"_index":670,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["cベースのpow用のpow_arm_c128",{"_index":2481,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{}}}],["cベースのpow用のpow_c",{"_index":2482,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{}}}],["c＃.net",{"_index":473,"docTitle":{},"docBody":{"docs/client-libraries/0.1/introduction/overview":{}}}],["d",{"_index":988,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["daemon",{"_index":1083,"docTitle":{},"docBody":{"docs/compass/0.1/references/troubleshooting":{}}}],["dag",{"_index":298,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/the-tangle":{},"docs/dev-essentials/0.1/references/glossary":{}}}],["dag）と呼ばれるデータ構造で、各トランザクションは、自分より前にある2",{"_index":10,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-iota":{}}}],["danceなどのweb",{"_index":25,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-node":{}}}],["danger",{"_index":55,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-bundle":{},"docs/getting-started/0.1/tutorials/receive-test-tokens":{},"docs/getting-started/0.1/tutorials/send-iota-tokens":{},"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{},"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/wallets/0.1/trinity/how-to-guides/back-up-seed":{},"docs/wallets/0.1/trinity/how-to-guides/send-a-transaction":{},"docs/wallets/0.1/trinity/how-to-guides/receive-a-transaction":{},"docs/wallets/0.1/hub/concepts/sweeps":{},"docs/wallets/0.1/hub/references/security-considerations":{},"docs/iota-go/0.1/account-module/how-to-guides/create-account":{},"docs/iota-go/0.1/account-module/how-to-guides/import-seed-state":{},"docs/iota-go/0.1/account-module/references/cda-advice":{},"docs/iota-java/0.1/account-module/how-to-guides/create-account":{},"docs/iota-java/0.1/account-module/references/cda-advice":{},"docs/iota-js/0.1/account-module/references/cda-advice":{},"docs/contribution/0.1/style-guide":{}}}],["danger:シードごとにアカウントインスタンスを1",{"_index":2511,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-account":{},"docs/iota-js/0.1/account-module/how-to-guides/create-account":{}}}],["daplink",{"_index":2184,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/references/troubleshooting":{}}}],["dashboard",{"_index":1010,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/node-software/0.1/goshimmer/how-to-guides/send-spam":{}}}],["data",{"_index":909,"docTitle":{"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}},"docBody":{"docs/node-software/0.1/chronicle/introduction/overview":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{},"docs/blueprints/0.1/introduction/overview":{},"docs/blueprints/0.1/data-marketplace/overview":{},"docs/blueprints/0.1/data-marketplace/architecture":{},"docs/blueprints/0.1/tangle-data-storage/architecture":{},"docs/blueprints/0.1/tangle-data-storage/deployment-and-testing":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["data_centers\\_\\_オブジェクトで、ipアドレスを127.0.0.1からscyllaクラスターのip",{"_index":923,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["databas",{"_index":72,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/node-software/0.1/introduction/overview":{},"docs/node-software/0.1/iri/references/iri-configuration-options":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["datasheet",{"_index":2187,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["dataステートメントで、batch_to_exchang",{"_index":1362,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["dataディレクトリに移動したファイルの名前（.dmp",{"_index":934,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["data変数をasciitotryt",{"_index":394,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/convert-data-to-trytes":{}}}],["dave",{"_index":2820,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["day",{"_index":1272,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["db",{"_index":617,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/update-the-iri":{}}}],["dbfiles.iota.org",{"_index":899,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/troubleshooting":{}}}],["dbに追加して更新するためのストレージrest",{"_index":1875,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["dbの認証情報、fixer",{"_index":1548,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["dbディレクトリがサーバに保存されたので、実行する前にiri",{"_index":621,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["de",{"_index":2755,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/introduction/overview":{},"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["deactiv",{"_index":1327,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["debianベースのオペレーティングシステムを使用している場合は、このコマンドの前にsudo",{"_index":1536,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["debianベースのオペレーティングシステムを使用している場合は、以下のタスクのすべてのコマンドの前にsudo",{"_index":981,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["debug",{"_index":1996,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{}}}],["debugf",{"_index":2354,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["debugg",{"_index":2127,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["decod",{"_index":2677,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/introduction/overview":{},"docs/iota-js/0.1/mam/references/api-reference":{}}}],["default",{"_index":2198,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["defin",{"_index":2080,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["delet",{"_index":1804,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["demo",{"_index":1329,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["deni",{"_index":1014,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/compass/0.1/references/troubleshooting":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/references/troubleshooting":{}}}],["depend",{"_index":2199,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/iota-js/0.1/core/introduction/overview":{}}}],["dependencies.jar",{"_index":2587,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["deposit",{"_index":1332,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["deposit_address",{"_index":1345,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["depth",{"_index":561,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/tip-selection":{},"docs/node-software/0.1/iri/references/api-errors":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/iota-js/0.1/core/introduction/overview":{}}}],["depth16のマークル木を使用します。これにより、コンパスはマイルストーン送信の間隔に応じて、約45",{"_index":1042,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["depth、minweightmagnitude、delay、そしてmaxdepth",{"_index":2659,"docTitle":{},"docBody":{"docs/iota-js/0.1/account-module/how-to-guides/create-account":{}}}],["depthパラメータの値を減らします。iri",{"_index":847,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-errors":{}}}],["depthフィールドの値を16",{"_index":1045,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["depth引数はチップ選択に影響します。depth",{"_index":147,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/getting-started/0.1/tutorials/send-iota-tokens":{},"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{}}}],["depth：numb",{"_index":2729,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["describ",{"_index":2046,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/smartcity/0.1/astropiota/how-to-guides/build":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{},"docs/smartcity/0.1/astropiota/how-to-guides/connect":{}}}],["design",{"_index":2402,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{}}}],["desktop",{"_index":1114,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{},"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["detail",{"_index":2099,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["dev",{"_index":1326,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["dev/ttyusb",{"_index":2214,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["dev/ttyusb0",{"_index":2220,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["dev/ttyusb\\*を使用してusb",{"_index":2943,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["develop",{"_index":1195,"docTitle":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["developer.arm.com",{"_index":2455,"docTitle":{},"docBody":{"docs/iot/0.1/references/troubleshooting":{}}}],["developブランチから新しいgit",{"_index":1182,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["developブランチにマージされると、crowdinにあなたの文字列が表示されます。コミュニティはcrowdin",{"_index":1194,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["devent",{"_index":2529,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-java/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["devic",{"_index":1675,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/overview":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["devnet",{"_index":135,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/getting-started/0.1/tutorials/receive-test-tokens":{},"docs/getting-started/0.1/tutorials/send-iota-tokens":{},"docs/getting-started/0.1/tutorials/run-your-own-iri-node":{},"docs/getting-started/0.1/references/quickstart-dev-handbook":{},"docs/getting-started/0.1/references/iota-networks":{},"docs/dev-essentials/0.1/how-to-guides/send-bundle":{},"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/wallets/0.1/trinity/how-to-guides/connect-to-a-custom-node":{},"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{},"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-java/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-js/0.1/core/introduction/overview":{},"docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/contribution/0.1/style-guide":{}}}],["devnet.thetangle.org",{"_index":420,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/check-transaction-confirmation":{}}}],["devnet.thetangle.orgに行き、latest",{"_index":436,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{}}}],["devnetでは、mwmは9です。一方、mainnetでは、mwmは14です。小さすぎるmwm",{"_index":182,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-iota-tokens":{}}}],["devnetでトランザクションが確定されたかどうかを確認します。devnetは、トークンが無料であること以外はmainnetとほぼ同じです。devnetに送信したトランザクションは、mainnet",{"_index":418,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/check-transaction-confirmation":{}}}],["devnetでトランザクションを作成して送信します。devnetは、トークンが無料であること以外は、ほとんどmainnetと同じです。devnetに送信するトランザクションは、mainnet",{"_index":1654,"docTitle":{},"docBody":{"docs/utils/0.1/official/tryte-compress/overview":{}}}],["devnetとmainnetを切り替えるには、providerフィールドをhttps&#x3a;//nodes.devnet.iota.org:443",{"_index":231,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["devnetと同じ構成設定を使用して、iri",{"_index":1031,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["devnetの蛇口を使用して預け入れアドレスにテストiota",{"_index":1355,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["devnetは、トークンが無料であることを除いて、mainnetとほぼ同じです。devnetに送信するトランザクションは、mainnet",{"_index":229,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["devnetは、トークンが無料であること以外はmainnet",{"_index":264,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{}}}],["devnetは、トークンが無料であること以外はmainnetとほぼ同じです。1ki（1000i）の無料トークンをdevnet",{"_index":162,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/receive-test-tokens":{}}}],["devnetは、トークンが無料であること以外はmainnetとほぼ同じです。devnetに送るどんなバンドルも、mainnet",{"_index":174,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-iota-tokens":{}}}],["devnetは、トークンが無料であること以外はmainnetとほぼ同じです。devnetに送信したトランザクションは、mainnet",{"_index":136,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/dev-essentials/0.1/how-to-guides/send-bundle":{}}}],["devnetタングルに接続されているため、mainnet",{"_index":1638,"docTitle":{},"docBody":{"docs/utils/0.1/official/proof-of-existance/overview":{}}}],["devnetタングルに添付します。devnetは、トークンが無料であることを除いて、mainnetとほぼ同じです。devnetに送信するトランザクションは、mainnet",{"_index":1629,"docTitle":{},"docBody":{"docs/utils/0.1/official/proof-of-existance/overview":{}}}],["devnetタングルエクスプローラにアクセスします。このwebサイトはdevnet",{"_index":170,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/receive-test-tokens":{}}}],["devnetタングルエクスプローラはiac",{"_index":1627,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["devnetタングル上にあることを確認したい場合は、hashフィールドの値をコピーしてdevnet",{"_index":1595,"docTitle":{},"docBody":{"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{}}}],["devnetトークンは、mainnet",{"_index":1741,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["devnetトークンをmainnet",{"_index":1739,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["devnetネットワークでは、アプリケーションをテストして、無料のdevnetトークンを使用するpoc",{"_index":265,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{}}}],["devnetノードからトランザクションをリクエストすることを認識できるように、provid",{"_index":1637,"docTitle":{},"docBody":{"docs/utils/0.1/official/proof-of-existance/overview":{}}}],["devnetノードである場合、主要devnet",{"_index":1156,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/outsource-pow":{}}}],["devnetノードとmainnetノードでは異なる、depth",{"_index":1702,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/architecture":{}}}],["devnetノードに接続され、公開されたrest",{"_index":1322,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["devnetノードに接続し、ユーザーインターフェイスでメッセージを表示するために使用するmamエクスプローラーurl",{"_index":2689,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/how-to-guides/create-public-channel":{},"docs/iota-js/0.1/mam/how-to-guides/create-restricted-channel":{}}}],["devnetノードに接続します。devnetは、トークンが無料であること以外はmainnetとほぼ同じです。devnetに送信したトランザクションは、mainnet",{"_index":397,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/create-an-address":{},"docs/iota-go/0.1/account-module/how-to-guides/create-account":{},"docs/iota-java/0.1/account-module/how-to-guides/create-account":{},"docs/iota-js/0.1/account-module/how-to-guides/create-account":{}}}],["devnetノードに接続できます。ほとんどのリモートノードはhttp",{"_index":1259,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["devnetノードのurlに変更し、最小重量値（mwm）を9",{"_index":232,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["devnetノードのzmqaddress",{"_index":1589,"docTitle":{},"docBody":{"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{}}}],["devnetノードの場合は、リモートノードリストを使うオプションも無効にする必要があります。そのリストのノードはmainnetノードであるため、devnet",{"_index":1150,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/connect-to-a-custom-node":{}}}],["devnetノードを実行する場合は、testnet設定オプションをtrueに設定し、他のdevnetノードをneighbor",{"_index":636,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["devnet上でiri",{"_index":269,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{}}}],["devnet上のiriノードのzmq",{"_index":273,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{}}}],["devnet上のトランザクションが有効になるには、9の最小重量値（mwm",{"_index":266,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{}}}],["dev：これらのチャンネルは読み取り専用で、開発者同士がトピックについて話し合ったり、github",{"_index":126,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{}}}],["dhcp（動的ホスト構成プロトコル）サーバ（通常はルーター）から新しい内部ip",{"_index":2862,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["diagram",{"_index":1779,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["dictionary.json",{"_index":2973,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["differ",{"_index":2000,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["digest",{"_index":405,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/derive-addresses-from-private-keys":{}}}],["dikw",{"_index":1672,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/overview":{}}}],["direct",{"_index":29,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-the-tangle":{},"docs/dev-essentials/0.1/concepts/the-tangle":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["directli",{"_index":2036,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["directori",{"_index":2205,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/references/troubleshooting":{}}}],["disabl",{"_index":1152,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/connect-to-a-custom-node":{}}}],["discord",{"_index":118,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/client-libraries/0.1/introduction/overview":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{},"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{},"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{},"docs/iota-js/0.1/core/introduction/overview":{},"docs/iota-js/0.1/account-module/introduction/overview":{},"docs/iota-js/0.1/mam/introduction/overview":{}}}],["discordの#helpおよび#fullnod",{"_index":898,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/troubleshooting":{}}}],["discordの#helpチャンネルでiota",{"_index":1206,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/references/troubleshooting":{}}}],["discordの#nodeshar",{"_index":714,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/find-neighbor-iri-nodes":{}}}],["discuss",{"_index":127,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/contribution/0.1/style-guide":{}}}],["display",{"_index":2399,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["displaytypeフィールドはコンテンツがページ上でどのようにレンダリングされるかを指定し、contextフィールドはドキュメントapiを使用してデータを取得する場所を決定するために使用されます。例：https&#x3a;//doc",{"_index":2995,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["distinguish",{"_index":2437,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["distribut",{"_index":502,"docTitle":{},"docBody":{"docs/node-software/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["dlt",{"_index":2,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-dlt":{}}}],["dltには2",{"_index":3,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-dlt":{}}}],["dlt）は、デジタル商品（デジタル形式で存在する無形の商品）の所有者がデジタル商品をp2p",{"_index":1,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-dlt":{}}}],["dmgファイルのsha256ハッシュを計算します。パスをトリニティの.dmg",{"_index":1119,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{}}}],["dmp",{"_index":943,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["dmps.txtファイルに、/histor",{"_index":933,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["dn",{"_index":2875,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["dnsを使用しますが、他のddn",{"_index":2874,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["do",{"_index":2450,"docTitle":{},"docBody":{"docs/iot/0.1/references/troubleshooting":{}}}],["doc",{"_index":2658,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{},"docs/iota-js/0.1/account-module/introduction/overview":{},"docs/contribution/0.1/style-guide":{}}}],["docker",{"_index":160,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/getting-started/0.1/tutorials/run-your-own-iri-node":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/compass/0.1/references/troubleshooting":{},"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["dockerとdock",{"_index":1533,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["dockerをインストールします。システム要件よりも古いバージョンのmacosまたはwindowsを実行している場合は、代わりにdock",{"_index":663,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["dockerをインストールします。システム要件よりも古いバージョンのmacまたはwindowsを実行している場合は、代わりにdock",{"_index":189,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/run-your-own-iri-node":{}}}],["dockerイメージをバックグラウンドで実行し、ホストデバイスからdockerコンテナにポートを転送し、コマンドラインフラグを使用してスパマー、zmq、およびダッシュボードプラグインを有効にします。これらのプラグインを使用すると、スパムトランザクションを自分のノードに送信したり、着信トランザクションを監視したり、web",{"_index":984,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["dockerグループに追加します。$us",{"_index":1085,"docTitle":{},"docBody":{"docs/compass/0.1/references/troubleshooting":{}}}],["dockerコマンドを使用して独自のiotaネットワークを設定できます。このコマンドを実行すると、独自のiotaテストネットワークと2.7pi（最大量）のテストiota",{"_index":1527,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["dockerコマンドを使用して自身のiota",{"_index":1514,"docTitle":{},"docBody":{"docs/utils/0.1/introduction/overview":{}}}],["dockerコンテナでiri",{"_index":656,"docTitle":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["dockerコンテナでノードを実行するまたはlinux",{"_index":228,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["dockerコンテナには、iri",{"_index":664,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["dockerコンテナにプライベートタングルを設定し、1",{"_index":1034,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["dockerコンテナに接続します。$containeridプレースホルダをあなたのコンテナid",{"_index":992,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["dockerコンテナも再起動するには、dock",{"_index":675,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["dockerコンテナをダウンロードする方法は2",{"_index":665,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["dockerコンテナをビルドするには、dock",{"_index":982,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["dockerコンテナを再起動するには、run",{"_index":989,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["dockerコンテナーをビルドするには、dock",{"_index":661,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["dockerコンテナ内でiriを実行すると、デバイスはiriノード用のlinux",{"_index":657,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["dockerコンテナ内で自分のiri",{"_index":186,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/run-your-own-iri-node":{}}}],["dockerホストの再起動のたびにiri",{"_index":674,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["docs/private_tangl",{"_index":1047,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["document",{"_index":1299,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{},"docs/blueprints/0.1/introduction/overview":{},"docs/blueprints/0.1/doc-immutability/overview":{},"docs/blueprints/0.1/doc-immutability/architecture":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/contribution/0.1/style-guide":{}}}],["documentationディレクトリ内のコンテンツは、web",{"_index":2975,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["doesn't",{"_index":2131,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{}}}],["domain",{"_index":2877,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["domain.comとyour@email.comのプレースホルダーをあなたが選んだドメイン名と",{"_index":1570,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["don't",{"_index":1989,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/connect-programmer":{}}}],["dongl",{"_index":2334,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["down",{"_index":2443,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["download",{"_index":1120,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/references/troubleshooting":{}}}],["drive",{"_index":1902,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["driver",{"_index":2178,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{}}}],["driver_nam",{"_index":2326,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/read-sensor-data":{}}}],["duck",{"_index":2873,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["duckdns.orgなどの動的dnsサービスに接続されているパブリックip",{"_index":593,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["due",{"_index":2054,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["dupoint",{"_index":2163,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["dupont",{"_index":2142,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["dynam",{"_index":2882,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["dynamo",{"_index":1547,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["dynamodb",{"_index":1542,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["dを押してシェルセッションを終了し、usersディレクトリのmodels.pi",{"_index":1344,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["e",{"_index":1146,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/create-deep-link":{}}}],["eabi",{"_index":2222,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/references/troubleshooting":{}}}],["each",{"_index":1899,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["easi",{"_index":2195,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{}}}],["easili",{"_index":2173,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["easydma",{"_index":2435,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["edg",{"_index":967,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/references/data-model":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["edit",{"_index":1558,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["effici",{"_index":1904,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{}}}],["ehealth",{"_index":1935,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["electron",{"_index":2117,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["elixir",{"_index":957,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/references/architecture":{}}}],["elixirとscylladb",{"_index":970,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/references/design-goals":{}}}],["elixirは、web",{"_index":905,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/introduction/overview":{}}}],["elixirバージョン1.8.1以降およびerlang",{"_index":914,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["embed",{"_index":1971,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["emmc",{"_index":1967,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{}}}],["emoji",{"_index":2991,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["enabl",{"_index":1007,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["enabled設定パラメータがtrueに設定されている場合にのみ、クライアントはzmq",{"_index":536,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/zero-message-queue":{}}}],["encrypt",{"_index":1563,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["endpoint",{"_index":195,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/run-your-own-iri-node":{},"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["energi",{"_index":1663,"docTitle":{},"docBody":{"docs/blueprints/0.1/introduction/overview":{},"docs/blueprints/0.1/p2p-energy/overview":{},"docs/blueprints/0.1/p2p-energy/architecture":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/references/troubleshooting":{}}}],["english",{"_index":2793,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["enter",{"_index":116,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["entri",{"_index":75,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/node-software/0.1/iri/concepts/local-snapshot":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["entrypointトランザクションで呼び出されるすべての評価計算機は、トランザクションid",{"_index":571,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/tip-selection":{}}}],["enviro",{"_index":1591,"docTitle":{},"docBody":{"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{}}}],["environ",{"_index":1921,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["environment（jre）でscalaを使用したい場合は、scalaライブラリをmavenまたはsbt",{"_index":743,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["envirophat",{"_index":1585,"docTitle":{},"docBody":{"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{}}}],["error",{"_index":1449,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/references/troubleshooting":{}}}],["errorcod",{"_index":1450,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["errorイベントを購読します。error",{"_index":2664,"docTitle":{},"docBody":{"docs/iota-js/0.1/account-module/how-to-guides/listen-to-events":{}}}],["essenti",{"_index":2208,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{}}}],["essentialパッケージからgcc",{"_index":789,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["eth",{"_index":2265,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["ethernet",{"_index":2258,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["ev",{"_index":478,"docTitle":{},"docBody":{"docs/client-libraries/0.1/introduction/overview":{}}}],["evalu",{"_index":748,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["even",{"_index":1951,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["event",{"_index":1487,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/contribution/0.1/style-guide":{}}}],["event_logger.go",{"_index":2541,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-plugin":{}}}],["eventlistenerインターフェースを実装しており、eventmanagerに追加されています。故に、プラグインを作成した時は、アカウントに別々のeventlisten",{"_index":2612,"docTitle":{},"docBody":{"docs/iota-java/0.1/account-module/how-to-guides/create-plugin":{}}}],["eventmachin",{"_index":2517,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/listen-to-events":{}}}],["eventmachineオブジェクトを引数として受け取り、account.plugin",{"_index":2542,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-plugin":{}}}],["everyth",{"_index":1977,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["evrythngがiotaをどのように使用しているかについての詳細を調べるにはiota",{"_index":859,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/best-practice":{}}}],["ev）の充電料金をiota",{"_index":475,"docTitle":{},"docBody":{"docs/client-libraries/0.1/introduction/overview":{}}}],["exampl",{"_index":37,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-seed":{},"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/getting-started/0.1/tutorials/send-iota-tokens":{},"docs/dev-essentials/0.1/concepts/the-tangle":{},"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{},"docs/node-software/0.1/iri/references/api-reference":{},"docs/node-software/0.1/iri/references/best-practice":{},"docs/wallets/0.1/trinity/how-to-guides/create-a-qr-code":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["example&lt;originfunctionnam",{"_index":2494,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{}}}],["examplesディレクトリ内に&lt;packag",{"_index":2489,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{}}}],["exampleディレクトリに、data",{"_index":139,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{}}}],["exampleディレクトリに、valu",{"_index":175,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-iota-tokens":{}}}],["exampleディレクトリに移動して、coreおよびconvert",{"_index":137,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/getting-started/0.1/tutorials/send-iota-tokens":{}}}],["exchang",{"_index":1330,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["exchange/managementディレクトリで、commandsという名前の新しいディレクトリを作成し、command",{"_index":1352,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["exchangeディレクトリで、iota.pi",{"_index":1337,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["exchangeディレクトリで、models.pi",{"_index":1348,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["execut",{"_index":2212,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["exeファイルのsha256ハッシュを計算します。パスをトリニティの.ex",{"_index":1111,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{}}}],["exist",{"_index":2006,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{}}}],["expected_amountフィールドの値を指定する必要があります。たとえば、あなたが取引所からiotaトークンを取り出したいときなどです。あなたは取引所にexpected_amountフィールドを持つcda",{"_index":2561,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/references/cda-advice":{},"docs/iota-java/0.1/account-module/references/cda-advice":{},"docs/iota-js/0.1/account-module/references/cda-advice":{}}}],["expected_amountフィールドを持つcda",{"_index":2560,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/references/cda-advice":{},"docs/iota-java/0.1/account-module/references/cda-advice":{},"docs/iota-js/0.1/account-module/references/cda-advice":{}}}],["expected_amountフィールド値を持つcda",{"_index":2556,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/references/cda-advice":{},"docs/iota-java/0.1/account-module/references/cda-advice":{},"docs/iota-js/0.1/account-module/references/cda-advice":{}}}],["expectedamount（推奨）：アドレスが受け取ると予想されるiota",{"_index":2522,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-java/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["expens",{"_index":2136,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/connect-programmer":{}}}],["explor",{"_index":413,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/send-bundle":{},"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{}}}],["exportedaccountstate構造体をstore.importaccount",{"_index":2550,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/import-seed-state":{}}}],["expos",{"_index":2418,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-programmer":{}}}],["extens",{"_index":3003,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["extern",{"_index":2189,"docTitle":{"docs/iot/0.1/how-to-guides/connect-programmer":{}},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["facad",{"_index":2566,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["fail",{"_index":2460,"docTitle":{},"docBody":{"docs/iot/0.1/references/troubleshooting":{}}}],["fals",{"_index":425,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/check-transaction-confirmation":{}}}],["famou",{"_index":2005,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{}}}],["fe80::2ca:46ff:fed3:1967",{"_index":2383,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{}}}],["fe80::c0a2:76c6:4ed5:a44",{"_index":2937,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["featur",{"_index":2209,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["feature/mi",{"_index":1183,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["featureまたはbugfix/someth",{"_index":1185,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["fedora",{"_index":1167,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["fee",{"_index":1916,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["feed",{"_index":2997,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["feed]として指定し、次のようにオブジェクトのjson",{"_index":2994,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["femal",{"_index":2159,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["fetch",{"_index":2680,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/introduction/overview":{},"docs/iota-js/0.1/mam/references/api-reference":{}}}],["fetcher.j",{"_index":1524,"docTitle":{},"docBody":{"docs/utils/0.1/community/mam-watcher/overview":{}}}],["fetcher.jsファイルに、sender.j",{"_index":1525,"docTitle":{},"docBody":{"docs/utils/0.1/community/mam-watcher/overview":{}}}],["fetchsingl",{"_index":2681,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/introduction/overview":{},"docs/iota-js/0.1/mam/references/api-reference":{}}}],["fetchtemp.j",{"_index":1586,"docTitle":{},"docBody":{"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{}}}],["fetchtemp.jsファイルとzmqwatcher.jsファイルはモジュールとしてエクスポートされ、index.j",{"_index":1590,"docTitle":{},"docBody":{"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{}}}],["fghjklmnopqrstuvxwyz",{"_index":1602,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["fi",{"_index":2170,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["fijterのhigh",{"_index":2756,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/introduction/overview":{},"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["file",{"_index":1086,"docTitle":{},"docBody":{"docs/compass/0.1/references/troubleshooting":{},"docs/blueprints/0.1/tangle-data-storage/architecture":{},"docs/blueprints/0.1/tangle-data-storage/deployment-and-testing":{},"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/references/troubleshooting":{},"docs/smartcity/0.1/astropiota/how-to-guides/build":{},"docs/smartcity/0.1/astropiota/how-to-guides/connect":{}}}],["filenam",{"_index":2456,"docTitle":{},"docBody":{"docs/iot/0.1/references/troubleshooting":{}}}],["fileエラーが発生した場合は、snapshot.txt",{"_index":1062,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["fileメッセージが表示されます。このメッセージが表示されたら、dmps.txt",{"_index":944,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["find",{"_index":1480,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/references/troubleshooting":{}}}],["finder",{"_index":1626,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["findtransact",{"_index":819,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{},"docs/node-software/0.1/chronicle/references/api-reference":{}}}],["findtransactionobject",{"_index":2594,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{}}}],["findtransactionobjects(queri",{"_index":2627,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["findtransactions(queri",{"_index":2628,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["firebas",{"_index":1892,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/deployment-and-testing":{}}}],["firewal",{"_index":2886,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["firmwar",{"_index":1969,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{}}}],["first",{"_index":2281,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/references/troubleshooting":{}}}],["fixer",{"_index":1543,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["flash",{"_index":1952,"docTitle":{"docs/iot/0.1/concepts/flashing":{}},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/references/troubleshooting":{}}}],["flink",{"_index":732,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["flinkでzmqデータを処理するためにflink",{"_index":733,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["flinkを使用してzmq",{"_index":730,"docTitle":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["flow",{"_index":910,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/introduction/overview":{}}}],["follow",{"_index":89,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{},"docs/iot/0.1/references/troubleshooting":{},"docs/iota-js/0.1/core/introduction/overview":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["forc",{"_index":1903,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["fork",{"_index":2201,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iota-js/0.1/core/introduction/overview":{},"docs/iota-js/0.1/account-module/introduction/overview":{},"docs/iota-js/0.1/mam/introduction/overview":{},"docs/contribution/0.1/style-guide":{}}}],["form",{"_index":2034,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["forward",{"_index":2887,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["found",{"_index":1918,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["fragment",{"_index":1391,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["framework",{"_index":1170,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["frequenc",{"_index":2071,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["friendli",{"_index":1988,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{}}}],["function",{"_index":439,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{}}}],["g",{"_index":1294,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{}}}],["gain",{"_index":1493,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["gateway4フィールドの値をあなたのゲートウェイipアドレスに置き換えます。アドレスフィールドで、スラッシュ（/）の左側の値をあなたのlinuxサーバの内部ip",{"_index":2869,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["gcc",{"_index":2223,"docTitle":{"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{}},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{},"docs/iot/0.1/references/troubleshooting":{}}}],["gcc_arm_directory_nam",{"_index":2235,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{}}}],["gcc、clang、または@iota_toolchain",{"_index":1234,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["gccでインストールできます。linux（ubuntu",{"_index":787,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["gccやgo",{"_index":1003,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["gcc）を使ってgccをインストールすることができます。windowsの場合は、tdm",{"_index":786,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["gcc：macosの場合は、homebrew（brew",{"_index":784,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["gener",{"_index":78,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{},"docs/wallets/0.1/trinity/how-to-guides/create-an-account":{},"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["generate_ca.sh",{"_index":1270,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["generate_client.sh",{"_index":1280,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["generate_server.sh",{"_index":1276,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["generateaddress(se",{"_index":2652,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["generatedmessageのストリームを取得するので、protocol",{"_index":763,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["get",{"_index":2974,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["get_deposit_address",{"_index":1342,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["getaccountdata",{"_index":2604,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{}}}],["getaccountdata(se",{"_index":2629,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["getaddressinfo",{"_index":1453,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["getaddressinforepli",{"_index":1411,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["getaddressinforequest",{"_index":1410,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["getbal",{"_index":827,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["getbalancerepli",{"_index":1413,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["getbalancerequest",{"_index":1412,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["getbalances(address",{"_index":2630,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["getbalancesなどのapi",{"_index":292,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/introduction/overview":{}}}],["getbalancesエンドポイントを呼び出してシードの総残高を取得します。以前にiota",{"_index":1074,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["getbundl",{"_index":2601,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{}}}],["getbundle(tailtransactionhash",{"_index":2632,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["getdepositaddress",{"_index":1341,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["getdepositaddressapi",{"_index":1379,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/integrate-hub":{}}}],["getdepositaddressrepli",{"_index":1415,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["getdepositaddressrequest",{"_index":1414,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["getinclusionst",{"_index":424,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/check-transaction-confirmation":{},"docs/node-software/0.1/iri/references/api-reference":{}}}],["getinclusionstates(transact",{"_index":2633,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["getinput",{"_index":2597,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{}}}],["getinputs(se",{"_index":2634,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["getlatestinclus",{"_index":2595,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{}}}],["getlatestinclusion()メソッドに渡して、iri",{"_index":422,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/check-transaction-confirmation":{}}}],["getlatestinclusion()メソッドは、配列内の末尾トランザクションのいずれかが確定しているかどうかを確認します。いずれかの末尾トランザクションが確定している場合、このメソッドはtru",{"_index":433,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{}}}],["getlatestinclusion(transact",{"_index":2635,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["getmissingtransact",{"_index":828,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{}}}],["getneighbor",{"_index":831,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{}}}],["getneighbors(\\[callback",{"_index":2636,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["getnewaddress",{"_index":400,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/create-an-address":{},"docs/iota-java/0.1/core/introduction/overview":{}}}],["getnewaddress()メソッドを呼び出すと、apiはまだiota",{"_index":401,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/create-an-address":{}}}],["getnewaddress(se",{"_index":2637,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["getnode.jsとしてiota.lib.j",{"_index":2798,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["getnodeapiconfigur",{"_index":821,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{}}}],["getnodeinfo",{"_index":119,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/node-software/0.1/iri/concepts/the-ledger":{},"docs/node-software/0.1/iri/how-to-guides/interact-with-an-iri-node":{},"docs/node-software/0.1/iri/references/api-reference":{}}}],["getnodeinfo(\\[callback",{"_index":2638,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["getnodeinfoapiエンドポイントを呼び出して、iri",{"_index":648,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["getnodeinfoエンドポイントを呼び出して、iri",{"_index":678,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["getroot",{"_index":2676,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/introduction/overview":{},"docs/iota-js/0.1/mam/references/api-reference":{}}}],["getstat",{"_index":1454,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["gettip",{"_index":832,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{}}}],["gettips(\\[callback",{"_index":2639,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["gettransactionobjects(hash",{"_index":2640,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["gettransactionsobject",{"_index":2593,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{}}}],["gettransactionstoapprov",{"_index":564,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/tip-selection":{},"docs/node-software/0.1/iri/references/api-reference":{}}}],["gettransactionstoapprove(depth",{"_index":2641,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["gettransf",{"_index":2602,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{}}}],["gettryt",{"_index":833,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{},"docs/node-software/0.1/chronicle/references/api-reference":{}}}],["gettrytes(hash",{"_index":2642,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["getuserhistori",{"_index":1455,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["getuserhistoryrepli",{"_index":1417,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["getuserhistoryrequest",{"_index":1416,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["get呼び出しを使用して、ページサイズ10のページ5",{"_index":1808,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["ginkgo",{"_index":2484,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{}}}],["ginkgoテストの作成方法に関するリファレンスとして既存のテストを使用するか、ginkgo",{"_index":2488,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{}}}],["git",{"_index":624,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{},"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{},"docs/utils/0.1/community/mam-watcher/overview":{},"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/contribution/0.1/style-guide":{}}}],["github",{"_index":625,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{},"docs/node-software/0.1/chronicle/how-to-guides/get-started":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/utils/0.1/introduction/overview":{},"docs/utils/0.1/community/mam-watcher/overview":{},"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{},"docs/blueprints/0.1/data-marketplace/overview":{},"docs/blueprints/0.1/doc-immutability/overview":{},"docs/blueprints/0.1/p2p-energy/deployment-and-testing":{},"docs/blueprints/0.1/tangle-data-storage/overview":{},"docs/blueprints/0.1/tangle-data-storage/deployment-and-testing":{},"docs/blueprints/0.1/track-and-trace/deployment-and-testing":{},"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{},"docs/iota-js/0.1/core/introduction/overview":{},"docs/iota-js/0.1/account-module/introduction/overview":{},"docs/contribution/0.1/style-guide":{}}}],["github.com/iotaledger/iota.go/account/oracle\"インポートにプレフィックスを追加する必要があります。この例では、oracle_tim",{"_index":2533,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["githubからビルド済みjava",{"_index":600,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["githubでissu",{"_index":1202,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["githubで、iotaledger/document",{"_index":2963,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["githubでホストされています。新しいコンテンツを作成したり、既存のコンテンツへの変更を提案するには、gitまたはgithub",{"_index":2960,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["githubで入手できます。mast",{"_index":1321,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["githubのcompass",{"_index":1029,"docTitle":{},"docBody":{"docs/compass/0.1/introduction/overview":{}}}],["githubのhub",{"_index":1221,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/introduction/overview":{}}}],["githubアカウントをまだ持っていない場合は、新しいgithub",{"_index":2962,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["githubアカウントを既にお持ちで、コンピューターにgit",{"_index":2961,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["githubレポジトリにあります。このファイルをダウンロードするのがiri",{"_index":603,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["github上のソースコードからjava",{"_index":601,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["give",{"_index":2407,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{}}}],["given",{"_index":1465,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["global",{"_index":1932,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["gnd",{"_index":2424,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["gnu/linux",{"_index":2774,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["go",{"_index":106,"docTitle":{"docs/iot/0.1/how-to-guides/install-go-on-sbc":{},"docs/iota-go/0.1/introduction/overview":{},"docs/iota-go/0.1/core/introduction/overview":{}},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/client-libraries/0.1/introduction/overview":{},"docs/iota-go/0.1/introduction/overview":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/iot/0.1/how-to-guides/install-go-on-sbc":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{},"docs/iota-go/0.1/account-module/how-to-guides/create-plugin":{}}}],["good",{"_index":2096,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["googl",{"_index":1618,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{},"docs/blueprints/0.1/data-marketplace/architecture":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/blueprints/0.1/doc-immutability/overview":{},"docs/iota-go/0.1/account-module/how-to-guides/create-account":{},"docs/contribution/0.1/style-guide":{}}}],["googleアカウントでのoauth",{"_index":1701,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/architecture":{}}}],["googleドライブapi",{"_index":1755,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{}}}],["googleドライブ、dropbox",{"_index":1747,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{}}}],["googleドライブやdropbox",{"_index":1752,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{}}}],["googleドライブやfirebas",{"_index":1756,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{}}}],["googleマップは、¬¬¬フェンシングで囲むことにより、コンテンツに埋め込むことができます。次に、タイプを\\[map]として指定し、次のようにオブジェクトのjson",{"_index":2993,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["gopath",{"_index":790,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["gopathではない場所にgoshimm",{"_index":1004,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["gopath以外のディレクトリで、プロジェクトのディレクトリを作成し、初期化します。&lt;your",{"_index":2470,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{}}}],["gopath以外のディレクトリで、プロジェクトを開始してください。プレースホルダをgithub.com/me/awesom",{"_index":108,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{}}}],["gopath環境変数内のディレクトリではないディレクトリに、iotacaddyのgithub",{"_index":791,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{}}}],["goshimm",{"_index":507,"docTitle":{"docs/node-software/0.1/goshimmer/introduction/overview":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}},"docBody":{"docs/node-software/0.1/introduction/overview":{},"docs/node-software/0.1/goshimmer/introduction/overview":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/node-software/0.1/goshimmer/how-to-guides/send-spam":{},"docs/node-software/0.1/goshimmer/references/command-line-flags":{}}}],["goshimmerは、コーディネーターなしでiotaネットワークのプロトタイプを実装しているオープンソースのgo",{"_index":508,"docTitle":{},"docBody":{"docs/node-software/0.1/introduction/overview":{}}}],["goshimmerは、ノードがコーディネーターなしでコンセンサスに到達できるようにするノードソフトウェアの進行中のプロトタイプであり、iota",{"_index":974,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/introduction/overview":{}}}],["goshimmerソフトウェアを実行すると、デバイスがプロトタイプネットワークのノードになります。ノードを実行することにより、ネットワークをテストし、定期的な変更を最新の状態に保つことができます。すべてのモジュールが使用可能になると、このネットワークはコーディサイドテストネットになり、次のiota",{"_index":978,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["goshimmerノードがコーディサイドテストネットになります。これは、次のiota",{"_index":976,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/introduction/overview":{}}}],["goshimmerノードを実行することにより、iota",{"_index":977,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/introduction/overview":{}}}],["gov.uk",{"_index":3004,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["goでのpow実装は常に利用可能です。ローカルpowを使用する場合は、httpclientsettingsなどのプロバイダー設定でlocalproofofworkfunc",{"_index":2483,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{}}}],["goクライアントライブラリとその依存関係をダウンロードするには、goモジュール（バージョン1.11",{"_index":107,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{}}}],["goクライアントライブラリの最新バージョンをダウンロードし、そのバージョンをgo.mod",{"_index":2472,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{}}}],["goクライアントライブラリをダウンロードし、そのバージョンをgo.mod",{"_index":110,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{}}}],["goコアクライアントライブラリには、タングルと対話するための低レベルのメソッドが含まれています。このライブラリを使用して、コアiota",{"_index":487,"docTitle":{},"docBody":{"docs/iota-go/0.1/introduction/overview":{},"docs/iota-go/0.1/core/introduction/overview":{}}}],["goディレクトリを作成します。$usernameプレースホルダーを現在のlinux",{"_index":2314,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/install-go-on-sbc":{}}}],["goプログラミング言語とオブジェクト指向プログラミングの概念に精通している開発者向けです。また、バンドル、トランザクション、アドレスから一度だけ撤回する理由などの基本的なiota",{"_index":2496,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/introduction/overview":{}}}],["goプログラミング言語とオブジェクト指向プログラミングの概念に精通している開発者向けに設計されています。また、アドレスの再利用、バンドル、トランザクションなどのiota",{"_index":2466,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{}}}],["goプログラミング言語の少なくともバージョン1.12",{"_index":783,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["goプログラミング言語を使用するアプリケーションを作成または実行するには、go",{"_index":2312,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/install-go-on-sbc":{}}}],["goライブラリとその依存関係をダウンロードするには、vgo",{"_index":2467,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{}}}],["gp",{"_index":1726,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["gpgキーをインポートします。パスをトリニティの.gpg",{"_index":1127,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{}}}],["gradl",{"_index":103,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["graph",{"_index":31,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-the-tangle":{},"docs/dev-essentials/0.1/concepts/the-tangle":{}}}],["greater",{"_index":2340,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["grid",{"_index":1664,"docTitle":{},"docBody":{"docs/blueprints/0.1/introduction/overview":{}}}],["grpc",{"_index":1220,"docTitle":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{}},"docBody":{"docs/wallets/0.1/hub/introduction/overview":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{},"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{},"docs/wallets/0.1/hub/references/grpc-api-reference":{},"docs/wallets/0.1/hub/references/troubleshooting":{}}}],["grpcc",{"_index":1292,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{}}}],["grpccコマンドでgrpcc",{"_index":1297,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{}}}],["grpccコマンドラインクライアントでgrpc",{"_index":1291,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{}}}],["grpcとprotobufに慣れていない場合は、grpc",{"_index":1403,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["grpcクライアントがある場合は、grpcクライアントを使用してapi",{"_index":1301,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{}}}],["grpcクライアントを使用して呼び出すことができるいくつかのgrpcメソッドを公開しています。これらの方法で、ハブデータベースおよびiotaノードとやり取りすることでユーザーのiotaトークンを管理できます。このガイドでは、新しい預け入れアドレスを持つ新しいユーザーを作成するためのgrpc",{"_index":1289,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{}}}],["guard（gpg",{"_index":1245,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["guid",{"_index":2101,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{},"docs/iot/0.1/references/troubleshooting":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["h",{"_index":1024,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/references/command-line-flags":{}}}],["h3",{"_index":2984,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["hand",{"_index":1970,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{}}}],["hardwar",{"_index":1990,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["hash",{"_index":379,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/reattach-rebroadcast-promote":{},"docs/node-software/0.1/iri/references/api-reference":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/blueprints/0.1/doc-immutability/architecture":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["hash(hash(ノード1",{"_index":311,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/the-tangle":{}}}],["hash(hash(リーフ1",{"_index":307,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/the-tangle":{}}}],["hash(hash(リーフ3",{"_index":309,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/the-tangle":{}}}],["hash(ノード2",{"_index":312,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/the-tangle":{}}}],["hash(リーフ2",{"_index":308,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/the-tangle":{}}}],["hash(リーフ4",{"_index":310,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/the-tangle":{}}}],["hat",{"_index":2746,"docTitle":{"docs/smartcity/0.1/astropiota/references/sensehat-specs":{}},"docBody":{"docs/smartcity/0.1/astropiota/introduction/overview":{},"docs/smartcity/0.1/astropiota/how-to-guides/build":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{},"docs/smartcity/0.1/astropiota/how-to-guides/customize":{},"docs/smartcity/0.1/astropiota/references/sensehat-specs":{}}}],["hat\"というメッセージがsens",{"_index":2803,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["hat/9",{"_index":2859,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/references/sensehat-specs":{}}}],["hatからセンサーデータを収集し、センサーデータをスクロールマーキーに公開し、センサーデータをjson形式でタングルのmamチャネルに送信します。astropiota受信者はmamチャネルを監視してセンサーデータをリッスンします。これらのファイルの両方をカスタマイズして、astropiota",{"_index":2819,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["hatがhdmi",{"_index":2854,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/references/sensehat-specs":{}}}],["hatが機能していることを確認するには、python3",{"_index":2802,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["hatでは、python",{"_index":2801,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["hatには慣性計測装置（imu",{"_index":2750,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/introduction/overview":{}}}],["hatのl",{"_index":2804,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/run":{},"docs/smartcity/0.1/astropiota/how-to-guides/connect":{}}}],["hatの気温と現地の気温を比較して、自分の位置に合わせて調整できます。mam",{"_index":2830,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["hatの温度は現地の気温より約13度高くなっています。sens",{"_index":2829,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["hatの温度センサーはraspberri",{"_index":2827,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["hatをastropiotaパッケージにインストールします。sens",{"_index":2800,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["hatデータを以下のjson",{"_index":2753,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/introduction/overview":{}}}],["hatバージョン1.0",{"_index":2770,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["haven't",{"_index":2358,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["hcitool",{"_index":2387,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{}}}],["hdd",{"_index":1963,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{}}}],["head",{"_index":2987,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["header",{"_index":2072,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{}}}],["healthcar",{"_index":1913,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["heart",{"_index":2959,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["hello",{"_index":206,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-the-trinity-wallet":{},"docs/blueprints/0.1/p2p-energy/architecture":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["help",{"_index":1025,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/references/command-line-flags":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["helpフラグを付けてiri",{"_index":884,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/iri-configuration-options":{}}}],["here",{"_index":2289,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["high",{"_index":476,"docTitle":{},"docBody":{"docs/client-libraries/0.1/introduction/overview":{}}}],["histor",{"_index":932,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["histori",{"_index":209,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-the-trinity-wallet":{},"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["historical/data",{"_index":931,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["hold",{"_index":2345,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["home",{"_index":200,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-the-trinity-wallet":{},"docs/wallets/0.1/trinity/introduction/overview":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{},"docs/iot/0.1/references/troubleshooting":{}}}],["home.md",{"_index":2979,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["home.mdファイルには、ホームページに表示するコンテンツが含まれています。ファイルには、そのセクションの説明を決定するレベル1の見出しが含まれています。さらに、コンテンツへの直接リンクを含むレベル2",{"_index":2978,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["home.mdファイルも含まれている場合にのみ、アイテムがナビゲーションに表示されます。リンクは、projects.md",{"_index":2977,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["home/binディレクトリを$path",{"_index":1236,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["host",{"_index":2060,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["host：apiがリッスンするホスト名またはip",{"_index":937,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["hot",{"_index":1363,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["html/css",{"_index":1719,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/blueprints/0.1/doc-immutability/architecture":{},"docs/blueprints/0.1/p2p-energy/deployment-and-testing":{}}}],["htmlドキュメントをセットアップし、id属性を\"output\"に設定して&lt;div>&lt;/div>要素を作成し、スクリプトがmam",{"_index":2696,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/how-to-guides/create-mam-webpage":{}}}],["hts221",{"_index":2846,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/references/sensehat-specs":{}}}],["http",{"_index":805,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{},"docs/node-software/0.1/chronicle/references/api-reference":{},"docs/wallets/0.1/trinity/how-to-guides/connect-to-a-custom-node":{},"docs/wallets/0.1/trinity/how-to-guides/outsource-pow":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{},"docs/iota-js/0.1/core/how-to-guides/create-custom-methods":{}}}],["http&#x3a;//127.0.0.1:50051url",{"_index":1311,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{}}}],["http&#x3a;//localhost:14265にあるiriノードのapi",{"_index":1072,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["http&#x3a;//localhost:8081/dashboard",{"_index":1019,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/send-spam":{}}}],["httpconnector",{"_index":2610,"docTitle":{},"docBody":{"docs/iota-java/0.1/account-module/how-to-guides/create-account":{}}}],["https&#x3a;//certification.iota.works/fazlsjrleppbrvitopbzntivejwpeqarioehnmhbeojdgablkpyihwpmajwvztjxfiafgsvxpgocbq999",{"_index":1650,"docTitle":{},"docBody":{"docs/utils/0.1/official/tangle-certificate/overview":{}}}],["https&#x3a;//github.com/richardstechnotes/rtimulib2",{"_index":2860,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/references/sensehat-specs":{}}}],["https&#x3a;//grid/storage/abc123",{"_index":1806,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["https&#x3a;//grid/storage/abc123/sources/xxx123",{"_index":1803,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["https&#x3a;//grid/storage/abc123/sources?page=5&pagesize=10",{"_index":1807,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["https&#x3a;//medium.com/@lexerr/47b608c527c9",{"_index":1720,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["https&#x3a;//medium.com/@lexerr/b33d9856c852",{"_index":1721,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["https&#x3a;//nodes.devnet.iota.org:443",{"_index":271,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{}}}],["https&#x3a;//nodes.spamnet.iota.org:443",{"_index":283,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{}}}],["https&#x3a;//powbox.devnet.iota.org",{"_index":277,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{}}}],["https&#x3a;//projects.raspberrypi.org/en/projects/get",{"_index":2858,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/references/sensehat-specs":{}}}],["https&#x3a;//thetangle.org",{"_index":220,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["https&#x3a;//www.gp",{"_index":1727,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["httpsのdevnet",{"_index":1258,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["httpsサポートを維持したい場合は、自分の証明書とキーを使用するためにcaddyの指示に従います。それから、証明書とキーファイルのボリュームをproxyオブジェクトのvolumesの下のdock",{"_index":1575,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["httpsプロキシサーバを設定したい場合は、nginx",{"_index":707,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{}}}],["https接続を介してiri",{"_index":1555,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["httpブロックディレクティブに、upstreamブロックディレクティブを追加して、iri",{"_index":701,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{}}}],["hub",{"_index":1090,"docTitle":{},"docBody":{"docs/wallets/0.1/introduction/overview":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{},"docs/wallets/0.1/hub/how-to-guides/query-the-database":{},"docs/wallets/0.1/hub/references/grpc-api-reference":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["hub.conf",{"_index":1265,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["hub.proto",{"_index":1404,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["hub_address",{"_index":1458,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/wallets/0.1/hub/references/database-tables":{}}}],["hub_address_bal",{"_index":1503,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/database-tables":{}}}],["hub_addressテーブル行のハブアドレスに対して、is_cold_storageフィールドを1",{"_index":1374,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/integrate-hub":{}}}],["hub_addressテーブル行のハブアドレスのis_cold_storageフィールドを0",{"_index":1377,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/integrate-hub":{}}}],["hubaddressbalanceev",{"_index":1418,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["hubaddressbalancereason",{"_index":1419,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["hubにはsignbundle()grpc",{"_index":1393,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{}}}],["hubには、タングルおよびハブデータベースへの接続を簡素化するrest",{"_index":1451,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["hubは、新しいユーザーを作成し、iotaトークンの預け入れと取り出しを管理するために使用できるウォレット管理システムです。ハブを独自のアプリケーションまたは取引所に統合するために使用できるgrpc",{"_index":1230,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["huge",{"_index":2309,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["hunspel",{"_index":2972,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["hwaddr",{"_index":2386,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{}}}],["i'm",{"_index":164,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/receive-test-tokens":{}}}],["i18next",{"_index":1192,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["i2c",{"_index":2146,"docTitle":{"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["iac",{"_index":1598,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["iacでタグ付けされているトランザクションを見つけて、iac",{"_index":1624,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["iacにエンコードするには、緯度と経度の座標が必要です。この例では、googl",{"_index":1617,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["iacの8番目のトライトの後に来る区切り文字は、+ではなく9",{"_index":1603,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["iacはopen",{"_index":1599,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["iacはトライトで構成されているため、iacをトランザクションのtag",{"_index":1606,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["iacは以下の3つの部分で構成されています（区切り文字9",{"_index":1607,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["iacをパディングするために0の代わりにa",{"_index":1604,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["iacを使用することで、トランザクションにエリアをタグ付けし、他の人が同じようなiac",{"_index":1597,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["iacファインダユーティリティを使用して、新しいiac",{"_index":1625,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["ibc",{"_index":1850,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/overview":{}}}],["id",{"_index":969,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/references/design-goals":{},"docs/node-software/0.1/goshimmer/introduction/overview":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/utils/0.1/official/tangle-certificate/overview":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/blueprints/0.1/doc-immutability/architecture":{},"docs/blueprints/0.1/p2p-energy/architecture":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/contribution/0.1/style-guide":{}}}],["ideal",{"_index":2107,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["identif",{"_index":1912,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["id、管理者id",{"_index":1643,"docTitle":{},"docBody":{"docs/utils/0.1/official/tangle-certificate/overview":{}}}],["idは既存のすべてのセンサー間で一意である必要があり、データストリームを購入するときのアクセスキーとして機能します。idは必ず英字（a",{"_index":1723,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["idは特定のセンサーのために他のすべてのパラメータの中で一意であるべきです。idは必ず英字（a",{"_index":1730,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["idをstore.exportaccount",{"_index":2547,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/import-seed-state":{}}}],["idをコピーし、それを使ってノードのログを読み取ります。$containeridプレースホルダをあなたのコンテナid",{"_index":991,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["idを受け取ります。チャネルidは、他の人がそのチャネルを購読してメッセージを取得できるようにする識別子です。チャネルidは、mam",{"_index":2684,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/concepts/channels":{}}}],["idを含みます。レスポンスリターンは少なくともこの2",{"_index":1760,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{}}}],["idを持ちます。このidは、インデックス0、セキュリティレベル2",{"_index":2609,"docTitle":{},"docBody":{"docs/iota-java/0.1/account-module/how-to-guides/create-account":{}}}],["idを持ちます。このidは、インデックス0およびセキュリティレベル2",{"_index":2506,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-account":{}}}],["id（url）をデータベースに永続化します。それと共に、日付/時刻、サイズなどのメタデータを追加することもできます。これは、このpoc",{"_index":1758,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{}}}],["ieee",{"_index":2063,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["ifconfig",{"_index":2264,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{}}}],["ifconfigコマンドでipアドレスを見つけることができます。ethで始まるインターフェースはイーサネットネットワークインターフェースで、wlで始まるインターフェースはwifi",{"_index":2949,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["ifconfigコマンドを実行します。プログラムはすべてのネットワークインタフェースと与えられたipアドレスを返します。ethで始まるインターフェースはイーサネットネットワークインターフェースで、wlで始まるインターフェースはwifi",{"_index":2932,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["ignor",{"_index":2446,"docTitle":{},"docBody":{"docs/iot/0.1/references/troubleshooting":{}}}],["illegalargumentexcept",{"_index":1088,"docTitle":{},"docBody":{"docs/compass/0.1/references/troubleshooting":{}}}],["imag",{"_index":2343,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["immut",{"_index":154,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/blueprints/0.1/introduction/overview":{},"docs/blueprints/0.1/doc-immutability/overview":{},"docs/blueprints/0.1/doc-immutability/architecture":{},"docs/iot/0.1/introduction/overview":{}}}],["impact",{"_index":1938,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["implement",{"_index":2362,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["imu",{"_index":2751,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/introduction/overview":{},"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["includ",{"_index":88,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["incom",{"_index":2372,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{}}}],["incompat",{"_index":1155,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/connect-to-a-custom-node":{}}}],["index",{"_index":2653,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["index.j",{"_index":1583,"docTitle":{},"docBody":{"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{},"docs/utils/0.1/official/tryte-compress/overview":{}}}],["index.md",{"_index":2980,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["industri",{"_index":1936,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{}}}],["inetip",{"_index":2910,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["inexpens",{"_index":2250,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["info",{"_index":33,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-the-tangle":{},"docs/getting-started/0.1/tutorials/get-started":{},"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/getting-started/0.1/tutorials/receive-test-tokens":{},"docs/getting-started/0.1/tutorials/send-iota-tokens":{},"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-the-trinity-wallet":{},"docs/getting-started/0.1/references/quickstart-dev-handbook":{},"docs/getting-started/0.1/references/iota-networks":{},"docs/dev-essentials/0.1/introduction/overview":{},"docs/dev-essentials/0.1/concepts/the-tangle":{},"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{},"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{},"docs/dev-essentials/0.1/concepts/minimum-weight-magnitude":{},"docs/dev-essentials/0.1/how-to-guides/convert-data-to-trytes":{},"docs/dev-essentials/0.1/how-to-guides/create-an-address":{},"docs/dev-essentials/0.1/how-to-guides/derive-addresses-from-private-keys":{},"docs/dev-essentials/0.1/how-to-guides/send-bundle":{},"docs/dev-essentials/0.1/how-to-guides/check-transaction-confirmation":{},"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{},"docs/dev-essentials/0.1/references/structure-of-a-bundle":{},"docs/dev-essentials/0.1/references/security-levels":{},"docs/node-software/0.1/iri/introduction/overview":{},"docs/node-software/0.1/iri/concepts/the-ledger":{},"docs/node-software/0.1/iri/concepts/zero-message-queue":{},"docs/node-software/0.1/iri/concepts/local-snapshot":{},"docs/node-software/0.1/iri/concepts/tip-selection":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{},"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{},"docs/node-software/0.1/iri/how-to-guides/interact-with-an-iri-node":{},"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node":{},"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{},"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{},"docs/node-software/0.1/iri/references/api-reference":{},"docs/node-software/0.1/iri/references/best-practice":{},"docs/node-software/0.1/iri/references/iri-configuration-options":{},"docs/node-software/0.1/iri/references/zmq-events":{},"docs/node-software/0.1/iri/references/troubleshooting":{},"docs/node-software/0.1/chronicle/introduction/overview":{},"docs/node-software/0.1/chronicle/how-to-guides/get-started":{},"docs/node-software/0.1/chronicle/references/api-reference":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/node-software/0.1/goshimmer/how-to-guides/send-spam":{},"docs/node-software/0.1/goshimmer/how-to-guides/subscribe-to-events":{},"docs/node-software/0.1/goshimmer/references/command-line-flags":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/wallets/0.1/trinity/introduction/overview":{},"docs/wallets/0.1/trinity/how-to-guides/create-an-account":{},"docs/wallets/0.1/trinity/how-to-guides/send-a-transaction":{},"docs/wallets/0.1/trinity/how-to-guides/receive-a-transaction":{},"docs/wallets/0.1/trinity/how-to-guides/create-a-qr-code":{},"docs/wallets/0.1/trinity/how-to-guides/create-deep-link":{},"docs/wallets/0.1/trinity/how-to-guides/connect-to-a-custom-node":{},"docs/wallets/0.1/trinity/how-to-guides/outsource-pow":{},"docs/wallets/0.1/trinity/how-to-guides/manage-your-account":{},"docs/wallets/0.1/trinity/how-to-guides/auto-promote":{},"docs/wallets/0.1/trinity/how-to-guides/perform-a-snapshot-transition":{},"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/wallets/0.1/trinity/references/troubleshooting":{},"docs/wallets/0.1/hub/introduction/overview":{},"docs/wallets/0.1/hub/concepts/sweeps":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{},"docs/wallets/0.1/hub/how-to-guides/query-the-database":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/wallets/0.1/hub/how-to-guides/integrate-hub":{},"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{},"docs/wallets/0.1/hub/references/grpc-api-reference":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/utils/0.1/community/mam-watcher/overview":{},"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/utils/0.1/official/iota-area-codes/overview":{},"docs/utils/0.1/official/proof-of-existance/overview":{},"docs/utils/0.1/official/tangle-certificate/overview":{},"docs/utils/0.1/official/tryte-compress/overview":{},"docs/blueprints/0.1/data-marketplace/overview":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/blueprints/0.1/p2p-energy/overview":{},"docs/blueprints/0.1/p2p-energy/deployment-and-testing":{},"docs/blueprints/0.1/tangle-data-storage/overview":{},"docs/blueprints/0.1/tangle-data-storage/deployment-and-testing":{},"docs/blueprints/0.1/track-and-trace/overview":{},"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{},"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{},"docs/iota-go/0.1/account-module/how-to-guides/create-account":{},"docs/iota-go/0.1/account-module/how-to-guides/listen-to-events":{},"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-go/0.1/account-module/how-to-guides/create-plugin":{},"docs/iota-go/0.1/account-module/how-to-guides/import-seed-state":{},"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{},"docs/iota-java/0.1/account-module/how-to-guides/create-account":{},"docs/iota-java/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-js/0.1/account-module/how-to-guides/create-account":{},"docs/iota-js/0.1/account-module/how-to-guides/listen-to-events":{},"docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-js/0.1/mam/how-to-guides/create-public-channel":{},"docs/iota-js/0.1/mam/how-to-guides/create-restricted-channel":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{},"docs/general/0.1/how-to-guides/set-up-virtual-machine":{},"docs/general/0.1/how-to-guides/setup-sbc":{},"docs/contribution/0.1/style-guide":{}}}],["info:depth",{"_index":146,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/getting-started/0.1/tutorials/send-iota-tokens":{},"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{}}}],["info:github",{"_index":1517,"docTitle":{},"docBody":{"docs/utils/0.1/community/mam-watcher/overview":{},"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{}}}],["info:ipv6",{"_index":2933,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["info:localhostの外からnginx",{"_index":689,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{}}}],["info:window",{"_index":2922,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["info:このテストトークンはdevnet",{"_index":172,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/receive-test-tokens":{}}}],["info:最小重量値（minimum",{"_index":1398,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{}}}],["inform",{"_index":2024,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{}}}],["infoボックスよりも深刻な情報であるwarn",{"_index":3000,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["infoボックスを使用します。たとえば、読者にヒントを与えることができます。info",{"_index":2999,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["infrastructur",{"_index":1911,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["init",{"_index":2674,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/introduction/overview":{},"docs/iota-js/0.1/mam/references/api-reference":{}}}],["initiatetransf",{"_index":2603,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{}}}],["initまたはyarn",{"_index":2673,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/introduction/overview":{}}}],["input",{"_index":845,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-errors":{},"docs/iota-js/0.1/mam/references/api-reference":{}}}],["input/output",{"_index":2240,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["inputs：値が0",{"_index":962,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/references/data-model":{}}}],["insert",{"_index":2255,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["instal",{"_index":785,"docTitle":{"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{}},"docBody":{"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{},"docs/wallets/0.1/hub/references/troubleshooting":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/references/troubleshooting":{},"docs/iota-js/0.1/core/introduction/overview":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{},"docs/contribution/0.1/style-guide":{}}}],["installを実行して、依存関係を再インストールしてください。次に、npm",{"_index":1198,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["instead",{"_index":2043,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{}}}],["instruct",{"_index":2453,"docTitle":{},"docBody":{"docs/iot/0.1/references/troubleshooting":{}}}],["int128",{"_index":2480,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{}}}],["int128ベースのpow_c128",{"_index":2478,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{}}}],["integr",{"_index":2125,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["interact",{"_index":2274,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["interfac",{"_index":1993,"docTitle":{"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["interfacesをクリックしてsshを有効にし、putti",{"_index":2795,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["interfer",{"_index":2069,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["intern",{"_index":2286,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["internet",{"_index":1895,"docTitle":{"docs/iot/0.1/introduction/overview":{}},"docBody":{"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["interruptattachingtotangl",{"_index":836,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{}}}],["interv",{"_index":2052,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["invalid",{"_index":844,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-errors":{}}}],["io",{"_index":1180,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["iosをターゲットにしていてxcod",{"_index":1178,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["iosオペレーティングシステムをターゲットにしている場合は、cocoapod",{"_index":1179,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["iot",{"_index":21,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-iota":{},"docs/client-libraries/0.1/introduction/overview":{},"docs/blueprints/0.1/data-marketplace/overview":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{}}}],["iota",{"_index":4,"docTitle":{"docs/getting-started/0.1/introduction/what-is-iota":{},"docs/getting-started/0.1/tutorials/send-iota-tokens":{},"docs/getting-started/0.1/references/quickstart-dev-handbook":{},"docs/getting-started/0.1/references/iota-networks":{},"docs/dev-essentials/0.1/references/units-of-iota-tokens":{},"docs/node-software/0.1/iri/introduction/overview":{},"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{},"docs/utils/0.1/official/iota-area-codes/overview":{},"docs/smartcity/0.1/introduction/overview":{}},"docBody":{"docs/getting-started/0.1/introduction/what-is-dlt":{},"docs/getting-started/0.1/introduction/what-is-iota":{},"docs/getting-started/0.1/introduction/what-is-a-node":{},"docs/getting-started/0.1/introduction/what-is-a-seed":{},"docs/getting-started/0.1/introduction/what-is-a-transaction":{},"docs/getting-started/0.1/introduction/what-is-a-bundle":{},"docs/getting-started/0.1/tutorials/get-started":{},"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/getting-started/0.1/tutorials/send-iota-tokens":{},"docs/getting-started/0.1/tutorials/run-your-own-iri-node":{},"docs/getting-started/0.1/references/quickstart-dev-handbook":{},"docs/getting-started/0.1/references/iota-networks":{},"docs/getting-started/0.1/references/use-cases":{},"docs/dev-essentials/0.1/introduction/overview":{},"docs/dev-essentials/0.1/concepts/the-tangle":{},"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{},"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{},"docs/dev-essentials/0.1/concepts/minimum-weight-magnitude":{},"docs/dev-essentials/0.1/how-to-guides/derive-addresses-from-private-keys":{},"docs/dev-essentials/0.1/how-to-guides/send-bundle":{},"docs/dev-essentials/0.1/references/units-of-iota-tokens":{},"docs/dev-essentials/0.1/references/glossary":{},"docs/iota-js/0.1/introduction/overview":{},"docs/iota-java/0.1/introduction/overview":{},"docs/iota-go/0.1/introduction/overview":{},"docs/smartcity/0.1/introduction/overview":{},"docs/node-software/0.1/introduction/overview":{},"docs/node-software/0.1/iri/introduction/overview":{},"docs/node-software/0.1/iri/concepts/transaction-validation":{},"docs/node-software/0.1/iri/concepts/tip-selection":{},"docs/node-software/0.1/iri/references/api-reference":{},"docs/node-software/0.1/iri/references/best-practice":{},"docs/node-software/0.1/iri/references/troubleshooting":{},"docs/node-software/0.1/chronicle/introduction/overview":{},"docs/node-software/0.1/chronicle/references/data-model":{},"docs/node-software/0.1/chronicle/references/design-goals":{},"docs/compass/0.1/introduction/overview":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/compass/0.1/references/troubleshooting":{},"docs/wallets/0.1/trinity/introduction/overview":{},"docs/wallets/0.1/trinity/concepts/hardware-wallet":{},"docs/wallets/0.1/trinity/how-to-guides/back-up-seed":{},"docs/wallets/0.1/trinity/how-to-guides/send-a-transaction":{},"docs/wallets/0.1/trinity/references/troubleshooting":{},"docs/wallets/0.1/hub/introduction/overview":{},"docs/wallets/0.1/hub/concepts/sweeps":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/wallets/0.1/hub/how-to-guides/integrate-hub":{},"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/wallets/0.1/hub/references/command-line-flags":{},"docs/wallets/0.1/hub/references/security-considerations":{},"docs/utils/0.1/introduction/overview":{},"docs/utils/0.1/community/mam-watcher/overview":{},"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{},"docs/utils/0.1/official/iota-area-codes/overview":{},"docs/utils/0.1/official/proof-of-existance/overview":{},"docs/utils/0.1/official/tryte-compress/overview":{},"docs/blueprints/0.1/introduction/overview":{},"docs/blueprints/0.1/data-marketplace/overview":{},"docs/blueprints/0.1/data-marketplace/architecture":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/blueprints/0.1/doc-immutability/overview":{},"docs/blueprints/0.1/doc-immutability/architecture":{},"docs/blueprints/0.1/p2p-energy/architecture":{},"docs/blueprints/0.1/p2p-energy/deployment-and-testing":{},"docs/blueprints/0.1/tangle-data-storage/overview":{},"docs/blueprints/0.1/tangle-data-storage/deployment-and-testing":{},"docs/blueprints/0.1/track-and-trace/overview":{},"docs/blueprints/0.1/track-and-trace/architecture":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{},"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{},"docs/iota-js/0.1/core/introduction/overview":{},"docs/iota-js/0.1/account-module/introduction/overview":{},"docs/iota-js/0.1/mam/introduction/overview":{},"docs/iota-js/0.1/mam/references/api-reference":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{},"docs/general/0.1/introduction/overview":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{},"docs/contribution/0.1/style-guide":{}}}],["iota.d",{"_index":122,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{}}}],["iota.j",{"_index":1690,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/overview":{},"docs/blueprints/0.1/doc-immutability/architecture":{},"docs/blueprints/0.1/p2p-energy/overview":{},"docs/blueprints/0.1/tangle-data-storage/overview":{},"docs/blueprints/0.1/track-and-trace/overview":{}}}],["iota.jsのソースコードとドキュメント：https&#x3a;//github.com/iotaledger/iota.j",{"_index":493,"docTitle":{},"docBody":{"docs/smartcity/0.1/introduction/overview":{}}}],["iota.jsライブラリのconverterパッケージを使用してascii",{"_index":392,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/convert-data-to-trytes":{}}}],["iota.jsライブラリのsign",{"_index":402,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/derive-addresses-from-private-keys":{}}}],["iota.pyファイルで、userwithdrawエンドポイントでiota",{"_index":1364,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["iota.pyファイルで、ハブデータベースを更新する関数を作成し、すべての預け入れが取引所所有者のhot",{"_index":1358,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["iota.pyファイルに、balancesubscript",{"_index":1350,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["iota/bundl",{"_index":1384,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{}}}],["iota/convert",{"_index":1386,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{}}}],["iota/converterからasciitotrytesを呼び出し、文字列化されたjson",{"_index":2718,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["iota/cor",{"_index":1385,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{}}}],["iota/core、@iota/converter、および@iota/tryt",{"_index":1655,"docTitle":{},"docBody":{"docs/utils/0.1/official/tryte-compress/overview":{}}}],["iota/coreパッケージと@iota/area",{"_index":1616,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["iota/ipf",{"_index":1823,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/architecture":{}}}],["iota/poex",{"_index":1630,"docTitle":{},"docBody":{"docs/utils/0.1/official/proof-of-existance/overview":{}}}],["iota/transact",{"_index":1387,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{}}}],["iota1です。このデバイスは、iota",{"_index":241,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["iota://uriで始まり、その後に90",{"_index":1143,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/create-deep-link":{}}}],["iota://xngpucurqlljfgxndcmrogynwazp9afwsveuaiwiesospydupwspsreebwjpd9zwzpajkbhplg99djwjczuhwtqtdd/?amount=1000000&message=shirt",{"_index":1145,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/create-deep-link":{}}}],["iotaapi",{"_index":2607,"docTitle":{},"docBody":{"docs/iota-java/0.1/account-module/how-to-guides/create-account":{}}}],["iotacaddy/caddi",{"_index":792,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{}}}],["iotacaddy/caddyディレクトリにcaddi",{"_index":795,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{}}}],["iotaledger/documentation@developであり、ヘッドブランチが&lt;your",{"_index":2964,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["iotaledgerのgithub",{"_index":2655,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{},"docs/iota-js/0.1/account-module/introduction/overview":{},"docs/iota-js/0.1/mam/introduction/overview":{}}}],["iotaledger依存関係をモジュールのbuild.gradl",{"_index":2578,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["iotaledger依存関係をモジュールのpom.xml",{"_index":2580,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["iotaとiot",{"_index":235,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["iotaには、3",{"_index":257,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{}}}],["iotaのアドレスは、各シードに固有の81",{"_index":287,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/introduction/overview":{}}}],["iotaのチュートリアルやガイドの多くはlinuxオペレーティングシステムを必要とします。コンピュータが別のオペレーティングシステムを実行している場合は、仮想マシン内でlinux",{"_index":2889,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["iotaの使用経験がほとんどないかまったくない場合は、iota",{"_index":1027,"docTitle":{},"docBody":{"docs/compass/0.1/introduction/overview":{}}}],["iotaの公式ウォレットです。このウォレットは、データとiota",{"_index":1089,"docTitle":{},"docBody":{"docs/wallets/0.1/introduction/overview":{}}}],["iotaの最も重要な利点の1",{"_index":1594,"docTitle":{},"docBody":{"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{}}}],["iotaの目標は、モノのインターネット（iot",{"_index":236,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["iotaの知識を持つすべての人に、ドキュメントに貢献することをお勧めします。ドキュメントについて議論するには、discordの#document",{"_index":2958,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["iotaは3進数システムを使用しています。そのため、アドレス、シード、署名などのデータはトライトに変換されます。読みやすくするために、これらの文字は27個ある文字コードの1",{"_index":444,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/tryte-alphabet":{}}}],["iotaはhashcashベースのパズルを使用してネットワークへのdo",{"_index":458,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/glossary":{}}}],["iotaはwinternitzワンタイム署名スキームを使用して署名を作成します。その結果、各署名は秘密鍵の約半分を公開してしまいます。秘密鍵を使用してバンドルに1回署名することは安全です。同じ秘密鍵で異なるバンドルに署名すると、攻撃者が秘密鍵を総当たり攻撃し、アドレスからiotaトークンを盗む可能性があります。そのため、ユーザーがアドレスから取り出すと、そのアドレスは使用済みとみなされ、2",{"_index":1223,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/concepts/sweeps":{}}}],["iotaはwinternitzワンタイム署名スキーム（w",{"_index":329,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{}}}],["iotaはwinternitzワンタイム署名方式（w",{"_index":301,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/the-tangle":{}}}],["iotaは、1トライトを27文字（a〜zと9",{"_index":389,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/trinary":{}}}],["iotaは、3進数システムに従ってデータを表します。2進数と比較すると、2値計算ではなく3つの状態でデータを表すことができるため、2",{"_index":385,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/trinary":{}}}],["iotaは、iotaネットワーク内のデバイスがイミュータブルなデータと価値（iota",{"_index":5,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-iota":{}}}],["iotaは、m2m",{"_index":6,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-iota":{}}}],["iotaは、さまざまなデバイス間でデータや価値（iota",{"_index":16,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-iota":{}}}],["iotaは、イミュータブルなデータや値をiota",{"_index":57,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{}}}],["iotaは、ネットワークを保護し、攻撃者がiota",{"_index":18,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-iota":{}}}],["iotaは、バンドルに署名するためにwinternitzワンタイム署名方式を使用します。その結果、各署名は秘密鍵の約半分を公開します。秘密鍵でバンドルに一度署名するのは安全です。したがって、ユーザーがアドレスからiotaトークンを取り出すと、そのアドレスは「使用済み」と見なされ、そのアドレスからは二度とiota",{"_index":1215,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/introduction/overview":{}}}],["iotaは、専売のシステムを統合することなく、回収可能資産に関する情報をシームレスに収集および共有するための解決策を提供します。情報を収集している間、iotaはセカンドレイヤー技術のmam",{"_index":1853,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/overview":{}}}],["iotaは、暗号化された方法でデータと価値を転送することを可能にするプロトコルです。そのため、iota",{"_index":2861,"docTitle":{},"docBody":{"docs/general/0.1/introduction/overview":{}}}],["iotaはオープンソーステクノロジーであるため、誰でも自由に独自のiotaネットワークを実行して公開できます。プライベートiota",{"_index":215,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["iotaはバンドルに署名するためにwinternitzワンタイム署名方式を使用しています。この署名方式は、アドレスから一度だけ安全にiotaトークンを取り出せることを意味しています。よって、常にアドレスから全残高を取り出す必要があります。残高の一部だけを他の人に転送したい場合は、残りの残高を自分の未使用のアドレスの1",{"_index":56,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-bundle":{}}}],["iotaはパーミッションレスです。つまり、誰でもネットワークを使用して支払いをしたり、データを送信したりできます。サインアップしたり、個人情報を提供したり、サブスクリプションを支払う必要はありません。代わりに、iota",{"_index":7,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-iota":{}}}],["iotaは無許可型dlt",{"_index":23,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-node":{}}}],["iotaをアプリやwebサイトに統合するには、次の3",{"_index":58,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{}}}],["iotaをクラウドiot環境（aw",{"_index":242,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["iotaをテストするときは、あるアドレスから別のアドレスにiotaトークンを送信したいと思います。mainnet上では、iotaトークンは取引所でトレードすることができる金銭的価値を持っています。危険を冒さずにテストトランザクションを送信するには、devnet",{"_index":161,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/receive-test-tokens":{}}}],["iotaを使用してp2p",{"_index":1666,"docTitle":{},"docBody":{"docs/blueprints/0.1/introduction/overview":{}}}],["iotaを使用してピアツーピア（p2p",{"_index":1772,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/overview":{}}}],["iotaを使用するために必要なのはシードのみです。これはiota",{"_index":8,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-iota":{}}}],["iotaを使用すると、iotaトークンと同様にデータ（ゼロトークン）トランザクションを送信できます。これらのゼロトークントランザクションは、イミュータブルなメッセージをタングルに送信して保存したいアプリケーションに役立ちます。ゼロトークンのトランザクションのみを送信するためには、iota",{"_index":129,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{}}}],["iotaを自身のアーキテクチャーに統合するのを手伝って欲しい場合は、iota財団のチーム（integrations@iota.org",{"_index":874,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/best-practice":{}}}],["iotaアドレスからはiotaトークンを一度だけしか取り出してはいけません。すでにiota",{"_index":1205,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/references/troubleshooting":{}}}],["iotaアプリケーションはすべてのアプリケーションコンポーネントと対話することに対して責任があるアプリを含みます。たとえば、ハッシュ値とドキュメントidの生成、ドキュメントのファイルストレージへの格納、postgresql",{"_index":1749,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{}}}],["iotaウォレットであり、iota",{"_index":1306,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{}}}],["iotaエコシステムの技術的実現の鍵です。このpocの範囲では、タングルはすべてのドキュメント署名を保持して公開し、ドキュメントの不変性をチェックするための真の情報源として使用します。タングルを使用するには、iriノードに接続する必要があります。iri",{"_index":1750,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{}}}],["iotaエリアコードマップには、googl",{"_index":1545,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["iotaエリアコード（iac）は、iota",{"_index":1596,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["iotaオブジェクトのインスタンスを作成し、provid",{"_index":398,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/create-an-address":{}}}],["iotaオブジェクトのインスタンスを作成し、providerフィールドを使用してdevnet",{"_index":1621,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{},"docs/utils/0.1/official/tryte-compress/overview":{}}}],["iotaオブジェクトのインスタンスを作成し、providerフィールドを使用してiri",{"_index":407,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/send-bundle":{},"docs/dev-essentials/0.1/how-to-guides/check-transaction-confirmation":{}}}],["iotaクライアントライブラリには、データを変換するための組み込み関数があります。あるいは、iota",{"_index":390,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/trinary":{}}}],["iotaクライアントライブラリには、トライト、トリット、およびascii",{"_index":391,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/convert-data-to-trytes":{}}}],["iotaクライアントライブラリは、iota",{"_index":470,"docTitle":{},"docBody":{"docs/client-libraries/0.1/introduction/overview":{}}}],["iotaコミュニティのgithubリポジトリのmostusedaddresses.scala",{"_index":761,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["iotaコミュニティは、さまざまな言語でmam",{"_index":252,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["iotaタングルおよびmamチャネルへのアクセスに必要な情報を保存する機能を備えて、既存の資産リポジトリを管理システムの一部として拡張します。ibcsグループの場合、これはibc",{"_index":1879,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["iotaタングルおよび他のiotaテクノロジを使用して、ibc",{"_index":1849,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/overview":{}}}],["iotaタングルおよび他のiota技術を使用して、ibc",{"_index":1670,"docTitle":{},"docBody":{"docs/blueprints/0.1/introduction/overview":{}}}],["iotaタングルと、あなたが実行しているinterplanetari",{"_index":1821,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/architecture":{}}}],["iotaタングルに公開します（mam.attach()）。iotaはトライトを使用しているので、mamペイロードをタングルに送信する前にトライトに変換して（asciitotrytes(json.stringify(data))）mamメッセージを作成する（mam.cr",{"_index":1888,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["iotaタングルのデータを長期間保存する必要があります。たとえば、場合によっては財務データを10年間保存する必要があり、idの有効期間中はid",{"_index":900,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/introduction/overview":{}}}],["iotaタングルを使用してデータをmam",{"_index":1693,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/architecture":{}}}],["iotaテクノロジーの概要を説明し、あなた自身のアプリケーションでiota",{"_index":211,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["iotaテクノロジーは、このようなアーキテクチャにおいて有利です。なぜなら、iota",{"_index":1778,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["iotaテクノロジースタックの将来の戦略に合わせてrust",{"_index":902,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/introduction/overview":{}}}],["iotaテストトークンを取得し、テストトランザクションでiota",{"_index":128,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{}}}],["iotaデータトランザクションの送信には、クライアントが暗号資産（iota",{"_index":219,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["iotaトランザクションが参照するトランザクションに接続することによって形成される有向非巡回グラフ（dag",{"_index":461,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/glossary":{}}}],["iotaトランザクションの履歴を含むイミュータブルなデータ構造です。iota",{"_index":28,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-the-tangle":{}}}],["iotaトランザクションは、信頼できるデータと価値の記録を提供するため、このデータをクロニクルで保護することが重要です。クロニクルデータはscylla",{"_index":920,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["iotaトランザクションを含むイミュータブルなデータ構造です。iota",{"_index":297,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/the-tangle":{}}}],["iotaトランザクションを安全でスケーラブルな分散scylla",{"_index":901,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/introduction/overview":{}}}],["iotaトークンが取り出されたことを意味します。トリニティは使用済みアドレスからiotaトークンを取り出すことを止めさせます。そしてあなたは使用済みアドレスにiota",{"_index":1157,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/manage-your-account":{}}}],["iotaトークンが取り出された（使用済みまたは署名済みとも呼ばれる）アドレスのシードuuid",{"_index":1505,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/database-tables":{}}}],["iotaトークンが取り出されているかどうかを確認します。そして、アドレスからiotaトークンが取り出されている場合、ハブは新しい預け入れアドレスの導出に使用する新しいシードuuid",{"_index":1217,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/introduction/overview":{}}}],["iotaトークンと同数だけiota",{"_index":1368,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/integrate-hub":{}}}],["iotaトークンの二重支出）を返し、コンパスはこの矛盾するトランザクションを確定するマイルストーンを送信します。すると他のiri",{"_index":1065,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["iotaトークンの値が、iota",{"_index":526,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/transaction-validation":{}}}],["iotaトークンの値を合計すると0",{"_index":528,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/transaction-validation":{}}}],["iotaトークンの総供給量は(333",{"_index":445,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/units-of-iota-tokens":{}}}],["iotaトークンの量、トランザクションに追加したいタグ、そしてトークンを送信するアドレスを指定するtransf",{"_index":178,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-iota-tokens":{}}}],["iotaトークンの量、送信するメッセージ、および送信先のアドレスを指定するtransf",{"_index":1658,"docTitle":{},"docBody":{"docs/utils/0.1/official/tryte-compress/overview":{}}}],["iotaトークンの量があります。この場合は1,000",{"_index":12,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-iota":{}}}],["iotaトークンの量をチェックすることによって、各バンドルが二重支払いにつながらないことをチェックします。二重支払いが見つかった場合、重み付きランダムウォークは1",{"_index":529,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/transaction-validation":{}}}],["iotaトークンの預け入れと取り出しを管理するための安全な方法を提供します。ユーザーがiotaトークンを自分のハブアドレスの1つに預け入れると、スイープと呼ばれるプロセスでユーザーのiotaトークンがハブ所有者のアドレスに転送されます。このようにして、ハブ所有者は、ユーザーが取り出しを要求するまでユーザーのiota",{"_index":1091,"docTitle":{},"docBody":{"docs/wallets/0.1/introduction/overview":{}}}],["iotaトークンはiota",{"_index":11,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-iota":{},"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["iotaトークンは転送されません。現時点では、zmqエンドポイントはtx",{"_index":1023,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/subscribe-to-events":{}}}],["iotaトークンまたはデータを転送するためにiriノードに送信される命令。トランザクションは、iota",{"_index":466,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/glossary":{}}}],["iotaトークンをデバイスのウォレットに供給することができます。通常、100,000iから1,000,000iのdevnet",{"_index":1738,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["iotaトークンをハブアドレスに預け入れるか、ハブアドレスから取り出すと、ハブはそれらの転送を1つのスウィープに結合します。取り出しの合計が預け入れの合計よりも少ない場合、ハブは残りの残高をハブ所有者に属する新しいアドレスに転送します。預け入れの合計が取り出しの合計よりも少ない場合、ハブはハブ所有者のアドレスのiota",{"_index":1222,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/concepts/sweeps":{}}}],["iotaトークンをハブ外に保存するには、iota",{"_index":1378,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/integrate-hub":{}}}],["iotaトークンをハブ外に保存するには、ハブ所有者のアドレスの1つから新しいコールドウォレットアドレスにiota",{"_index":1373,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/integrate-hub":{}}}],["iotaトークンをメガiota（1,000,000）単位で販売しています。これはmiotaまたはmi",{"_index":261,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{}}}],["iotaトークンをリカバーするために、signbundl",{"_index":1381,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{}}}],["iotaトークンを保持しているので残高があります。iotaトークンを使うには、シードを使って、iotaトークンを保持しているアドレスを所有していることを証明する必要があります。シードには数字9と大文字のa〜z",{"_index":35,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-seed":{}}}],["iotaトークンを保持しているので残高を持っています。iotaトークンを転送するには、シードを使って、アドレスの所有権を証明する必要があります。シードには数字9と大文字のa〜z",{"_index":60,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{}}}],["iotaトークンを単一のアドレスに転送する場合は、recoverfund",{"_index":1460,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["iotaトークンを取り出すトランザクションのバンドルハッシュに署名します。次に、署名の結果がトランザクションのsignaturemessagefrag",{"_index":332,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{}}}],["iotaトークンを取り出す前に、ハブは同じアドレスに対してペンディング中の預け入れトランザクションがないこと、および以前のすべての預け入れトランザクションが確定済みであることを確認します。どのアドレスから取り出されたかを追跡するために、ハブはアドレスをデータベースに格納します。アドレスからiotaトークンが取り出されている場合、ハブはユーザーがそのアドレスから再びiota",{"_index":1216,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/introduction/overview":{}}}],["iotaトークンを取引所アカウントに預け入れるには、このアドレスにiota",{"_index":1346,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["iotaトークンを受け取るには、送信者に自分のアドレスの1",{"_index":396,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/create-an-address":{}}}],["iotaトークンを受信者のアドレスに預け入れ、またはiota",{"_index":39,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-transaction":{}}}],["iotaトークンを所有している場合は、devnet",{"_index":163,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/receive-test-tokens":{},"docs/getting-started/0.1/tutorials/send-iota-tokens":{}}}],["iotaトークンを所有するアカウント。アドレスを使ってデータとiota",{"_index":449,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/glossary":{}}}],["iotaトークンを持つアドレスを含む必要はありません。81文字未満のシードを入力した場合、ライブラリは末尾に9を追加して81",{"_index":1622,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["iotaトークンを管理します。この情報は、grpc",{"_index":1502,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/database-tables":{}}}],["iotaトークンを購入すると、購入したiota",{"_index":260,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{}}}],["iotaトークンを転送して欲しい場合、送信者にあなたのcda",{"_index":2537,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-java/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["iotaトークンを転送することにより、ユーザーが同じアドレスから2",{"_index":1224,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/concepts/sweeps":{}}}],["iotaトークンを転送するには、iotaトークンを取り出すための入力トランザクションと、トークンを新しいアドレスに預け入れるための出力トランザクションが少なくとも1",{"_index":40,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-transaction":{}}}],["iotaトークンを転送するには、バンドルに少なくとも1つの入力トランザクションと1",{"_index":44,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-bundle":{}}}],["iotaトークンを転送するようにノードに指示することができる1",{"_index":41,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-bundle":{}}}],["iotaトークンを転送するバンドルを再添付すると、確定されるのは1つだけです。二重支出（同じiotaトークンを2",{"_index":384,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/reattach-rebroadcast-promote":{}}}],["iotaトークンを転送する前に、iota",{"_index":417,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/check-transaction-confirmation":{}}}],["iotaトークンを送信した場合、withdraw",{"_index":1365,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["iotaトークンを送信しないので、このアドレスは誰にも属している必要はありません。アドレスが有効であるためには、ただ81",{"_index":142,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{}}}],["iotaトークンを送信する場合があります。この場合、攻撃者が署名をブルートフォースしてiotaトークンを盗もうとするリスクがあります。スウィープされたアドレスからiotaトークンを回復するために、潜在的な攻撃者ができる前にiotaトークンを新しいアドレスに転送しようとすることができます。これを行うと、アドレスの秘密鍵がより多く公開されますが、iota",{"_index":1380,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{}}}],["iotaトークンを選択した取り出しアドレスに転送するスウィープを作成します。1",{"_index":1227,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/concepts/sweeps":{}}}],["iotaトークンを預け入れた場合、apiの1つのrecoverfundsapi",{"_index":1219,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/introduction/overview":{}}}],["iotaトークンを預け入れまたは取り出すことはできません。この機能を追加するには、ハブrest",{"_index":1335,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["iotaトークンを預け入れるたびに、getdepositaddress",{"_index":1336,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["iotaトークンを預け入れるトランザクションは、iota",{"_index":355,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{}}}],["iotaトークン移転用のトランザクションの場合、アドレスの最後のトリットが0",{"_index":527,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/transaction-validation":{}}}],["iotaトークン量の記録が含まれています。iotaトークンはユーザーのアドレスには保存されません。代わりに、ユーザーのiota",{"_index":1214,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/introduction/overview":{}}}],["iotaトークン（およびqub",{"_index":1854,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/overview":{}}}],["iotaネットワークで、運用者が知っているノードだけを含みます。プライベートタングルは、パブリックiotaネットワークと同じテクノロジを使用しますが、コンパスと呼ばれるコーディネータのオープンソース実装を実行してプライベートタングルを制御します。コンパスを使用すると、プライベートタングルに添付されているトランザクションについてノードが合意に達することができます。コンパスが停止した場合、iota",{"_index":1026,"docTitle":{},"docBody":{"docs/compass/0.1/introduction/overview":{}}}],["iotaネットワークであり、既知のノードのみが含まれます。このタイプのネットワークは、制御することを除いて、パブリックiota",{"_index":216,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["iotaネットワークでアカウントを使用して、iota",{"_index":2497,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-account":{},"docs/iota-java/0.1/account-module/how-to-guides/create-account":{},"docs/iota-js/0.1/account-module/how-to-guides/create-account":{}}}],["iotaネットワークでトランザクションを送信するには、シードと呼ばれる秘密のパスワードが必要です。シードにより、シードから導出されたすべてのアドレスにアクセスできます。これらのアドレスはiotaトークンを保持しているので、iotaネットワーク内のすべてのノードに保存され、最新の状態に保たれる残高を持っています。iotaトークンを使用するには、トランザクションを作成し、そのトランザクションが入っているバンドルに署名して、iota",{"_index":317,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{}}}],["iotaネットワークでメッセージを自分に送信しました。友達にメッセージを送信できるように、友達のアドレスの1",{"_index":210,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-the-trinity-wallet":{}}}],["iotaネットワークで価値を移転するためには、iota",{"_index":15,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-iota":{}}}],["iotaネットワークとの同期を開始します。ノードに同期する時間を与えるか、iri",{"_index":680,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["iotaネットワークと対話して、トランザクションを送信するためにiri",{"_index":459,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/glossary":{}}}],["iotaネットワークによって受け入れられる前に、トランザクションは確定されなければなりません。ユーザーが自分のアドレスの1つにiotaトークンを預け入れたとき、またはハブ所有者が取り出しを発行したときに、トランザクションはペンティぐ状態のままになります。そのため、確認の遅れを避けるために、hub",{"_index":1210,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/introduction/overview":{}}}],["iotaネットワークにデータとiotaトークンを転送できるユーザーインターフェースを備えたモバイルおよびデスクトップアプリケーションです。iota",{"_index":198,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-the-trinity-wallet":{}}}],["iotaネットワークに何か送信したい場合は、トランザクションの形でノードに送信する必要があります。トランザクションは、入力トランザクション（アドレスからの取り出し）または出力トランザクション（アドレスへの預け入れまたはゼロトークントランザクション）のいずれかになる単一の操作です。ノードに1",{"_index":340,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{}}}],["iotaネットワークの1つであるdevnetのノードに接続します。devnetは、トークンが無料であることを除いて、mainnet",{"_index":2688,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/how-to-guides/create-public-channel":{},"docs/iota-js/0.1/mam/how-to-guides/create-restricted-channel":{}}}],["iotaネットワークの1つであるdevnetのノードに接続します。devnetは、トークンが無料であること以外はmainnet",{"_index":120,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{}}}],["iotaネットワークの中核です。クライアントは、トランザクションをノードに送信して検証し、台帳に記録する必要があります。ノードがなければ、iota",{"_index":184,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/run-your-own-iri-node":{}}}],["iotaネットワークは、p2pネットワークです。中央機関がトランザクションの台帳を管理するのではなく、すべてのノードがコピーを保持し、iota",{"_index":19,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-iota":{}}}],["iotaネットワークは、すべてのノードがタングルのコピーを保存する相互接続されたノードの集まりです。各iotaネットワークのタングルには異なるトランザクションが含まれているため、iota",{"_index":212,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["iotaネットワークは、ノードとクライアントで構成されています。ノードは、トランザクションのタングルと呼ばれる台帳への読み取り/書き込みのアクセス権を持つデバイスです。クライアントは、データまたはiotaトークンのいずれかを転送するトランザクションを作成し、トランザクションを検証のためにノードに送信するデバイスです。シードはクライアントにアドレスへのアクセス権を与えます。アドレスには残高があり、残高がアドレス中のiotaトークンの量を定義します。iota",{"_index":286,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/introduction/overview":{}}}],["iotaネットワークは、独自のmwmを強制します。devnetでは、mwmは9です。しかし、mainnetでは、mwmは14です。小さすぎるmwm",{"_index":1401,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{}}}],["iotaネットワークは、誰でも参加してトランザクションを送信できるネットワークです。パブリックiotaネットワーク内のすべてのトランザクションは透過的です。誰でもすべてのアドレスのトランザクションと残高を見ることができます。タングルエクスプローラと呼ばれるアプリケーションでこれらを見ることができます。これらのアプリケーションは、タングルからデータを取得して、誰でも閲覧できるようにパブリックweb",{"_index":258,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{}}}],["iotaネットワークはそれぞれのmwm",{"_index":181,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-iota-tokens":{}}}],["iotaネットワークはそれぞれのmwmを強制します。devnetでは、mwmは9です。一方、mainnetでは、mwmは14です。小さすぎるmwm",{"_index":151,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{}}}],["iotaネットワークは無料のテストトークンを先ほどのアドレスに転送したバンドルを受け取っても検証もしていません。それ故に、他のiotaネットワークではアドレスの残高を更新してはいません。これらのトークンを使用できるのは、devnet",{"_index":173,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/receive-test-tokens":{}}}],["iotaネットワークを使い台帳の同期を開始します。ノードに同期をとる時間を与えます。iri",{"_index":652,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["iotaネットワークを使用するには、クライアントライブラリを介してノードと対話できます。トリニティなどの多くのiotaアプリケーションは、舞台裏でこれらのクライアントライブラリの1",{"_index":26,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-node":{}}}],["iotaネットワークを構成するデバイスです。他の分散システムと同様に、iotaネットワーク内のノードは相互に接続されているため、相互にゴシップ情報があります。したがって、1つのノード（世界のどこにいても）がトランザクションを受信すると、ネットワーク内の他のすべてのノードに転送されます。このようにして、同じiota",{"_index":9,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-iota":{}}}],["iotaネットワーク上で互いに直接通信するiriノードです。iriの台帳をネットワークの他の部分と同期させるには、すべてのiri",{"_index":519,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/neighbor-iri-node":{}}}],["iotaネットワーク上で実行するiri",{"_index":27,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-node":{}}}],["iotaネットワーク内のすべてのiriノードによって保持されている共通台帳。iri",{"_index":460,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/glossary":{}}}],["iotaネットワーク内のすべてのノードは、ハッシュ値が事前に定義されたmwmと同じかそれ以上の数の0トリットで終わるトランザクションを受け入れます。トランザクション末尾の0の個数がmwm",{"_index":372,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/minimum-weight-magnitude":{}}}],["iotaネットワーク内のタングルへの読み書きアクセス権を持つデバイスです。すべてのノードはタングルのコピーとiotaトークンを保持するアドレスの記録を保存します。クライアントはiota",{"_index":22,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-node":{}}}],["iotaネットワーク内のノードの規則（プロトコル）に従って構造化されているオブジェクトです。各トランザクションは、iotaトークンの取り出し、iota",{"_index":289,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/introduction/overview":{}}}],["iotaネットワーク内の各iri",{"_index":525,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/transaction-validation":{}}}],["iotaノードへのiota",{"_index":218,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["iotaノードをデプロイし、iota",{"_index":221,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["iotaバインディングリポジトリのwasm/asm.j",{"_index":2702,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["iotaプロトコルでは、iotaトークンはシードから派生したアドレスに送信する必要があります。これらのアドレスは一度だけiotaトークンを取り出すことができます。そのため、iotaトークンを一度取り出したアドレスにiotaトークンを再度預け入れないことが重要です。しかし、あなたがアドレスから取り出すする前に、誰かがあなたのアドレスにiota",{"_index":2499,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-account":{}}}],["iotaプロトコルでは、iotaトークンはシードから派生したアドレスに送信する必要があります。これらのアドレスは一度だけiotaトークンを取り出すすることができます。そのため、iotaトークンを一度取り出したアドレスにiotaトークンを預けないことが重要です。しかし、あなたがアドレスから取り出すする前に、誰かがあなたのアドレスにiota",{"_index":2605,"docTitle":{},"docBody":{"docs/iota-java/0.1/account-module/how-to-guides/create-account":{},"docs/iota-js/0.1/account-module/how-to-guides/create-account":{}}}],["iotaプロトコルでは暗号化を使用して、シードからほぼ無制限のアドレスを導出することができます。アドレスは一般公開されているので、データやiota",{"_index":36,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-seed":{}}}],["iotaプロトコルの複雑さを抽象化し、支払いに集中できるようにします。アカウントでは、支払いは次の2",{"_index":2495,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{},"docs/iota-js/0.1/account-module/introduction/overview":{}}}],["iotaプロトコル内のkeccak",{"_index":318,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{}}}],["iotaユーティリティweb",{"_index":1138,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/create-a-qr-code":{}}}],["iotaライトウォレットは、http&#x3a;//localhost:14265でiri",{"_index":1556,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["iota単位または選択した通貨で入力できます。送金しているiota単位（i、mi、gi",{"_index":1130,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/send-a-transaction":{}}}],["iota独自のソリューションを開発しています。iotaスマートコントラクトは、特定の条件が満たされた場合の資金の単純な譲渡を超えます。実際、キュービックの野望は、スマートコントラクトを許可するだけでなく、iot",{"_index":256,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["iota蛇口を使用してより多くのdevnet",{"_index":1740,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["iota蛇口ページに移動し、ウォレットアドレスを入力します。これは、getus",{"_index":1742,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["iota財団がiota",{"_index":858,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/best-practice":{}}}],["iota財団が実行しているエントリノードとの自動ピアリングによってネットワークに参加します。iota財団のエントリノードと自動ピアするには、自動ピアリングポートとゴシップポートがノードに転送されていることを確認する必要があります。デフォルトでは、これらのポートは14666と14626",{"_index":983,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["iota財団に報告すると、iota財団のバグバウンティを通して金銭的な報酬を受け取れます。詳しくは、trin",{"_index":1092,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/introduction/overview":{}}}],["iota財団のgithub",{"_index":1108,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{}}}],["iota財団のgui",{"_index":1891,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/deployment-and-testing":{}}}],["iota財団のwebサイト、iota",{"_index":613,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["iota財団のアプローチはオープンでパーミッションレスです。iota",{"_index":1686,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/overview":{}}}],["iota財団の住所の緯度と経度の座標は52.529510、13.413018です。これらの座標のiacは、nphtqorl9xk",{"_index":1605,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["iota財団はdevnet上で以下のパブリックiri",{"_index":268,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{}}}],["iota財団はspamnet上で以下のパブリックiri",{"_index":281,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{}}}],["iota財団は、概念実証（poc",{"_index":1682,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/overview":{}}}],["iota財団は、誰でもがノードを実行でき、ノードに接続でき、トランザクションの読み取り/書き込みができる2",{"_index":213,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["iota財団はあなたがあなた自身の研究をし、専門家を探し、そしてiota",{"_index":1694,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/architecture":{},"docs/blueprints/0.1/doc-immutability/architecture":{},"docs/blueprints/0.1/p2p-energy/architecture":{},"docs/blueprints/0.1/tangle-data-storage/architecture":{},"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["iota財団は依存関係を更新して構成を変更します。trin",{"_index":1196,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["iota財団は非営利団体としてオープンソース技術を生み出し、他の組織が自社のiota",{"_index":1683,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/overview":{}}}],["iota財団自体のためにも、アジャイルで実験主導の集団的なイノベーションアプローチを可能にするように設計されています。このイニシアチブは、実環境での展開の要件とデータマーケットプレイスの参加者の要求によってiotaテクノロジに挑戦します。iota財団はこれらの要求を満たすためにiota",{"_index":1687,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/overview":{}}}],["iotなど）に統合する最善の方法についても取り組んでいます。この統合により、タングルを介して物理デバイス間でiot",{"_index":245,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["iotやgoogl",{"_index":243,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["iotデバイスがネットワーク上でやり取りすると予想するiota",{"_index":295,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/introduction/overview":{}}}],["iotデバイスはiota",{"_index":237,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["iot（internet",{"_index":1684,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/overview":{}}}],["ip",{"_index":696,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{},"docs/general/0.1/how-to-guides/set-up-virtual-machine":{},"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["ip_address",{"_index":2267,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["ipc",{"_index":956,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/references/architecture":{}}}],["ipcを介してscylla",{"_index":958,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/references/architecture":{}}}],["ipf",{"_index":1816,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/overview":{},"docs/blueprints/0.1/tangle-data-storage/architecture":{},"docs/blueprints/0.1/tangle-data-storage/deployment-and-testing":{}}}],["ipfsにアップロードします。ipfsはipf",{"_index":1829,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/architecture":{}}}],["ipfsにファイルを保存してから、イミュータブルで永続的なipf",{"_index":1817,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/overview":{}}}],["ipfsは分散webであるため、ipf",{"_index":1840,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/architecture":{}}}],["ipfsノードとタングルにデータの保存を開始するには、アプリケーションをデプロイし、iota",{"_index":1843,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/deployment-and-testing":{}}}],["ipfsハッシュを使ってipf",{"_index":1836,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/architecture":{}}}],["ipfs）からのトランザクションハッシュを使用してメタデータ、sha256ハッシュおよびipf",{"_index":1835,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/architecture":{}}}],["ipsp",{"_index":2088,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["ipv4",{"_index":2257,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["ipv6",{"_index":2014,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/references/troubleshooting":{},"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["ipv6を使用する場合は、ssh",{"_index":2934,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["ipを取得するには、さまざまな方法があります。このガイドは、そのための1",{"_index":2865,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["ipアドレスからのリクエストがiriノードに問題を引き起こしている場合は、特定のip",{"_index":697,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{}}}],["ipアドレスからのリクエストが多すぎると、jsonレスポンスと503",{"_index":695,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{}}}],["ipアドレスが必要です。不幸なことに、インターネットサービスプロバイダはあなたのルーターに動的ipアドレスを与えることが多く、それは定期的に変わります。その結果、デバイスのipアドレスが変わると、デバイスへの接続はすべて失われます。したがって、動的ipアドレスにリンクされているパブリックドメイン名を取得するには、動的dns（ddns）サービスを使用する必要があります。ddnsを使用すると、デバイスは実際のパブリックipを数分ごとにddn",{"_index":2872,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["ipアドレスでポートが開いていることを確認して、ルールをテストします。ルールをテストするには、yougetsignal.com",{"_index":2888,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["ipアドレスにマップします。192.168.2.210を署名サーバーのipアドレスに変更します。sign",{"_index":1287,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["ipアドレスの特定のポートからローカルデバイスの内部ip",{"_index":2879,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["ipアドレスはinetの隣にあります。127.0.0.1のipアドレスは無視します。127.0.0.1はあなたのローカルホストです。ネットマスクの場合、255は8ビットを表します。したがって、この例のネットマスク長は3\\*8で、長さは24",{"_index":2868,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["ipアドレスをduck",{"_index":2878,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["ipアドレスをserverブロックディレクティブに追加します。ipaddressを制限したいip",{"_index":698,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{}}}],["ipアドレスを変化させないようにする必要があります。それ以外の場合は、ip",{"_index":2863,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["ipアドレスを見つけたら、sshを通してsbc",{"_index":2939,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["ipアドレスを見つけた場合は、自分のアドレスが見つかるまですべてのip",{"_index":2955,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["ipアドレス内のすべての場所は8ビット（256ステート）を取り、ネットマスクは3バイトに設定されているため、ネットマスクは24（3×8=24",{"_index":2952,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["ipアドレス（ルーターのip",{"_index":2866,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["iri",{"_index":185,"docTitle":{"docs/node-software/0.1/iri/concepts/neighbor-iri-node":{},"docs/node-software/0.1/iri/how-to-guides/find-neighbor-iri-nodes":{},"docs/node-software/0.1/iri/how-to-guides/update-the-iri":{},"docs/node-software/0.1/iri/references/iri-configuration-options":{}},"docBody":{"docs/getting-started/0.1/tutorials/run-your-own-iri-node":{},"docs/getting-started/0.1/references/quickstart-dev-handbook":{},"docs/getting-started/0.1/references/iota-networks":{},"docs/dev-essentials/0.1/references/glossary":{},"docs/node-software/0.1/introduction/overview":{},"docs/node-software/0.1/iri/introduction/overview":{},"docs/node-software/0.1/iri/concepts/the-ledger":{},"docs/node-software/0.1/iri/concepts/neighbor-iri-node":{},"docs/node-software/0.1/iri/concepts/transaction-validation":{},"docs/node-software/0.1/iri/concepts/local-snapshot":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{},"docs/node-software/0.1/iri/how-to-guides/prune-transactions-from-the-ledger":{},"docs/node-software/0.1/iri/how-to-guides/find-neighbor-iri-nodes":{},"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{},"docs/node-software/0.1/iri/how-to-guides/update-the-iri":{},"docs/node-software/0.1/iri/references/api-errors":{},"docs/node-software/0.1/iri/references/data-in-the-ledger":{},"docs/node-software/0.1/iri/references/iri-configuration-options":{},"docs/node-software/0.1/iri/references/troubleshooting":{},"docs/node-software/0.1/chronicle/introduction/overview":{},"docs/node-software/0.1/chronicle/how-to-guides/get-started":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/compass/0.1/references/troubleshooting":{},"docs/wallets/0.1/trinity/how-to-guides/read-your-balance":{},"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/blueprints/0.1/track-and-trace/deployment-and-testing":{}}}],["iri.conf",{"_index":688,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{}}}],["iriがgithubでリリースされたら、ローカルのiri",{"_index":802,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/update-the-iri":{}}}],["iriが同期するまでには時間がかかることがあります。iri",{"_index":894,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/troubleshooting":{}}}],["iriが自身の台帳と隣接iri",{"_index":543,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/local-snapshot":{}}}],["iriと隣接ノードが互いにデータを送信しあっていることを確認してください。getneighbor",{"_index":896,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/troubleshooting":{}}}],["iriにconfig.ini",{"_index":645,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["iriのバージョン1.6.0",{"_index":539,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/local-snapshot":{}}}],["iriの各バージョンには、ノードがスナップショットを開始できるハードコードされたマイルストーンがあります。より速く同期するために、iri",{"_index":538,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/local-snapshot":{}}}],["iriはjavaソフトウェアなので、javaランタイム環境（jr",{"_index":598,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["iriはjava仮想マシンで動作します。したがって、iriを実行する前に、いくつかのjava",{"_index":627,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["iriはトランザクションを受け取り、トランザクションを台帳に記録します。トランザクションを作成または署名することはありません。トランザクションを作成または署名するには、トリニティまたはクライアントライブラリなどのクライアントソフトウェアを使用して、トランザクションをiri",{"_index":513,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/introduction/overview":{}}}],["iriを実行します。jakeをご自身のlinuxユーザー名に変更し、$versionをダウンロードしたiri",{"_index":644,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["iriを構築済みのdock",{"_index":191,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/run-your-own-iri-node":{}}}],["iriソフトウェアをダウンロードする方法は2",{"_index":599,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["iriソフトウェアを実行すると、お使いのデバイスがタングルに直接アクセス可能なノードになります。ノードを実行することで、台帳の数を増やし、隣接ノードのトランザクションを検証することで、iota",{"_index":587,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["iriノードが2",{"_index":465,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/glossary":{}}}],["iriノードがtransact",{"_index":875,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/data-in-the-ledger":{}}}],["iriノードがある場合は、負荷分散を追加して、複数のiriノード間でapi",{"_index":700,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{}}}],["iriノードがそれぞれの台帳に同じトランザクションを持っていると、合意に達しています。この合意は、クライアントが任意のiri",{"_index":522,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/neighbor-iri-node":{}}}],["iriノードが同期していない場合は、local_snapshots_interval_unsync",{"_index":541,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/local-snapshot":{}}}],["iriノードが同期している場合、local_snapshots_interval_sync",{"_index":540,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/local-snapshot":{}}}],["iriノードが発行できるゼロメッセージキュー（zmq",{"_index":887,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/zmq-events":{}}}],["iriノードが隣接iriノードに接続する主な理由は、互いのトランザクションを検証することです。すべてのクライアントが、どの近隣ノードにも接続されていない1つのiriノードだけに依存している場合、そのiri",{"_index":520,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/neighbor-iri-node":{}}}],["iriノードが非凝固トランザクションを検出した場合、iri",{"_index":524,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/neighbor-iri-node":{}}}],["iriノードとscyllaスウォームの間の緑のコンポーネントで構成されています。このノードには、アンブレラプロジェクト、apiサービス、コアアプリ、zmq",{"_index":955,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/references/architecture":{}}}],["iriノードにコンパストランザクションを信頼できるマイルストーンとして認識させるために、デフォルトのiri",{"_index":1052,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["iriノードにリクエストを出している場合は、max",{"_index":848,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-errors":{}}}],["iriノードにリクエストを出している場合は、そのコマンドがremot",{"_index":856,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-errors":{}}}],["iriノードにリクエストを出してください。現在のiri",{"_index":855,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-errors":{}}}],["iriノードに対して行われるリクエストをより細かく制御できるように、iri",{"_index":651,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["iriノードに接続しなくても、iota",{"_index":511,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/introduction/overview":{}}}],["iriノードに送信する必要があります。コンパスは、http",{"_index":1049,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["iriノードのlatestmilestoneindexフィールドとlatestsolidsubtanglemilestoneindexフィールドを確認するには、getnodeinfo",{"_index":655,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["iriノードのurl",{"_index":1574,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["iriノードのurlまたはipアドレスをneighbor",{"_index":716,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/find-neighbor-iri-nodes":{}}}],["iriノードのurlまたはipアドレスを尋ね、その人にあなたのiriノードのurlまたはipアドレスを渡します。6〜7個の隣接iri",{"_index":715,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/find-neighbor-iri-nodes":{}}}],["iriノードのzmq",{"_index":535,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/zero-message-queue":{}}}],["iriノードのトランザクションを検証することで、iota",{"_index":512,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/introduction/overview":{}}}],["iriノードの台帳にあるトランザクションによって参照されているトランザクションですが、iri",{"_index":523,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/neighbor-iri-node":{}}}],["iriノードの台帳には多くのトランザクションが蓄積され、多くの場合、iri",{"_index":708,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/prune-transactions-from-the-ledger":{}}}],["iriノードはiota",{"_index":510,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/introduction/overview":{}}}],["iriノードは、snapshot.txt",{"_index":1053,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["iriノードは、受信したすべてのトランザクションを隣接iri",{"_index":521,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/neighbor-iri-node":{}}}],["iriノードは同期されています。したがって、マイルストーン990,110では、iri",{"_index":550,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/local-snapshot":{}}}],["iriノードは現在実行中で、次のurl：http&#x3a;//localhost.com:14265",{"_index":192,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/run-your-own-iri-node":{}}}],["iriノードは隣接ノードと呼ばれる他のiriノードと通信する必要があります。同じネットワーク上で隣接iriノードを見つけるには、iriノード所有者にiriノードのurlまたはipアドレスを尋ね、自分のiriノードのurlまたはip",{"_index":713,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/find-neighbor-iri-nodes":{}}}],["iriノードを実行している場合は、zmq",{"_index":756,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["iriノードを実行することで、台帳の数を増やし、隣接iriノードのトランザクションを検証することで、iota",{"_index":658,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["iriノードを維持しているため、タングルが動作しているp2pネットワーク内の近隣ノードと通信できます。グリッドが自身のiriノードを実行することで、残りのエンティティはlanネットワーク内に存在でき、グリッドのみが同期のために残りのタングルへのwanアクセスを必要とします。代替手段は、すべてのエンティティがタングル上のiriノードに直接wan",{"_index":1780,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["iriノードを走らせる（dock",{"_index":183,"docTitle":{"docs/getting-started/0.1/tutorials/run-your-own-iri-node":{}},"docBody":{"docs/getting-started/0.1/tutorials/run-your-own-iri-node":{}}}],["iriノードを起動し、nginxポートでgetnodeinfoapi",{"_index":691,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{}}}],["iriノード設定を実装から分離するには、iriノード設定をjava",{"_index":2588,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{}}}],["iri構成オプションを使用すると、ノードの動作をカスタマイズできます。これらのオプションは、コマンドライン（clフラグ）または.ini",{"_index":877,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/iri-configuration-options":{}}}],["iri設定ファイルに保存したい場合は、iri",{"_index":669,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["iri（iotaリファレンス実装）は、iota",{"_index":494,"docTitle":{},"docBody":{"docs/node-software/0.1/introduction/overview":{}}}],["iri（iotaリファレンス実装）は、iotaプロトコルを定義するオープンソースのjavaソフトウェアです。現在iriはクライアントがiotaトークンを相互に転送できるiota",{"_index":509,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/introduction/overview":{}}}],["iri：latest",{"_index":673,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["isn't",{"_index":1477,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["ispromotable()メソッドは、末尾トランザクションが矛盾していないことと、最新の6",{"_index":429,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{}}}],["ispromotable(tail",{"_index":2643,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["issu",{"_index":1164,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/iot/0.1/references/troubleshooting":{}}}],["itself",{"_index":2463,"docTitle":{},"docBody":{"docs/iot/0.1/references/troubleshooting":{}}}],["ixi",{"_index":879,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/iri-configuration-options":{}}}],["ixi（iota交換インターフェースフォルダ）を保存するディレクトリを作成します。jakeをご自身のlinux",{"_index":642,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["i²c",{"_index":2410,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{},"docs/smartcity/0.1/astropiota/references/sensehat-specs":{}}}],["j",{"_index":2004,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/references/troubleshooting":{}}}],["jakeをご自身のlinuxユーザー名に変更して、${version}変数を最新バージョンのiri",{"_index":610,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["jar",{"_index":2586,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["java",{"_index":102,"docTitle":{"docs/iota-java/0.1/introduction/overview":{},"docs/iota-java/0.1/core/introduction/overview":{}},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/client-libraries/0.1/introduction/overview":{},"docs/iota-java/0.1/introduction/overview":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{},"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{},"docs/iota-java/0.1/account-module/how-to-guides/create-account":{}}}],["java_max_memori",{"_index":631,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["java_min_memori",{"_index":630,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["java_opt",{"_index":629,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["javascript",{"_index":101,"docTitle":{"docs/iota-js/0.1/introduction/overview":{},"docs/iota-js/0.1/core/introduction/overview":{}},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/getting-started/0.1/references/quickstart-dev-handbook":{},"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{},"docs/client-libraries/0.1/introduction/overview":{},"docs/iota-js/0.1/introduction/overview":{},"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{},"docs/blueprints/0.1/doc-immutability/architecture":{},"docs/blueprints/0.1/track-and-trace/architecture":{},"docs/iota-js/0.1/core/introduction/overview":{},"docs/iota-js/0.1/account-module/introduction/overview":{},"docs/iota-js/0.1/mam/introduction/overview":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["javascript/typescript",{"_index":1718,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/blueprints/0.1/p2p-energy/deployment-and-testing":{}}}],["javascript、react、node.j",{"_index":1818,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/architecture":{}}}],["javascript、react、nodej",{"_index":1857,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["javascript、react、およびnodej",{"_index":1824,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/architecture":{}}}],["javascriptでmam",{"_index":1692,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/overview":{},"docs/blueprints/0.1/p2p-energy/overview":{},"docs/blueprints/0.1/track-and-trace/overview":{}}}],["javascriptなどのクライアントライブラリでは、通常、provid",{"_index":224,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["javascriptクライアントライブラリは、lernaを使用して複数のパッケージを管理します。したがって、lerna",{"_index":2656,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{},"docs/iota-js/0.1/account-module/introduction/overview":{}}}],["javascriptクライアントライブラリを使用してバンドルを作成および送信しますが、go、java、python",{"_index":1389,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{}}}],["javascriptコアクライアントライブラリには、タングルと対話するための低レベルのメソッドが含まれています。このライブラリを使用して、コアiota",{"_index":481,"docTitle":{},"docBody":{"docs/iota-js/0.1/introduction/overview":{},"docs/iota-js/0.1/core/introduction/overview":{}}}],["javascriptプログラミング言語とオブジェクト指向プログラミングの概念に精通している開発者向けです。また、バンドル、トランザクション、アドレスから一度だけiotaトークンを取り出す理由などのiota",{"_index":2616,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{},"docs/iota-js/0.1/account-module/introduction/overview":{}}}],["javascriptプログラミング言語とオブジェクト指向プログラミングの概念に精通している開発者向けに設計されています。また、バンドル、トランザクション、署名などの基本的なiota",{"_index":2671,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/introduction/overview":{}}}],["javascriptライブラリを使用して、iacでタグ付けされたゼロトークントランザクションを作成します。次に、そのトランザクションをdevnet",{"_index":1615,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["javascriptライブラリを使用して、回収可能資産にid",{"_index":1856,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["javaがインストールされていることを確認するには、java",{"_index":607,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["javaをインストールします。scalaはjava仮想マシンを使用するため、java",{"_index":745,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["javaクライアントライブラリはjitpack",{"_index":2562,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["javaコアクライアントライブラリには、タングルと対話するための低レベルのメソッドが含まれています。このライブラリを使用して、コアiota",{"_index":486,"docTitle":{},"docBody":{"docs/iota-java/0.1/introduction/overview":{},"docs/iota-java/0.1/core/introduction/overview":{}}}],["javaファイルとsp",{"_index":620,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["javaファイルと同じディレクトリにiri設定ファイルを作成します。jakeをご自身のlinux",{"_index":632,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["javaファイルと同じディレクトリに解凍します。この例では、ファイルは/home/jake/nod",{"_index":619,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["javaファイルは、iota",{"_index":602,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["javaファイルは、target",{"_index":626,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["javaファイルをダウンロードするディレクトリを作成します。jakeをご自身のlinux",{"_index":604,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["javaファイルを自分のnod",{"_index":609,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["javaファイル用のdockerコンテナは、iota",{"_index":666,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["javaライブラリのapiコマンドの完全なリストについては、iotaledgerのgithub",{"_index":2592,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["java仮想マシンでiriを実行するために使用されるjava",{"_index":628,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["jessi",{"_index":2785,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["jessie\"（2016",{"_index":2775,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["jessie.img",{"_index":2779,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["jessieにはnoderedが付属していますが、nod",{"_index":2796,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["jitpack",{"_index":2583,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["jitpackリポジトリをルートのbuild.gradl",{"_index":2577,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["jitpackリポジトリをルートのpom.xml",{"_index":2579,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["job",{"_index":1982,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{}}}],["jota",{"_index":2584,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["jsdocアノテーションを編集し、ルートディレクトリからnpm",{"_index":2657,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{},"docs/iota-js/0.1/account-module/introduction/overview":{}}}],["json",{"_index":2548,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/import-seed-state":{}}}],["jsonオブジェクトを受信すると、ファイルはipf",{"_index":1832,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/architecture":{}}}],["jsonシードステートをexportedaccountst",{"_index":2549,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/import-seed-state":{}}}],["jsonデータをフォーマットするためのjq",{"_index":1041,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["jsonファイルを参照してください：https&#x3a;//github.com/muan/emojilib/blob/master/emojis.json",{"_index":2992,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["jtag",{"_index":1997,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/connect-programmer":{}}}],["kdbxファイルフォーマットを使用するパスワード暗号化ファイルです。このフォーマットはkeepass",{"_index":1104,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/back-up-seed":{}}}],["keep",{"_index":2123,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{}}}],["keepass",{"_index":66,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/wallets/0.1/trinity/how-to-guides/back-up-seed":{}}}],["keepassは、1",{"_index":67,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{}}}],["keepassを開き、new",{"_index":69,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{}}}],["keepassファイルをコンピュータに保存したら、空白の部分を右クリックしてadd",{"_index":74,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{}}}],["kerl",{"_index":322,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{}}}],["kerl2の補数を使用して、243トリットから48バイトへ、48バイトから243トリットへの入出力の追加変換を含むkeccek",{"_index":454,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/glossary":{}}}],["kernel",{"_index":2335,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/general/0.1/references/troubleshooting":{}}}],["key",{"_index":2347,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{}}}],["keyboard",{"_index":2248,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["keyboardをクリックし、unit",{"_index":2792,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["keyedstreamができます。基本的に同じアドレスと1lのタプルがたくさんできます。大量のデータを処理したい場合は、パーティション化が便利です。flink",{"_index":771,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["keyedstreamが得られます。より複雑なユースケースにはwindowal",{"_index":770,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["keyedtimewindowsを入手しました。次にパーティションを集約する必要があります。これには2つの選択肢があります。最もシンプルな変形はreduce関数です。reduce関数は、すべての要素を実際に必要な数に減らす関数です。今回のケースにおけるreduc",{"_index":773,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["keyメソッドに同じサブシードと異なるセキュリティレベルを渡して、3つのセキュリティレベルそれぞれに対して1",{"_index":404,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/derive-addresses-from-private-keys":{}}}],["kit",{"_index":1712,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/architecture":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["km",{"_index":1609,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["kmの地域を表しています。たとえば、npht",{"_index":1610,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["know",{"_index":2259,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["known",{"_index":998,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["label",{"_index":2988,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["lambdaなどのサーバレスアーキテクチャのインスタンスで、iotaクライアントライブラリの1",{"_index":872,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/best-practice":{}}}],["lang",{"_index":2568,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["lan）またはワイドエリアネットワーク（wan",{"_index":1814,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/deployment-and-testing":{}}}],["last",{"_index":942,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["last_hub_check",{"_index":1354,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["lastindex",{"_index":346,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{}}}],["latest",{"_index":421,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/check-transaction-confirmation":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{},"docs/iot/0.1/references/troubleshooting":{}}}],["latestmilestoneindex",{"_index":112,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/node-software/0.1/iri/concepts/tip-selection":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["latestmilestoneindexとlatestsolidsubtanglemilestoneindexフィールドは、iri",{"_index":114,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{}}}],["latestmilestoneindexフィールドがdiscordから取得したlatestmilestoneindexフィールドとlatestsolidsubtanglemilestoneindex",{"_index":121,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{}}}],["latestmilestoneindexフィールドがlatestsolidsubtanglemilestoneindex",{"_index":111,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/node-software/0.1/iri/concepts/the-ledger":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["latestmilestoneindexフィールドとlatestsolidsubtanglemilestoneindex",{"_index":654,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["latestmilestoneindexフィールドは、iriが近隣iri",{"_index":516,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/the-ledger":{}}}],["latestmilestoneindexフィールドを確認するには、discordに移動し、いずれかのチャンネルに!mileston",{"_index":115,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["latestsolidmileston",{"_index":576,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/tip-selection":{}}}],["latestsolidsubtanglemilestoneindex",{"_index":113,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["latestsolidsubtanglemilestoneindexフィールドは、iriノードがマイルストーンを凝固（マイルストーンが直接および間接的に参照するすべてのトランザクションをiri",{"_index":517,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/the-ledger":{}}}],["latestsolidsubtanglemilestoneindexフィールドは、ノードがマイルストーンを凝固（マイルストーンが直接および間接的に参照するすべてのトランザクションをiri",{"_index":653,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["layer",{"_index":2066,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{}}}],["layers_calcul",{"_index":1043,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["ldtd22lixaztapug",{"_index":930,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["le",{"_index":2171,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["leaf",{"_index":2061,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["learn",{"_index":2102,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["led",{"_index":2761,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{},"docs/smartcity/0.1/astropiota/references/sensehat-specs":{}}}],["ledger",{"_index":1095,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/concepts/hardware-wallet":{}}}],["ledパッケージをインポートします。最後に、imuデータを検出するためにimu",{"_index":2823,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["left",{"_index":2164,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["legion",{"_index":2571,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["length",{"_index":83,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{}}}],["less",{"_index":2070,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{}}}],["let'",{"_index":1562,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["levelパッケージがデフォルトです。このアダプターは、シードレベルをleveldbデータベースのleveldown",{"_index":2662,"docTitle":{},"docBody":{"docs/iota-js/0.1/account-module/how-to-guides/create-account":{}}}],["librari",{"_index":2805,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["light",{"_index":1076,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["lighter",{"_index":2241,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["limit",{"_index":857,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-errors":{},"docs/node-software/0.1/iri/references/best-practice":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["limit：numb",{"_index":2739,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["line",{"_index":2268,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["link",{"_index":471,"docTitle":{},"docBody":{"docs/client-libraries/0.1/introduction/overview":{},"docs/utils/0.1/introduction/overview":{},"docs/blueprints/0.1/data-marketplace/overview":{},"docs/blueprints/0.1/doc-immutability/overview":{},"docs/blueprints/0.1/p2p-energy/overview":{},"docs/blueprints/0.1/tangle-data-storage/overview":{},"docs/blueprints/0.1/track-and-trace/overview":{},"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/references/troubleshooting":{}}}],["lint",{"_index":3002,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["linux",{"_index":62,"docTitle":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{},"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/getting-started/0.1/tutorials/run-your-own-iri-node":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{},"docs/node-software/0.1/chronicle/how-to-guides/get-started":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/compass/0.1/references/troubleshooting":{},"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{},"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/install-go-on-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{},"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["linux、macos、bsdまたはwindow",{"_index":738,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["linuxでノードを実行する、またはdock",{"_index":863,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/best-practice":{}}}],["linuxとmaco",{"_index":1006,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["linuxはオープンソースのオペレーティングシステムで、ディストリビューションと呼ばれるパッケージで提供されています。各linux",{"_index":2890,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["linuxまたはdockerでiri",{"_index":514,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/introduction/overview":{}}}],["linuxまたはmacosで実行するには、.\\\\caddyを実行します。windows上でこのファイルを実行するには、ダブルクリックするか、コマンドプロンプトで.\\\\caddi",{"_index":799,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{}}}],["linuxオペレーティングシステムを使用している場合は、このガイドのコマンドの前にsudo",{"_index":660,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["linuxオペレーティングシステムを使用している場合は、以下のタスクのすべてのコマンドの前にsudo",{"_index":188,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/run-your-own-iri-node":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["linuxサーバがssh",{"_index":2912,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["linuxサーバがsshプロトコルを使用したメッセージを理解する前に、linuxサーバをssh",{"_index":2907,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["linuxサーバでiri",{"_index":586,"docTitle":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["linuxサーバで、ターミナルウィンドウを開いて、nginx",{"_index":683,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{}}}],["linuxサーバで新しいターミナルウィンドウを開き、curlとjqをインストールします。curlはrest",{"_index":646,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["linuxサーバに接続するには、セキュアシェル（ssh",{"_index":2905,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["linuxサーバのip",{"_index":2918,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["linuxサーバの現在の内部ip",{"_index":2867,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["linuxサーバへのssh",{"_index":2911,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["linuxサーバを起動し、ターミナルを開いて、linuxサーバのip",{"_index":2909,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["linuxサーバを閉じ、リストからlinux",{"_index":2908,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["linuxサーバー。windowsまたはmacosオペレーティングシステムを使用している場合は、仮想マシンにlinux",{"_index":1035,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["linuxサーバ（このガイドではubuntu",{"_index":591,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["linuxディストリビューションにpython",{"_index":1324,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["linuxディストリビューションに含まれているsha256sum",{"_index":1125,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{}}}],["linuxディストリビューションの1つがubuntuです。ubuntu",{"_index":2891,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["linuxディストリビューションのweb",{"_index":2930,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["linuxディストリビューションはオープンソースであり、linux",{"_index":2892,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["linux仮想マシンを実行したくない場合は、amazonなどの会社からクラウドコンピュータの使用を借りることができます。この方法を使うことで、ポート転送やメモリ不足を心配する必要はありません。amazon",{"_index":2893,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["list",{"_index":1153,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/connect-to-a-custom-node":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["listen",{"_index":2679,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/introduction/overview":{},"docs/iota-js/0.1/mam/references/api-reference":{}}}],["listenaddress",{"_index":1312,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{}}}],["listenaddressフラグの値に置き換えます。これは、ハブがapiリクエストをリッスンするurl",{"_index":1339,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["live",{"_index":1907,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["lln",{"_index":2047,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["load",{"_index":2355,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iota-java/0.1/account-module/how-to-guides/create-plugin":{}}}],["local",{"_index":869,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/best-practice":{},"docs/node-software/0.1/iri/references/iri-configuration-options":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{},"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["local_snapshots_base_path",{"_index":545,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/local-snapshot":{}}}],["local_snapshots_depth",{"_index":546,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/local-snapshot":{},"docs/node-software/0.1/iri/how-to-guides/prune-transactions-from-the-ledger":{}}}],["local_snapshots_depthおよびlocal_snapshots_pruning_delay",{"_index":555,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/local-snapshot":{}}}],["local_snapshots_depthの合計は50,100です。したがって、iriノードは940,000（990,100",{"_index":558,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/local-snapshot":{}}}],["local_snapshots_enabledおよびlocal_snapshots_pruning_enabled設定オプションがtru",{"_index":709,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/prune-transactions-from-the-ledger":{}}}],["local_snapshots_interval_sync",{"_index":548,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/local-snapshot":{}}}],["local_snapshots_pruning_delay",{"_index":556,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/local-snapshot":{},"docs/node-software/0.1/iri/how-to-guides/prune-transactions-from-the-ledger":{}}}],["local_snapshots_pruning_delayおよびlocal_snapshots_depth",{"_index":710,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/prune-transactions-from-the-ledger":{}}}],["localhost",{"_index":938,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["localis",{"_index":2791,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["locat",{"_index":1600,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{},"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["locationは携帯電話のgp",{"_index":1868,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["log",{"_index":1538,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iota-go/0.1/account-module/how-to-guides/create-plugin":{},"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["logic",{"_index":1985,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{}}}],["login",{"_index":2282,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["long",{"_index":2385,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{}}}],["look",{"_index":2758,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["loop",{"_index":750,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["lora",{"_index":255,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["lossi",{"_index":2049,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["lost",{"_index":1500,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["low",{"_index":2015,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{},"docs/iot/0.1/references/troubleshooting":{}}}],["lowpan",{"_index":2020,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["lps25h",{"_index":2845,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/references/sensehat-specs":{}}}],["ls",{"_index":2213,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["lsm9ds1データシート。これは3d加速度計、3dジャイロスコープ、3d磁力計を1チップにまとめたものです。sens",{"_index":2844,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/references/sensehat-specs":{}}}],["lt",{"_index":96,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{},"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{},"docs/utils/0.1/official/proof-of-existance/overview":{},"docs/utils/0.1/official/tangle-certificate/overview":{},"docs/utils/0.1/official/tryte-compress/overview":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["lt;descript",{"_index":2492,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{}}}],["lt;packag",{"_index":2485,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{}}}],["lt;script>&lt;/script",{"_index":2698,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/how-to-guides/create-mam-webpage":{}}}],["lt;script>&lt;/script>要素内で、ポリフィル関数を作成して、ascii",{"_index":2699,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/how-to-guides/create-mam-webpage":{}}}],["lt;symbol>:&lt;parameter_nam",{"_index":2491,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{}}}],["lt;symbol>:&lt;typ",{"_index":2493,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{}}}],["lt;version>タグの値をリリース番号またはgitコミットハッシュの最初の10文字に変更します：&lt;version>a98de8ea50&lt;/version>または&lt;version>1.0.0",{"_index":2581,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["ltsサーバー。windowsまたはmacオペレーティングシステムを使用している場合は、仮想マシンでlinux",{"_index":1323,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["ltsサーバー。windowsまたはmacオペレーティングシステムを使用している場合は、仮想マシンにlinux",{"_index":1232,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["ltsバージョンまたは最新バージョンのnode.jsとnpm",{"_index":1518,"docTitle":{},"docBody":{"docs/utils/0.1/community/mam-watcher/overview":{},"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{}}}],["lts用のデフォルトリポジトリはデータベースに使用できるパッケージを提供していません。代わりに、公式のmariadbリポジトリ用にカスタムのperson",{"_index":1240,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["m",{"_index":1612,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["mac",{"_index":659,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{}}}],["machin",{"_index":2903,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["maco",{"_index":64,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{},"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["macosx",{"_index":187,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/run-your-own-iri-node":{}}}],["macos、windows、linux、ios、およびandroid用の公式iotaウォレットです。このウォレットを使用すると、http",{"_index":1561,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["macの部分をお使いのオペレーティングシステムに変更してください：mac、win、またはlinux",{"_index":1175,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["mac上のlinuxサーバへのssh",{"_index":2913,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["made",{"_index":2007,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{}}}],["magnitud",{"_index":1399,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{}}}],["magnitude、mwm）は、フルーフオブワーク（pow）の困難さに影響を与えます。mwmが大きいほど、pow",{"_index":150,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{}}}],["magnitude：mwm）は、フルーフオブワーク（pow",{"_index":179,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-iota-tokens":{}}}],["mainlin",{"_index":2344,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["mainnet",{"_index":217,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{},"docs/getting-started/0.1/references/iota-networks":{},"docs/node-software/0.1/iri/introduction/overview":{},"docs/node-software/0.1/iri/references/iri-configuration-options":{},"docs/compass/0.1/references/compass-configuration-options":{},"docs/wallets/0.1/trinity/how-to-guides/connect-to-a-custom-node":{},"docs/contribution/0.1/style-guide":{}}}],["mainnetdbディレクトリ、mainnet.logファイル、および現在のiriの.jar",{"_index":803,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/update-the-iri":{}}}],["mainnetでは、コーディネーターのマークル木のdepthは23です。したがって、コーディネーターは8,388,608",{"_index":306,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/the-tangle":{}}}],["mainnetでは、コーディネーターの秘密鍵はセキュリティレベル2です。結果として、マイルストーンの署名は1つのトランザクションに収まるには大きすぎるため、2",{"_index":314,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/the-tangle":{}}}],["mainnetでは、少なくとも14のmwmを使用する必要があります。ハッシュ値が9個（devnetのmwm）または7個（spamnetのmwm）の0トリットで終わるトランザクションをmainnet",{"_index":373,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/minimum-weight-magnitude":{}}}],["mainnetでトランザクションを送信する最も簡単な方法は、クライアントライブラリを使用して、アプリケーションのiota",{"_index":223,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["mainnetと同じテストトークンの総供給量で独自のプライベートネットワークを運営することができます。このようにして、ネットワーク外の誰かがテストデータのトランザクションを見ることなくデータとiota",{"_index":1529,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["mainnetと比較して、9のmwmはプルーフオブワーク（pow",{"_index":267,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{}}}],["mainnetと比較して、このmwmはプルーフオブワーク（pow",{"_index":280,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{}}}],["mainnetに接続して（既存のiota",{"_index":222,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["mainnetのmwmは14ですが、devnetのmwmは9",{"_index":358,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{}}}],["mainnetやdevnetなどのパブリックiota",{"_index":1030,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["mainnetを使用するのと同じように、devnetでトランザクションを送信する最も簡単な方法は、クライアントライブラリを使用してアプリケーションのiota",{"_index":230,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["mainnetノードに接続することをお勧めします。ローカルmainnetノードがない場合は、iri",{"_index":1254,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["mainnet上で、コーディネーターはマイルストーンを含むバンドルを作成、署名、および送信します。mainnet",{"_index":1028,"docTitle":{},"docBody":{"docs/compass/0.1/introduction/overview":{}}}],["mainnet上でアプリケーションを使用する準備が整ったら、アプリケーションをプライベートiriノードから切断して、mainnet",{"_index":1530,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["mainnet上で動作するオープンソースのjavaソフトウェアです。このソフトウェアは現在のiotaプロトコルを定義しています。iriはクライアントがお互いの間でiota",{"_index":495,"docTitle":{},"docBody":{"docs/node-software/0.1/introduction/overview":{}}}],["mainnet上のトランザクションが有効であるためには、14の最小重量値（mwm",{"_index":263,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{}}}],["make",{"_index":2149,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["makefil",{"_index":2320,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/read-sensor-data":{}}}],["male",{"_index":2160,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["malform",{"_index":1060,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/compass/0.1/references/troubleshooting":{}}}],["mam",{"_index":214,"docTitle":{"docs/utils/0.1/community/mam-watcher/overview":{},"docs/iota-js/0.1/mam/concepts/channels":{}},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{},"docs/client-libraries/0.1/introduction/overview":{},"docs/utils/0.1/introduction/overview":{},"docs/utils/0.1/community/mam-watcher/overview":{},"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{},"docs/blueprints/0.1/data-marketplace/overview":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/blueprints/0.1/p2p-energy/overview":{},"docs/blueprints/0.1/p2p-energy/architecture":{},"docs/blueprints/0.1/p2p-energy/deployment-and-testing":{},"docs/blueprints/0.1/track-and-trace/overview":{},"docs/blueprints/0.1/track-and-trace/architecture":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iota-js/0.1/mam/introduction/overview":{},"docs/iota-js/0.1/mam/concepts/channels":{},"docs/iota-js/0.1/mam/how-to-guides/create-public-channel":{},"docs/iota-js/0.1/mam/how-to-guides/create-restricted-channel":{},"docs/iota-js/0.1/mam/references/api-reference":{},"docs/smartcity/0.1/astropiota/introduction/overview":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{},"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["mam.client.j",{"_index":1884,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["mam.creat",{"_index":2728,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["mam.web.min.jsコードへのパスを&lt;script",{"_index":2697,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/how-to-guides/create-mam-webpage":{}}}],["mamv1",{"_index":2390,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["mamでは、すべてのメッセージはシードの所有者によって署名されます。このようにして、channel",{"_index":2670,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/introduction/overview":{}}}],["mamのgithub",{"_index":1691,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/overview":{},"docs/blueprints/0.1/p2p-energy/overview":{},"docs/blueprints/0.1/track-and-trace/overview":{}}}],["mamは購読サービスです。最新のデータを受信するためにastropiota",{"_index":2748,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/introduction/overview":{}}}],["mamを使用しない場合は、代わりにiota",{"_index":1859,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["mamクライアントライブラリを使用してiotaタングルに保存されます。この機能は、アプリに埋め込むことも、外部サーバー（mamサーバー）を介して実装することもできます。外部サーバー（mamサーバー）との間で、セキュアなhttp",{"_index":1870,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["mamサーバーは、最初に、オブジェクトリポジトリから特定の資産に関連付けられているmamチャネルのルートに関連する情報を取得する必要があります。これは、qrコードのスキャンから取得されるか、手動で挿入されるassetuniqueidをプライマリーキーとして使用することによって行われます。これらの情報はそれぞれのmamチャンネルに添付され、iotaタングルにイミュータブルに保存されます。このために、以下の2",{"_index":1881,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["mamストリームからメッセージを取得すると、署名を検証し、署名がマークル木のリーフの1",{"_index":2686,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/concepts/channels":{}}}],["mamチャネルから読み取ることができるように、電力源は生産者に登録/登録解除する必要があります。これは生産者側で軽量のweb",{"_index":1789,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["mamチャネルがもう使用されていないことを知らせるためにgoodby",{"_index":1788,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["mamチャネルが作成されます。回収可能資産のデジタルツインは、以下の情報で作成されます。&amp;lt;assetuniqueid",{"_index":1860,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["mamチャネルが作成されるか既存のmamチャネルが更新されたら、オブジェクトリポジトリを更新する必要があります。これは、上で紹介したcreateitem()およびupdateitem",{"_index":1889,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["mamチャネルが使用されなくなったことを知らせるために、goodby",{"_index":1797,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["mamチャネルとweb",{"_index":1786,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["mamチャネルに公開し、&lt;div>&lt;/div",{"_index":2700,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/how-to-guides/create-mam-webpage":{}}}],["mamチャネルに追加されます。そのために、新しいmamメッセージが既存のチャネルに添付され、次の情報が更新されてタングルに保存されます。&amp;lt;assetcustodianid",{"_index":1880,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["mamチャネルの作成と使用、web",{"_index":1696,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/architecture":{},"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["mamチャネルの作成後、中央管理のバックエンドのオブジェクトリポジトリにデータが入力されます。オブジェクトリポジトリはfirebas",{"_index":1873,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["mamチャネルの初期化中に作成されたmam",{"_index":2834,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["mamチャネルはマークル木から作成され、すべてのメッセージはリーフの中の1",{"_index":2685,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/concepts/channels":{}}}],["mamチャネルを介してraspberri",{"_index":250,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["mamチャネルを作成し、javascriptクライアントライブラリを使用してmam",{"_index":1893,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/deployment-and-testing":{}}}],["mamチャネルを作成します。グリッドはこの情報を中央のdbでも追跡しますが、mam",{"_index":1809,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["mamチャネルを作成する前に、トランザクションが保存されるiotaネットワーク（プロバイダ）を選択する必要があります。これは、メインのiotaネットワーク、またはhttps&#x3a;//nodes.devnet.thetangle.org:443",{"_index":1885,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["mamチャネルを使用してデータサイロを開き、ユーザーがデータと引き換えにiota",{"_index":1662,"docTitle":{},"docBody":{"docs/blueprints/0.1/introduction/overview":{}}}],["mamチャネルを使用して特定の資産の保管の変更を登録すると、さまざまな保管担当者情報をiota",{"_index":1858,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["mamチャネル情報にそれぞれアクセスして更新する（例えば、保存されているデジタルツインを更新するために新しいメッセージを追加する）関数が実装されています。reactで書かれたweb",{"_index":1882,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["mamチャネル詳細を使用して電力源のmam",{"_index":1791,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["mamパッケージには、webページで使用できる縮小されたjavascriptファイルがあります。これにより、mamメッセージを発行して表示するweb",{"_index":2694,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/how-to-guides/create-mam-webpage":{}}}],["mamプロトコルを使用して、回収可能資産にidを付与し、mam",{"_index":1855,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["mamメッセージのペイロード（例えば、デジタルツインに含まれる情報）を暗号化すること、および選択された当事者だけにアクセスを保証することを可能にします（mam.changemod",{"_index":1887,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["mamメッセージはjson",{"_index":2832,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["mamメッセージはmamチャネルに発行されます。これは、シードによって認証される暗号化されたデータストリームです。シードの所有者のみがメッセージをチャネルに発行できます。その結果、mam",{"_index":2682,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/concepts/channels":{}}}],["mamメッセージは、iota",{"_index":2833,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["mamメッセージは、ゼロトークントランザクションのsignaturemessagefrag",{"_index":2683,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/concepts/channels":{}}}],["mamメッセージを表示するweb",{"_index":2695,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/how-to-guides/create-mam-webpage":{}}}],["mamメッセージ（チャネルid",{"_index":2687,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/concepts/channels":{}}}],["mam（マスクされた認証済みメッセージング）は、iota",{"_index":246,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["mam（マスク認証メッセージング）は、チャネルと呼ばれる暗号化されたデータストリームを発行および購読することを可能にする通信プロトコルです。mam",{"_index":1516,"docTitle":{},"docBody":{"docs/utils/0.1/community/mam-watcher/overview":{}}}],["mam）api",{"_index":2701,"docTitle":{"docs/iota-js/0.1/mam/references/api-reference":{}},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["mam）は、タングルでチャネルと呼ばれる暗号化されたデータストリームでメッセージを発行および取得できるデータ通信プロトコルです。mam",{"_index":485,"docTitle":{},"docBody":{"docs/iota-js/0.1/introduction/overview":{},"docs/iota-js/0.1/mam/introduction/overview":{}}}],["mam）チャネルを使用してデータサイロを開き、ユーザーがデータと引き換えにiota",{"_index":1671,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/overview":{}}}],["manag",{"_index":1147,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/connect-to-a-custom-node":{},"docs/wallets/0.1/trinity/how-to-guides/manage-your-account":{}}}],["mani",{"_index":1905,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["manual",{"_index":1203,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/references/troubleshooting":{}}}],["manufactur",{"_index":1909,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["map",{"_index":769,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{},"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/blueprints/0.1/track-and-trace/overview":{},"docs/contribution/0.1/style-guide":{}}}],["mapをアキュムレータとして使います。マップはキーとバリューのペアを含んでいるので、本当に便利です。aggregatefunctionは一番上のアドレスから一番下のアドレスへソートされたリストを返します。最初の10個だけに興味があるので、最初の10個だけを取ります。クラスのコンストラクタは10",{"_index":779,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["mariadb",{"_index":1246,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["mariadb、postgresqlなどの一般的に使用されるdb",{"_index":1748,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{}}}],["mariadbのroot",{"_index":1247,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["mariadbのようなmysql",{"_index":1315,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/query-the-database":{}}}],["marketplac",{"_index":1661,"docTitle":{},"docBody":{"docs/blueprints/0.1/introduction/overview":{},"docs/blueprints/0.1/data-marketplace/overview":{},"docs/blueprints/0.1/data-marketplace/architecture":{}}}],["mask",{"_index":483,"docTitle":{},"docBody":{"docs/iota-js/0.1/introduction/overview":{},"docs/blueprints/0.1/data-marketplace/overview":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iota-js/0.1/mam/introduction/overview":{}}}],["maven",{"_index":2576,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["mavenビルドツールをインストールします。user_home_dir",{"_index":622,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["max",{"_index":562,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/tip-selection":{}}}],["max_future_set_size個の承認トランザクションを保存できます。この値は、ヒューリスティクスに5000にハードコードされています。この最適化は、トランザクションの未来集合がmax_future_set_s",{"_index":573,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/tip-selection":{}}}],["maxdepth",{"_index":577,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/tip-selection":{}}}],["maximum",{"_index":2337,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["mcuがl",{"_index":2855,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/references/sensehat-specs":{}}}],["memori",{"_index":1955,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["merkl",{"_index":303,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/the-tangle":{}}}],["mesh",{"_index":2032,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["messag",{"_index":155,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-the-trinity-wallet":{},"docs/iota-js/0.1/introduction/overview":{},"docs/node-software/0.1/iri/concepts/zero-message-queue":{},"docs/wallets/0.1/trinity/how-to-guides/create-deep-link":{},"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{},"docs/blueprints/0.1/data-marketplace/overview":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/references/troubleshooting":{},"docs/iota-js/0.1/mam/introduction/overview":{},"docs/contribution/0.1/style-guide":{}}}],["message.rootプロパティは、このmamストリームのmamチャネルid",{"_index":2691,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/how-to-guides/create-public-channel":{},"docs/iota-js/0.1/mam/how-to-guides/create-restricted-channel":{}}}],["messages.proto",{"_index":1405,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["messages：array",{"_index":2741,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["message：str",{"_index":2717,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["metadata",{"_index":876,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/data-in-the-ledger":{}}}],["method",{"_index":1298,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{}}}],["mi",{"_index":47,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-bundle":{},"docs/wallets/0.1/trinity/concepts/hardware-wallet":{}}}],["micro",{"_index":2122,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/connect-programmer":{}}}],["microcontol",{"_index":2147,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["microcontrol",{"_index":1948,"docTitle":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{}},"docBody":{"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{},"docs/iot/0.1/references/troubleshooting":{}}}],["microcontroller'",{"_index":2138,"docTitle":{"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["microkernel",{"_index":2207,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{}}}],["microprocessor",{"_index":2137,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/connect-programmer":{}}}],["mileston",{"_index":117,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/dev-essentials/0.1/how-to-guides/check-transaction-confirmation":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{},"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["milestonesとしてsnapshot.meta",{"_index":552,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/local-snapshot":{}}}],["mind",{"_index":2124,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["minimum",{"_index":148,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/getting-started/0.1/tutorials/send-iota-tokens":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["minweightmagnitud",{"_index":2622,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["minweightmagnitude：numb",{"_index":2731,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["miota行で、request",{"_index":1333,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["mixtur",{"_index":2162,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["miを送信しようとします。このトランザクションでは、3",{"_index":1102,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/concepts/hardware-wallet":{}}}],["mkdir：ディレクトリを作成できません...」と表示された場合は、おそらくjakeをご自分のlinux",{"_index":605,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["mobil",{"_index":477,"docTitle":{},"docBody":{"docs/client-libraries/0.1/introduction/overview":{},"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{},"docs/smartcity/0.1/astropiota/introduction/overview":{},"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["model",{"_index":1689,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/overview":{},"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["mode：str",{"_index":2713,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["modul",{"_index":482,"docTitle":{},"docBody":{"docs/iota-js/0.1/introduction/overview":{},"docs/iota-java/0.1/introduction/overview":{},"docs/iota-go/0.1/introduction/overview":{},"docs/wallets/0.1/hub/references/troubleshooting":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{}}}],["modular",{"_index":2206,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{}}}],["modules（go",{"_index":2468,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{}}}],["moduleのbuild.gradl",{"_index":105,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{}}}],["moment",{"_index":2361,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["mongodb",{"_index":2606,"docTitle":{},"docBody":{"docs/iota-java/0.1/account-module/how-to-guides/create-account":{}}}],["monitor",{"_index":1467,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["monitorinterv",{"_index":1225,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/concepts/sweeps":{}}}],["more",{"_index":1484,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["mostusedaddressesaggreg",{"_index":778,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["mount",{"_index":2353,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/references/troubleshooting":{}}}],["move",{"_index":2233,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{}}}],["multi",{"_index":1079,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["multi_us",{"_index":2558,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/references/cda-advice":{},"docs/iota-java/0.1/account-module/references/cda-advice":{},"docs/iota-js/0.1/account-module/references/cda-advice":{}}}],["multi_useフィールドを持つcda",{"_index":2554,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/references/cda-advice":{},"docs/iota-java/0.1/account-module/references/cda-advice":{},"docs/iota-js/0.1/account-module/references/cda-advice":{}}}],["multipl",{"_index":2156,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["multius",{"_index":2521,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-java/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["multiuseフィールドまたはexpectedamountフィールドのいずれかを使用してcda",{"_index":2525,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-java/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["mwm",{"_index":369,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/minimum-weight-magnitude":{}}}],["mwmが1増えるごとに、powの難しさは3",{"_index":374,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/minimum-weight-magnitude":{}}}],["mwmが大きいほど、pow",{"_index":180,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-iota-tokens":{}}}],["mwmと同じ0トリット数で終了するまで、トランザクションは繰り返しハッシュ化されます。mwm",{"_index":370,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/minimum-weight-magnitude":{}}}],["mwmの正しい数の0",{"_index":376,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/minimum-weight-magnitude":{}}}],["mwm）pow",{"_index":463,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/glossary":{}}}],["mwm）は、プルーフオブワーク中に行われる作業量を定義する変数です。クライアントとしてiotaネットワークと対話するときは、そのネットワークに適したmwm",{"_index":365,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/minimum-weight-magnitude":{}}}],["mwm）は、プルーフオブワーク中に行われる作業量を定義する変数です。ノードにトランザクションを送信するときは、そのノードのネットワークに対して正しいmwm",{"_index":357,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{}}}],["mwm）を使用していることを確認してください。メインネット上のmwmは14",{"_index":226,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["mwm）引数は、プルーフオブワーク（pow）の難易度に影響します。mwmが大きいほど、pow",{"_index":1400,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{}}}],["my_password",{"_index":2263,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["my_ssid",{"_index":2262,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["myaccount.go",{"_index":2545,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-plugin":{}}}],["myrootpasswordプレースホルダーをmariadbのインストール時に選択したroot",{"_index":1251,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["mysql",{"_index":1249,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/query-the-database":{}}}],["mysqlとさまざまなコマンドについて学ぶためには、mysql",{"_index":1318,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/query-the-database":{}}}],["name",{"_index":204,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-the-trinity-wallet":{},"docs/wallets/0.1/trinity/how-to-guides/create-an-account":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/references/troubleshooting":{},"docs/iota-go/0.1/account-module/how-to-guides/create-plugin":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{},"docs/general/0.1/how-to-guides/setup-sbc":{},"docs/contribution/0.1/style-guide":{}}}],["name>\\_examples_test.go",{"_index":2490,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{}}}],["name>\\_suite_test.go",{"_index":2486,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{}}}],["name>\\_test.go",{"_index":2487,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{}}}],["name_and_version_of_toolchain",{"_index":2232,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{}}}],["name|descript",{"_index":1490,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["nameフラグの値はchronicle@localhostになります。それ以外の場合は、localhost",{"_index":939,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["nameフラグの値をiri",{"_index":672,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["nano",{"_index":1096,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/concepts/hardware-wallet":{}}}],["nativ",{"_index":1163,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["necessari",{"_index":2190,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["need",{"_index":1953,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["neighbor",{"_index":830,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["neighborsと繋がるには、discordの#helpまたは#nodeshar",{"_index":197,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/run-your-own-iri-node":{}}}],["neighborsフィールドの値が0であることがわかります。iriノードはまだiotaネットワークに接続されていません。iotaネットワークに接続するには、隣接iri",{"_index":649,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["neighborsフィールドの値が0であることがわかります。iriノードはまだiotaネットワークに接続されていません。iotaネットワークへの接続を行うには、隣接iri",{"_index":679,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["neighborsフィールドの値が0であることがわかります。これは、ノードがiotaネットワークに接続されていないことを意味します。iotaネットワークに接続するためには、neighbor",{"_index":196,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/run-your-own-iri-node":{}}}],["neighbors設定オプションから隣接ノードのuri",{"_index":838,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{}}}],["neighbors設定オプションに隣接ノードのuri",{"_index":808,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{}}}],["neighborノードの数はtotalノードの数と同じです。ネットワークがシャーディングを許可すると、neighbor",{"_index":1000,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["net",{"_index":1169,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["netatmo",{"_index":1704,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/architecture":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["netcfg.yamlファイルを新しい静的ip",{"_index":2871,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["netmask",{"_index":2284,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["netmask=16",{"_index":2305,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["netmask=24",{"_index":2302,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["network",{"_index":881,"docTitle":{"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{}},"docBody":{"docs/node-software/0.1/iri/references/iri-configuration-options":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["new",{"_index":71,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/references/troubleshooting":{},"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["neweventloggerplugin",{"_index":2546,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-plugin":{}}}],["next",{"_index":1473,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{}}}],["nextroot：str",{"_index":2740,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["nginx",{"_index":685,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{}}}],["nginxがapiリクエストのレートを制限していることをテストするには、getnodeinfoエンドポイントに対して20",{"_index":694,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{}}}],["nginxがこれらのipアドレスからのリクエストを受信したときには、リクエストをiri",{"_index":699,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{}}}],["nginxが複数のリクエストを受信すると、upstreamブロックディレクティブにリストされているiri",{"_index":705,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{}}}],["nginxのwebページが表示されます。このページはnginxに含まれており、サーバが稼働していることを示しています。次に、iriノードのリバースプロキシとしてnginx",{"_index":687,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{}}}],["nginxはiriノードへのリクエストを制御しています。nginxがリクエストを受け取ると、そのリクエストをiri",{"_index":693,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{}}}],["nginxをiriノードと同じlinux",{"_index":682,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{}}}],["nginxサーバでポート5000",{"_index":690,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{}}}],["nmap",{"_index":2285,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["nmapがネットワーク内のすべてのipアドレスをスキャンする必要があるため、このプロセスにはしばらく時間がかかります。小さなサブネット（netmask=24）の場合、nmapは256個のアドレスをスキャンするだけでよいので、数秒かかります。大規模なネットワークでは時間がかかる可能性があります。たとえばnetmask=16の場合、nmapは256\\*256アドレスをスキャンする必要があります。私のテストケースでは、これは2944.17",{"_index":2954,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["node",{"_index":490,"docTitle":{},"docBody":{"docs/smartcity/0.1/introduction/overview":{},"docs/node-software/0.1/introduction/overview":{},"docs/node-software/0.1/iri/concepts/tip-selection":{},"docs/node-software/0.1/iri/references/api-reference":{},"docs/node-software/0.1/iri/references/api-errors":{},"docs/node-software/0.1/chronicle/references/architecture":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/wallets/0.1/trinity/how-to-guides/connect-to-a-custom-node":{},"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["node'",{"_index":822,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{}}}],["node.j",{"_index":94,"docTitle":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{}},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/getting-started/0.1/tutorials/send-iota-tokens":{},"docs/dev-essentials/0.1/how-to-guides/convert-data-to-trytes":{},"docs/dev-essentials/0.1/how-to-guides/create-an-address":{},"docs/dev-essentials/0.1/how-to-guides/derive-addresses-from-private-keys":{},"docs/dev-essentials/0.1/how-to-guides/send-bundle":{},"docs/dev-essentials/0.1/how-to-guides/check-transaction-confirmation":{},"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{},"docs/node-software/0.1/iri/how-to-guides/interact-with-an-iri-node":{},"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node":{},"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{},"docs/node-software/0.1/iri/references/api-reference":{},"docs/node-software/0.1/chronicle/references/api-reference":{},"docs/node-software/0.1/goshimmer/how-to-guides/subscribe-to-events":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{},"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/utils/0.1/official/iota-area-codes/overview":{},"docs/utils/0.1/official/proof-of-existance/overview":{},"docs/utils/0.1/official/tangle-certificate/overview":{},"docs/utils/0.1/official/tryte-compress/overview":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/blueprints/0.1/doc-immutability/architecture":{},"docs/blueprints/0.1/p2p-energy/deployment-and-testing":{},"docs/blueprints/0.1/tangle-data-storage/architecture":{},"docs/blueprints/0.1/tangle-data-storage/deployment-and-testing":{},"docs/iota-js/0.1/core/introduction/overview":{},"docs/iota-js/0.1/account-module/introduction/overview":{},"docs/iota-js/0.1/account-module/how-to-guides/create-account":{},"docs/iota-js/0.1/account-module/how-to-guides/listen-to-events":{},"docs/iota-js/0.1/mam/introduction/overview":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["node.jsでjavascriptクライアントライブラリを使用すると、getbal",{"_index":1554,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["node.jsでローカルpow",{"_index":870,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/best-practice":{}}}],["node.jsとpythonを使用していますが、zmq",{"_index":723,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node":{}}}],["node.jsとpythonを使用していますが、任意のzmq",{"_index":1021,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/subscribe-to-events":{}}}],["node.jsのlts版（バージョン10.15.3",{"_index":1165,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["node.jsを実行して、デバイスが接続できるmam",{"_index":249,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["node.js（8以上）またはpython（3以上）とpip",{"_index":1310,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{}}}],["node_modulesディレクトリを削除してから、sudo",{"_index":1293,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{}}}],["noderedおよび従来のnodej",{"_index":2797,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["non",{"_index":585,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/tip-selection":{}}}],["nonc",{"_index":382,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/reattach-rebroadcast-promote":{},"docs/node-software/0.1/iri/references/api-reference":{}}}],["nonceフィールドには、iriノードがpowを検証するために使用する27",{"_index":377,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/minimum-weight-magnitude":{}}}],["none",{"_index":2221,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/references/troubleshooting":{}}}],["nordic",{"_index":1708,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/architecture":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["normal",{"_index":1957,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{}}}],["nosql",{"_index":1715,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/blueprints/0.1/p2p-energy/deployment-and-testing":{}}}],["nosqlデータベースとして実装され、ポート3000を使用してデプロイされます。特定の資産idに関連付けられたmamチャネルに関連する情報をfirebas",{"_index":1874,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["nosqlデーターベース：mongodb",{"_index":1813,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/deployment-and-testing":{}}}],["note",{"_index":2396,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["now",{"_index":2228,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/references/troubleshooting":{}}}],["npm",{"_index":100,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/getting-started/0.1/tutorials/send-iota-tokens":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{},"docs/blueprints/0.1/doc-immutability/overview":{},"docs/iota-js/0.1/core/introduction/overview":{},"docs/iota-js/0.1/account-module/introduction/overview":{},"docs/iota-js/0.1/mam/introduction/overview":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{},"docs/contribution/0.1/style-guide":{}}}],["npm（node.j",{"_index":98,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{}}}],["nrf51822",{"_index":2427,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["nrf52",{"_index":2103,"docTitle":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{}},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{},"docs/iot/0.1/references/troubleshooting":{}}}],["nrf52832",{"_index":2119,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["nrf52840",{"_index":2364,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["ntp",{"_index":2507,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-account":{}}}],["null",{"_index":949,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{},"docs/iota-js/0.1/mam/references/api-reference":{}}}],["nullpointer例外が発生する可能性があるため、決してgetを使用しないでください。代わりにgetorelseを使用してください。正しい型が返されるように、ライブラリにフィルタを実装することも意味があります。これは型チェックを時代遅れにするでしょう。このライブラリはpoc",{"_index":766,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["nullまたは9",{"_index":835,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{}}}],["null値のデフォルトは2",{"_index":2709,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["number",{"_index":2339,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["numberformatexcept",{"_index":1087,"docTitle":{},"docBody":{"docs/compass/0.1/references/troubleshooting":{}}}],["numberformatexceptionエラーまたはillegalargumentexcept",{"_index":1063,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["oauthログイン画面が表示されます。googl",{"_index":1722,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["ob",{"_index":2134,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/references/troubleshooting":{}}}],["object",{"_index":2710,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["obsoletetag",{"_index":344,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{}}}],["ok",{"_index":82,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{}}}],["okシンボル:ok_hand:は失礼であると見なされ、中東ではサムズアップシンボル:+1",{"_index":2990,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["old",{"_index":570,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/tip-selection":{},"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{},"docs/iot/0.1/references/troubleshooting":{}}}],["older",{"_index":2336,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["on",{"_index":850,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-errors":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{},"docs/iot/0.1/references/troubleshooting":{},"docs/iota-js/0.1/core/introduction/overview":{}}}],["oneをクリックして、iotaトークンを預け入れることができる新しいiota",{"_index":1334,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["onto",{"_index":1954,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["open",{"_index":1679,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/overview":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/references/troubleshooting":{}}}],["openjdk",{"_index":606,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["openocd",{"_index":2193,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{}}}],["openssl",{"_index":1173,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["oper",{"_index":1961,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{}}}],["opt",{"_index":2234,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{}}}],["option",{"_index":202,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-the-trinity-wallet":{},"docs/wallets/0.1/trinity/how-to-guides/connect-to-a-custom-node":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iota-js/0.1/core/introduction/overview":{}}}],["orang",{"_index":2168,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["order",{"_index":2155,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["org_id、$admin_user_id",{"_index":1647,"docTitle":{},"docBody":{"docs/utils/0.1/official/tangle-certificate/overview":{}}}],["os",{"_index":2177,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["other",{"_index":2420,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["otherwis",{"_index":2253,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["ots）iota",{"_index":457,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/glossary":{}}}],["ots）を使用して署名を作成します。この署名方式は量子耐性があります。つまり、署名は量子コンピューターからの攻撃に対して耐性があります。しかし、winternitz",{"_index":330,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{}}}],["ots）を使用するため、アドレスから2回以上取り出しを行うことはできません。コーディネーターが複数のバンドルに署名しつつ、かつそれらすべての署名が1",{"_index":302,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/the-tangle":{}}}],["out",{"_index":1481,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{}}}],["outgo",{"_index":2378,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{}}}],["output",{"_index":2419,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["outputs：0",{"_index":961,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/references/data-model":{}}}],["over",{"_index":2027,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/references/troubleshooting":{}}}],["overflow",{"_index":893,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/troubleshooting":{}}}],["overview",{"_index":480,"docTitle":{"docs/iota-js/0.1/introduction/overview":{},"docs/iota-java/0.1/introduction/overview":{},"docs/iota-go/0.1/introduction/overview":{},"docs/smartcity/0.1/introduction/overview":{},"docs/iot/0.1/introduction/overview":{}},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["p0.26",{"_index":2433,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["p0.27",{"_index":2434,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["p0.6",{"_index":2421,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["p0.8",{"_index":2422,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["p2p",{"_index":1665,"docTitle":{"docs/blueprints/0.1/p2p-energy/overview":{},"docs/blueprints/0.1/p2p-energy/deployment-and-testing":{}},"docBody":{"docs/blueprints/0.1/introduction/overview":{},"docs/blueprints/0.1/p2p-energy/overview":{},"docs/blueprints/0.1/p2p-energy/architecture":{},"docs/blueprints/0.1/p2p-energy/deployment-and-testing":{}}}],["p2pエネルギーグリッドでのエネルギー取引には、4",{"_index":1774,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/overview":{}}}],["p2pエネルギーグリッドアプリケーションは、iotaネットワーク内のノードを通じて、電力源、生産者、消費者、およびグリッドからのデータをmam",{"_index":1776,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["p2pエネルギーグリッド内のエンティティがどのようにエネルギーを交換できるかを示しています。p2pエネルギーグリッドの分散型およびマシンベースの性質により、これはiotaの理想的なユースケースになります。iota",{"_index":1773,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/overview":{}}}],["packag",{"_index":1241,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/iot/0.1/references/troubleshooting":{},"docs/iota-js/0.1/core/introduction/overview":{}}}],["package.jsonファイルと、iotaクライアントライブラリとその依存関係を含むnode_modul",{"_index":138,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/getting-started/0.1/tutorials/send-iota-tokens":{}}}],["package.jsonファイルも必要です。コマンドプロンプトでnpm",{"_index":2672,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/introduction/overview":{}}}],["packet",{"_index":2053,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{}}}],["packで購入できます。このスターターパックには、raspbianがプリインストールされたsd",{"_index":2767,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["page",{"_index":201,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-the-trinity-wallet":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["pageとpag",{"_index":1800,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["panel",{"_index":2762,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["paramet",{"_index":849,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-errors":{},"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{},"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["paramount",{"_index":1926,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["parent",{"_index":2585,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["part",{"_index":1494,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["particular",{"_index":2331,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/read-sensor-data":{}}}],["partner",{"_index":614,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["pass",{"_index":1922,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["password",{"_index":79,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/node-software/0.1/chronicle/how-to-guides/get-started":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["path",{"_index":1117,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/references/troubleshooting":{}}}],["path/to/conf/config.ini",{"_index":671,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["path>プレースホルダーを、github.com/me/awesom",{"_index":2471,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{}}}],["pathtofil",{"_index":2457,"docTitle":{},"docBody":{"docs/iot/0.1/references/troubleshooting":{}}}],["pattern",{"_index":2325,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/read-sensor-data":{}}}],["pay",{"_index":972,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/references/design-goals":{}}}],["payload：str",{"_index":2719,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["paymentidoraddressは、グリッドが支払いを行うことができるiotaアドレス、またはグリッドが別の支払い方法を持つようにするための参照id",{"_index":1794,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["paymentidoraddressは、実際のiotaアドレス、または消費者が別の方法で支払いをするために使用できる参照です。グリッドがiota",{"_index":1810,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["pc",{"_index":1958,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["pdf",{"_index":1106,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/back-up-seed":{}}}],["peer",{"_index":999,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/blueprints/0.1/introduction/overview":{}}}],["pend",{"_index":426,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{}}}],["per",{"_index":973,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/references/design-goals":{}}}],["perform",{"_index":2359,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["perm",{"_index":1296,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{}}}],["permanod",{"_index":634,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["permanode（すべてのトランザクションを台帳に保持するノード）を実行する場合は、local_snapshots_pruning_enabled設定パラメータをfals",{"_index":635,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["permiss",{"_index":1013,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/compass/0.1/references/troubleshooting":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/references/troubleshooting":{}}}],["persist",{"_index":2661,"docTitle":{},"docBody":{"docs/iota-js/0.1/account-module/how-to-guides/create-account":{}}}],["persistenceadapterファクトリーをアカウントに渡します。このアダプタは、アカウントがシードステートを保存できるローカルデータベースオブジェクトを作成します。デフォルトでは、ローカルデータベースはプロジェクトのルートに保存されます。persistencepath",{"_index":2660,"docTitle":{},"docBody":{"docs/iota-js/0.1/account-module/how-to-guides/create-account":{}}}],["person",{"_index":2018,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["phat",{"_index":1592,"docTitle":{},"docBody":{"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{}}}],["phi",{"_index":2065,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["phoenix",{"_index":916,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["photo",{"_index":1160,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/perform-a-snapshot-transition":{},"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["pi",{"_index":251,"docTitle":{"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{},"docs/smartcity/0.1/astropiota/how-to-guides/connect":{}},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{},"docs/smartcity/0.1/introduction/overview":{},"docs/utils/0.1/introduction/overview":{},"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{},"docs/blueprints/0.1/data-marketplace/architecture":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/blueprints/0.1/p2p-energy/deployment-and-testing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/smartcity/0.1/astropiota/introduction/overview":{},"docs/smartcity/0.1/astropiota/how-to-guides/build":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{},"docs/smartcity/0.1/astropiota/how-to-guides/connect":{},"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["pictur",{"_index":1775,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/overview":{}}}],["pin",{"_index":2001,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["pinout",{"_index":2417,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["pip",{"_index":2196,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{}}}],["pip3",{"_index":2200,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{}}}],["pip3.2",{"_index":2787,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["pitch",{"_index":2429,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["piからdevnet",{"_index":1515,"docTitle":{},"docBody":{"docs/utils/0.1/introduction/overview":{}}}],["piからdevnetタングルに毎分リアルタイムの温度データ（現在の摂氏温度）を送信します。その後、別のdevnetノードでイベントストリーム（zmq",{"_index":1580,"docTitle":{},"docBody":{"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{}}}],["piと直接通信する方法とssh経由で通信する2つの方法があります。直接通信するには、usbキーボードとマウス、さらにhdmi対応モニターまたはテレビを使います。ssh経由で通信するにはputti",{"_index":2771,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["piなどのnode.jsを実行できるiot",{"_index":248,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["piなどの多くのsbcでも同様です。sbcのガイドが別にある場合は、そのガイドに従う必要があります。それ以外の場合は、多くの開発ボードをサポートしているのでarmbian",{"_index":2927,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["piのhdmi",{"_index":2784,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["piのip",{"_index":2817,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/connect":{}}}],["piのipアドレスがsens",{"_index":2815,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/connect":{}}}],["piのipアドレスを見つけるには、python",{"_index":2809,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/connect":{}}}],["piのusb",{"_index":2783,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["piの再起動時に実行するようにcron",{"_index":2812,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/connect":{}}}],["piの近くにあり、使用中は加熱されます。キャリブレーションテストによると、sens",{"_index":2828,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["piは、単独で、またはraspberri",{"_index":2765,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["piをwifi",{"_index":2789,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["piを再起動してcronジョブを開始します。数秒待ってから、raspberri",{"_index":2814,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/connect":{}}}],["piを設定する最も簡単な方法は、プラグインモニター、キーボード、マウスを使ってraspberri",{"_index":2788,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["piコンピュータとsens",{"_index":2745,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/introduction/overview":{}}}],["pi入門ガイドに従います。w3schoolsには、入門ガイドもあります。スターターパックのバージョンはraspbian",{"_index":2773,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["place",{"_index":2290,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["placehold",{"_index":2219,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/references/troubleshooting":{}}}],["platformio",{"_index":2271,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["platformioをお勧めします。platformioはsbc",{"_index":2941,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["platform上で動作し、オプションでamazon",{"_index":1698,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/architecture":{}}}],["play",{"_index":2058,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["playbookからsp",{"_index":616,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["plug",{"_index":2154,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["plugin",{"_index":1008,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/iota-java/0.1/account-module/how-to-guides/create-plugin":{}}}],["pluginインターフェースを実装することができます。このオプションはプラグインが動作するアカウントオブジェクトのためのgetterとsett",{"_index":2614,"docTitle":{},"docBody":{"docs/iota-java/0.1/account-module/how-to-guides/create-plugin":{}}}],["plus）には、sens",{"_index":2769,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["pngファイルとしてqr",{"_index":1139,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/create-a-qr-code":{}}}],["poc",{"_index":1746,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{},"docs/blueprints/0.1/p2p-energy/overview":{},"docs/blueprints/0.1/p2p-energy/architecture":{},"docs/blueprints/0.1/tangle-data-storage/architecture":{},"docs/blueprints/0.1/tangle-data-storage/deployment-and-testing":{},"docs/blueprints/0.1/track-and-trace/deployment-and-testing":{}}}],["pocのアーキテクチャは、電力源、生産者、消費者、およびグリッドがiota",{"_index":1777,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["pocのアーキテクチャー（下の画像）は、センサーまたはその他のデバイス、クラウドバックエンド、および分散型台帳（dlt",{"_index":1695,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/architecture":{}}}],["pocを使用したときに発生する可能性があるいくつかのシナリオについて説明します。主に次の2",{"_index":1770,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{}}}],["point",{"_index":2042,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/references/troubleshooting":{}}}],["pointsとしてsnapshot.meta",{"_index":554,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/local-snapshot":{}}}],["pollerプラグインとpromot",{"_index":2509,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-account":{}}}],["pollerプラグインは、取り出しトランザクションが確定されたかどうか、またはペンディング中の預け入れトランザクションがあるかどうかを確認します。それから、promot",{"_index":2513,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-account":{}}}],["popul",{"_index":1845,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/deployment-and-testing":{}}}],["port",{"_index":2148,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["port設定パラメーターに設定されているapiポートでクライアントからのトランザクションを受信します。このポートにhttpリクエストを送信して、ノードのrest",{"_index":717,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/interact-with-an-iri-node":{}}}],["port：api",{"_index":936,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["possibl",{"_index":1476,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["postgresまたはfirebas",{"_index":1753,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{}}}],["pow",{"_index":276,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{},"docs/dev-essentials/0.1/concepts/minimum-weight-magnitude":{},"docs/dev-essentials/0.1/references/glossary":{},"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{},"docs/node-software/0.1/iri/references/best-practice":{},"docs/iota-go/0.1/core/introduction/overview":{}}}],["power",{"_index":2016,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{}}}],["powが導入されました。この概念はハッシュキャッシュとして知られており、ハッシュキャッシュはすべてのeメールの内容についてプルーフオブワークを要求することによって",{"_index":367,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/minimum-weight-magnitude":{}}}],["powを使用したc",{"_index":2477,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{}}}],["powを含まなければなりません。このpowは、大量のスパムトランザクションを作成するのにかかる時間と計算能力を増大させることによって、iota",{"_index":368,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/minimum-weight-magnitude":{}}}],["powを計算する関数はpearldiv",{"_index":378,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/minimum-weight-magnitude":{}}}],["powプロキシサーバがattachtotangl",{"_index":800,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{}}}],["powプロキシサーバは、iotaミドルウェアを使用するcaddyの実装です。このミドルウェアにより、サーバはiriノードのattachtotangleエンドポイントへの呼び出しを傍受してpow",{"_index":781,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{}}}],["powプロキシサーバ間の接続を安全にしたい場合は、tlsディレクティブの前のハッシュ記号（＃）を削除し、あなたのssl",{"_index":798,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{}}}],["pow計算への支払い、またはpow",{"_index":227,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["pow）したり、pow",{"_index":868,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/best-practice":{}}}],["pow）は、特定の要件を満たすために試行錯誤を使用して計算されるデータの一部です。powの重要なことは、powを行うことは困難であるがpow",{"_index":366,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/minimum-weight-magnitude":{}}}],["pow）をサポートしているわけではありません。よって、クライアントがmainnet上で公開されているノードのいずれかにトランザクションを送信する場合、別のpow",{"_index":225,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["ppaをダウンロードするためにgnu",{"_index":1243,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["pr",{"_index":1303,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{}}}],["practic",{"_index":860,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/best-practice":{}}}],["pre",{"_index":2197,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{}}}],["prefix_lengthの長さに切り捨てます。現在、この値は44バイトにハードコードされています。これは220",{"_index":572,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/tip-selection":{}}}],["prepar",{"_index":2252,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["preparetransf",{"_index":2598,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{}}}],["preparetransfers()メソッドに渡します。次に、返されたバンドルのトライトをsendtryt",{"_index":145,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/getting-started/0.1/tutorials/send-iota-tokens":{}}}],["preparetransfers(se",{"_index":2644,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["prerequisit",{"_index":2182,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["print",{"_index":749,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["privaci",{"_index":1244,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["privat",{"_index":1033,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["probabl",{"_index":2447,"docTitle":{},"docBody":{"docs/iot/0.1/references/troubleshooting":{}}}],["process",{"_index":2021,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["processtransf",{"_index":1369,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/integrate-hub":{}}}],["processtransferbatch",{"_index":1456,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["processtransferbatchrepli",{"_index":1420,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["processtransferbatchrequest",{"_index":1421,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["processtransferbatchrequest.transf",{"_index":1422,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["processtransferbatchエンドポイントを呼び出します。このようにして、hot",{"_index":1359,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["processtransfersapi呼び出しを使用する場合、タングル上ではiotaトークンは転送されません。代わりに、ユーザーの残高はデータベース上で更新されます。これは、ユーザーが取り出しをリクエストできるiota",{"_index":1371,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/integrate-hub":{}}}],["produc",{"_index":1784,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["producerpriceフィールドがグリッドによって支払われることが保証されているのではなく、すべての生産者間の合意価格が支払われます。合意価格は、すべてのproducerpric",{"_index":1793,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["product",{"_index":2333,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/read-sensor-data":{}}}],["program",{"_index":1986,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["programm",{"_index":1956,"docTitle":{"docs/iot/0.1/how-to-guides/connect-programmer":{}},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/references/troubleshooting":{}}}],["progress",{"_index":2365,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["project",{"_index":109,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/node-software/0.1/chronicle/references/architecture":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{},"docs/contribution/0.1/style-guide":{}}}],["project/0.1/som",{"_index":2982,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["projects.md",{"_index":2976,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["promotetransact",{"_index":430,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{}}}],["promotetransaction(tail",{"_index":2645,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["prompt",{"_index":1248,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["proof",{"_index":866,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/best-practice":{},"docs/node-software/0.1/iri/references/iri-configuration-options":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/iot/0.1/introduction/overview":{}}}],["properti",{"_index":2590,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{}}}],["propertiesファイルまたはコマンドラインフラグとして指定することもできます。これらのオプションは、ci",{"_index":2589,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{}}}],["protobuf",{"_index":2370,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["protocol",{"_index":882,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/iri-configuration-options":{},"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["provid",{"_index":2272,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["providerフィールドにurl",{"_index":1397,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{}}}],["provider：str",{"_index":2704,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["ps",{"_index":2324,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["public",{"_index":1939,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["public、private、またはrestrictedのいずれか。null値はpubl",{"_index":2737,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["public、private、またはrestrictedのいずれかを指定できます。null値はpubl",{"_index":2724,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["public、privateまたはrestrict",{"_index":2714,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["publicから指定されたモードとsidekeyに変更します。3つのモードのみがあります：public、private、およびrestrictedです。これらのモードのいずれかに合致しない場合、デフォルトでpubl",{"_index":2711,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["publicに設定されています。パブリックモードでは、誰でもastropiotaによって公開された環境データを見ることができます。プレースホルダ、mamsecretは、privateまたはrestrict",{"_index":2825,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["publicに設定されています。プレースホルダ、mamsecretは、privateまたはrestrict",{"_index":2837,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["publicメソッドの代わりにrestrictedメソッドを使用するようにmamst",{"_index":1523,"docTitle":{},"docBody":{"docs/utils/0.1/community/mam-watcher/overview":{}}}],["publish",{"_index":1636,"docTitle":{},"docBody":{"docs/utils/0.1/official/proof-of-existance/overview":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["publish関数で、ファイルをハッシュ化し、トランザクションでdevnet",{"_index":1634,"docTitle":{},"docBody":{"docs/utils/0.1/official/proof-of-existance/overview":{}}}],["publish関数に渡し、2",{"_index":1639,"docTitle":{},"docBody":{"docs/utils/0.1/official/proof-of-existance/overview":{}}}],["publish関数を実行し、contract.txt",{"_index":1635,"docTitle":{},"docBody":{"docs/utils/0.1/official/proof-of-existance/overview":{}}}],["pubsub",{"_index":1582,"docTitle":{},"docBody":{"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{}}}],["pull",{"_index":2411,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{},"docs/contribution/0.1/style-guide":{}}}],["purpos",{"_index":2243,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["put",{"_index":1790,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["putti",{"_index":2917,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["pyocd",{"_index":2451,"docTitle":{},"docBody":{"docs/iot/0.1/references/troubleshooting":{}}}],["pyocd/udev",{"_index":2452,"docTitle":{},"docBody":{"docs/iot/0.1/references/troubleshooting":{}}}],["pyramid",{"_index":1673,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/overview":{}}}],["python",{"_index":472,"docTitle":{},"docBody":{"docs/client-libraries/0.1/introduction/overview":{},"docs/node-software/0.1/iri/how-to-guides/interact-with-an-iri-node":{},"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node":{},"docs/node-software/0.1/iri/references/api-reference":{},"docs/node-software/0.1/chronicle/references/api-reference":{},"docs/node-software/0.1/goshimmer/how-to-guides/subscribe-to-events":{},"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/smartcity/0.1/astropiota/how-to-guides/connect":{}}}],["python3",{"_index":2786,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["python用のpypars",{"_index":1237,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["pフラグを指定してiri",{"_index":668,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["qr",{"_index":1136,"docTitle":{"docs/wallets/0.1/trinity/how-to-guides/create-a-qr-code":{}},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/receive-a-transaction":{},"docs/wallets/0.1/trinity/how-to-guides/create-a-qr-code":{}}}],["qrコードは、アドレス、金額、およびメッセージの各フィールドに自動入力することで、トリニティでトランザクションを送信するプロセスをスピードアップします。送信者がqrコードをスキャンできるようにすることで、eコマースweb",{"_index":1137,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/create-a-qr-code":{}}}],["qrコードをスキャンすると、トランザクションフィールドにqr",{"_index":1141,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/create-a-qr-code":{}}}],["qrコードを送信するか、web",{"_index":1140,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/create-a-qr-code":{}}}],["queue",{"_index":531,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/zero-message-queue":{}}}],["r",{"_index":1201,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["radio",{"_index":2057,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["ram",{"_index":589,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{},"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{},"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["random",{"_index":584,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/tip-selection":{}}}],["rang",{"_index":2056,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["rangeまたはcompar",{"_index":2968,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["raspberri",{"_index":247,"docTitle":{"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{}},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{},"docs/smartcity/0.1/introduction/overview":{},"docs/utils/0.1/introduction/overview":{},"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{},"docs/blueprints/0.1/data-marketplace/architecture":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/blueprints/0.1/p2p-energy/deployment-and-testing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/smartcity/0.1/astropiota/how-to-guides/build":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{},"docs/smartcity/0.1/astropiota/how-to-guides/connect":{}}}],["raspberrypi",{"_index":1581,"docTitle":{},"docBody":{"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{}}}],["raspberryをクリックして、prefer",{"_index":2790,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["raspbian",{"_index":2778,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["rasperri",{"_index":2246,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["rate",{"_index":2277,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["react",{"_index":1177,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/blueprints/0.1/p2p-energy/deployment-and-testing":{}}}],["reactで書かれたグラフィカルユーザーインターフェース（gui）とnodejsで書かれたバックエンドapiの2",{"_index":1745,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{},"docs/blueprints/0.1/tangle-data-storage/architecture":{}}}],["reactで書かれたフロントエンドguiとnode.j",{"_index":1819,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/architecture":{},"docs/blueprints/0.1/tangle-data-storage/deployment-and-testing":{}}}],["reactで書かれてelectron上にビルドされていますが、トリニティモバイルはreact",{"_index":1162,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["read",{"_index":1950,"docTitle":{"docs/iot/0.1/how-to-guides/read-sensor-data":{}},"docBody":{"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["reader",{"_index":2397,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["readi",{"_index":2229,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{}}}],["readme.md",{"_index":1734,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["real",{"_index":1972,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{}}}],["reason",{"_index":1489,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["reattach",{"_index":2510,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-account":{}}}],["reboot",{"_index":2350,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["receiv",{"_index":1134,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/send-a-transaction":{},"docs/wallets/0.1/trinity/how-to-guides/receive-a-transaction":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["receiveaddress",{"_index":1356,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["receiver.j",{"_index":2806,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["receiver.jsがastropiotaの現在のmamチャネルを見つけるには、メッセージルートが必要です。したがって、sender.j",{"_index":2835,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["receiver.jsが初期化され、astropiotaからのmam",{"_index":2841,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["receiver.jsはmamクライアントとtryt",{"_index":2836,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["receiver.jsは、現在のルート上の新しいデータについて5秒ごとにmam",{"_index":2839,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["receiver.jsは現在のルートと次のルートを追跡するため、何をリッスンし、いつデータを画面に出力するかがわかります。receiver.jsがsens",{"_index":2838,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["recip",{"_index":2458,"docTitle":{},"docBody":{"docs/iot/0.1/references/troubleshooting":{}}}],["recommend",{"_index":2161,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["recordがパブリックip",{"_index":1567,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["recoverfund",{"_index":1383,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{},"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["recoverfunds_en",{"_index":1424,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{},"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["recoverfundsrepli",{"_index":1425,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["recoverfundsrequest",{"_index":1423,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["red",{"_index":2425,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["reduc",{"_index":2073,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["reduce関数が使われます。合計が良い例です。したがって、今回の場合、reduce関数は集約関数よりも意味があります。集約関数は、複雑な操作があるときに役立ちます。1つの複雑な例がbundleaggregation.scalaにあります。bundleaggregationは入ってくるトランザクションをバンドルにまとめ、それらをunconfirmedbundlesとreattachedunconfirmedbundl",{"_index":775,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["refer",{"_index":1300,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iota-js/0.1/core/introduction/overview":{}}}],["reference引数のトランザクションがdepthマイルストーンインデックスよりも古い場合、api呼び出しは失敗し、次のエラーメッセージが表示されます。：refer",{"_index":569,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/tip-selection":{}}}],["refusedエラーが表示された場合は、ハブが実行されていることと、ステップ2で正しいハブapi",{"_index":1343,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["regulatori",{"_index":1940,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["reinstal",{"_index":2351,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["releas",{"_index":612,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["reliabl",{"_index":1925,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["remot",{"_index":865,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/best-practice":{},"docs/wallets/0.1/trinity/how-to-guides/connect-to-a-custom-node":{}}}],["remote=fals",{"_index":886,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/iri-configuration-options":{}}}],["remote=tru",{"_index":885,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/iri-configuration-options":{}}}],["remov",{"_index":2211,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["removeneighbor",{"_index":837,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{}}}],["removeneighbors(uri",{"_index":2646,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["repl",{"_index":751,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["replac",{"_index":2217,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/references/troubleshooting":{}}}],["replaybundl",{"_index":2600,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{}}}],["replaybundle()メソッドがバンドルを再添付し、後で確定されたかどうかを確認するために、新しく再添付されたバンドルの末尾トランザクションハッシュをtail",{"_index":431,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{}}}],["replaybundle(tail",{"_index":2647,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["repositori",{"_index":2202,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/references/troubleshooting":{}}}],["req",{"_index":1279,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["request",{"_index":166,"docTitle":{"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{}},"docBody":{"docs/getting-started/0.1/tutorials/receive-test-tokens":{},"docs/node-software/0.1/iri/references/api-reference":{},"docs/node-software/0.1/chronicle/references/design-goals":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/contribution/0.1/style-guide":{}}}],["requestボタンはアドレスが有効な場合のみ表示されます。有効なアドレスは、81または90トライト（有効なチェックサムを含む場合は90",{"_index":167,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/receive-test-tokens":{}}}],["requir",{"_index":141,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/dev-essentials/0.1/how-to-guides/derive-addresses-from-private-keys":{},"docs/dev-essentials/0.1/how-to-guides/send-bundle":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iota-js/0.1/mam/how-to-guides/create-public-channel":{},"docs/iota-js/0.1/mam/how-to-guides/create-restricted-channel":{},"docs/general/0.1/references/troubleshooting":{}}}],["reset",{"_index":2356,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["resili",{"_index":2375,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{}}}],["resourc",{"_index":2097,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["respons",{"_index":824,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/references/troubleshooting":{}}}],["rest",{"_index":1256,"docTitle":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{},"docs/wallets/0.1/hub/references/restful-api-reference":{}},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/blueprints/0.1/data-marketplace/overview":{},"docs/blueprints/0.1/track-and-trace/architecture":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["restart",{"_index":676,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["restart=alway",{"_index":990,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["result",{"_index":825,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["retail",{"_index":2118,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["retriev",{"_index":1838,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/architecture":{},"docs/blueprints/0.1/tangle-data-storage/deployment-and-testing":{}}}],["retrievefil",{"_index":1827,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/architecture":{}}}],["retrieveをクリックします。トランザクションハッシュはapiに渡され、タングル上のトランザクションのメッセージからipfsハッシュやsha256ハッシュなどが取得されます。ipfsハッシュはファイルのダウンロードに使用され、sha256ハッシュはダウンロードしたファイルのsha256",{"_index":1847,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/deployment-and-testing":{}}}],["retrofit",{"_index":2563,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["return",{"_index":1483,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/blueprints/0.1/track-and-trace/overview":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iota-js/0.1/mam/references/api-reference":{}}}],["rfc",{"_index":2081,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["rfc7668",{"_index":2087,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["rgb",{"_index":2849,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/references/sensehat-specs":{}}}],["right",{"_index":2165,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["riot",{"_index":2176,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["robot",{"_index":165,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/receive-test-tokens":{}}}],["rocksdb",{"_index":515,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/the-ledger":{}}}],["role",{"_index":2059,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["root",{"_index":2280,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["root://anoth",{"_index":2981,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["rootとオプションのsidekey",{"_index":2742,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["rootとオプションのsidekeyからチャネルを順番に取得します。この呼び出しは、次の2つの方法で使用できます。コールバックなしでは、戻る前にチャネル全体を読み取ります。コールバックを使用すると、アプリケーションはコールバックを介してデータを返し、終了すると最終的にnextroot",{"_index":2736,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["rootのbuild.gradl",{"_index":104,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{}}}],["root：str",{"_index":2720,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["rout",{"_index":2044,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["router",{"_index":2038,"docTitle":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/references/troubleshooting":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["rpc",{"_index":1050,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["rpl",{"_index":2093,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["rto",{"_index":1975,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{}}}],["rule",{"_index":2449,"docTitle":{},"docBody":{"docs/iot/0.1/references/troubleshooting":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["run",{"_index":667,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{},"docs/compass/0.1/references/troubleshooting":{},"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iota-js/0.1/core/introduction/overview":{},"docs/iota-js/0.1/account-module/introduction/overview":{}}}],["runtim",{"_index":742,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{},"docs/utils/0.1/official/proof-of-existance/overview":{}}}],["runコマンドに次のフラグを1",{"_index":1501,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/command-line-flags":{}}}],["rustで引き続き開発および書き換えを行います。rust版は、リソースおよびメモリ管理の点でelixir",{"_index":912,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["r（macosではcmd",{"_index":1200,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["s3やazur",{"_index":1841,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/architecture":{}}}],["safe",{"_index":2564,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["salt",{"_index":1213,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/introduction/overview":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["saltパラメーターはもう必要ありません。署名サーバー（signer:50051）と使用するssl",{"_index":1288,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["saltフラグの値を少なくとも20",{"_index":1261,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["saltフラグを設定してシード暗号化アルゴリズムの強度を高めます。ソルトは攻撃者がデータベース内のシードuuid",{"_index":1509,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/security-considerations":{}}}],["same",{"_index":1999,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["sampl",{"_index":965,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/references/data-model":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{}}}],["saul",{"_index":2328,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/read-sensor-data":{}}}],["sbc",{"_index":1983,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["sbc。おすすめはrasperri",{"_index":2924,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["sbcにgoをインストールしました。これで、go",{"_index":2316,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/install-go-on-sbc":{}}}],["sbcにイーサネットポートがない場合は、usb",{"_index":2925,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["sbcのドキュメンテーションを参照します。orang",{"_index":2946,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["sbcの両方がwifi",{"_index":2938,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["sbcをルーターに接続するだけです。wifiを使用したいか、またはデバイスがwifiしか持っていない場合は、wifiを通してルーターに接続する必要があります。以下の手順で、my_ssidをネットワークの名前に、my_password",{"_index":2931,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["sbcを再確認します。新しく追加されたusbポートが探しているusb",{"_index":2945,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["sbcを確認し、usbアダプタを接続してusb",{"_index":2944,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["sbc）は、単一の回路基板がメモリ、入力/出力ポート、マイクロプロセッサおよび他の必要な機能を含む小型のコンピュータです。sbcは、デスクトップなどのマルチボードコンピュータよりも軽量、コンパクト、信頼性が高く、電力効率もはるかに優れています。iotaテクノロジを使用する専用の組み込みアプリケーション用にsbc",{"_index":2920,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["sbt",{"_index":746,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["scalaプログラミング言語とsbt",{"_index":741,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["scale",{"_index":505,"docTitle":{},"docBody":{"docs/node-software/0.1/introduction/overview":{}}}],["scan",{"_index":2300,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{}}}],["scl",{"_index":2412,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["screen",{"_index":994,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/smartcity/0.1/astropiota/how-to-guides/build":{},"docs/smartcity/0.1/astropiota/how-to-guides/connect":{}}}],["screen/tmuxセッション、system",{"_index":1262,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["script",{"_index":2194,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/smartcity/0.1/astropiota/how-to-guides/connect":{}}}],["scriptをクリックして、事前設定された.zip",{"_index":1733,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["scylla",{"_index":907,"docTitle":{"docs/node-software/0.1/chronicle/references/data-model":{}},"docBody":{"docs/node-software/0.1/chronicle/introduction/overview":{},"docs/node-software/0.1/chronicle/how-to-guides/get-started":{},"docs/node-software/0.1/chronicle/references/architecture":{},"docs/node-software/0.1/chronicle/references/data-model":{}}}],["scylladb",{"_index":904,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/introduction/overview":{},"docs/node-software/0.1/chronicle/references/data-model":{}}}],["scylladbとchronicle間の通信には、少なくとも9000バイトのmtu",{"_index":918,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["scyllaはデータレプリカを複数のノードに保存します。これらのノードはレプリカノードと呼ばれます。パーティションはレプリカノードで繰り返されます。複製係数（rf",{"_index":908,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/introduction/overview":{}}}],["scyllaクラスターを作成（scyllaバージョン3.0.6以降）します。2019",{"_index":913,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["sd",{"_index":1965,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["sda",{"_index":2413,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["sdd",{"_index":1964,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{}}}],["sdo",{"_index":2405,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{}}}],["sdカードを挿入してsbc",{"_index":2928,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["search",{"_index":2260,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["second",{"_index":2303,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/references/troubleshooting":{}}}],["seconds変数を1",{"_index":428,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{}}}],["secret_key_base：手順2.2",{"_index":935,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["sector",{"_index":1930,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["secur",{"_index":504,"docTitle":{},"docBody":{"docs/node-software/0.1/introduction/overview":{},"docs/iota-js/0.1/core/introduction/overview":{}}}],["security：integ",{"_index":2708,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["see",{"_index":2186,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{},"docs/iot/0.1/references/troubleshooting":{}}}],["seed",{"_index":38,"docTitle":{},"docBody":{"docs/getting-started/0.1/introduction/what-is-a-seed":{},"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-the-trinity-wallet":{},"docs/wallets/0.1/trinity/how-to-guides/create-an-account":{}}}],["seedproviderオブジェクトを作成してwithseedprovid",{"_index":2503,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-account":{}}}],["seedproviderオブジェクトを作成して、それをbuild",{"_index":2608,"docTitle":{},"docBody":{"docs/iota-java/0.1/account-module/how-to-guides/create-account":{}}}],["seed変数をgetnewaddress",{"_index":399,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/create-an-address":{}}}],["seed：str",{"_index":2707,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["select",{"_index":80,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/node-software/0.1/iri/concepts/tip-selection":{},"docs/node-software/0.1/iri/references/iri-configuration-options":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["sell",{"_index":1499,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/iot/0.1/introduction/overview":{}}}],["semiconductor",{"_index":1709,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/architecture":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["send",{"_index":1132,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/send-a-transaction":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["sender.j",{"_index":1521,"docTitle":{},"docBody":{"docs/utils/0.1/community/mam-watcher/overview":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{},"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["sender.jsはmamメッセージストリームを初期化します。初期化中に、メッセージを安全に送信するために使用されるシードとアドレスが生成されます。この例では、メッセージはmainnetネットワークではなくdevnet",{"_index":2824,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["sender.jsは、湿度と温度のデータを摂氏または摂氏と華氏で表示するようにsens",{"_index":2826,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["sender.jsウィンドウがトランザクションを送信し、fetcher.j",{"_index":1520,"docTitle":{},"docBody":{"docs/utils/0.1/community/mam-watcher/overview":{}}}],["sender.jsファイルとfetcher.jsファイルの両方で、ノードのurlhttps&#x3a;//nodes.devnet.thetangle.org:443を必ず自分のノードのurl",{"_index":1579,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["sender.jsファイルとfetcher.jsファイルの両方で、ノードのurlhttps&#x3a;//nodes.devnet.thetangle.org:443を必ず自分のノードのurl（http&#x3a;127.0.0.1:14265",{"_index":1526,"docTitle":{},"docBody":{"docs/utils/0.1/community/mam-watcher/overview":{}}}],["sender.jsファイルにmamクライアントとiota",{"_index":2821,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["sendtransf",{"_index":2599,"docTitle":{},"docBody":{"docs/iota-java/0.1/core/introduction/overview":{}}}],["sendtryt",{"_index":409,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/send-bundle":{},"docs/blueprints/0.1/tangle-data-storage/architecture":{},"docs/iota-java/0.1/core/introduction/overview":{}}}],["sendtrytes(tryt",{"_index":2648,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["sens",{"_index":2749,"docTitle":{"docs/smartcity/0.1/astropiota/references/sensehat-specs":{}},"docBody":{"docs/smartcity/0.1/astropiota/introduction/overview":{},"docs/smartcity/0.1/astropiota/how-to-guides/build":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{},"docs/smartcity/0.1/astropiota/how-to-guides/customize":{},"docs/smartcity/0.1/astropiota/references/sensehat-specs":{}}}],["sensehat",{"_index":492,"docTitle":{},"docBody":{"docs/smartcity/0.1/introduction/overview":{},"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["senseip.pi",{"_index":2811,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/connect":{}}}],["sensor",{"_index":1711,"docTitle":{"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}},"docBody":{"docs/blueprints/0.1/data-marketplace/architecture":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["sensor'",{"_index":2318,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/read-sensor-data":{}}}],["sensor/examples/env_sensor_network",{"_index":2366,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["sensor/examples/env_sensor_network/sensor.c",{"_index":2368,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["sensor/examples/env_sensor_network/server.c",{"_index":2367,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["sensor/examples/hello",{"_index":2204,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{}}}],["sensor/examples/saul",{"_index":2319,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/read-sensor-data":{}}}],["sent",{"_index":2376,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{}}}],["separ",{"_index":501,"docTitle":{},"docBody":{"docs/node-software/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["sequenc",{"_index":1781,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["seri",{"_index":1942,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["serial",{"_index":1994,"docTitle":{"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["server",{"_index":1713,"docTitle":{"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{}},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["servertyp",{"_index":1452,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["serverファイル（18.04",{"_index":2899,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["serverブロックディレクティブで、proxy_passシンプルディレクティブの値をhttp&#x3a;//iriに変更します。iriをあなたのupstream",{"_index":704,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{}}}],["servic",{"_index":1714,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["services上の仮想プライベートサーバのインスタンス（t2.xlarg",{"_index":1080,"docTitle":{},"docBody":{"docs/compass/0.1/references/merkle-tree-compute-times":{}}}],["services（aw",{"_index":234,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["session",{"_index":2332,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["set",{"_index":823,"docTitle":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{}},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/references/troubleshooting":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["setinterv",{"_index":432,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{}}}],["settings：objectまたはstr",{"_index":2703,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["sha",{"_index":1766,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{}}}],["sha256",{"_index":1110,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{},"docs/blueprints/0.1/doc-immutability/architecture":{},"docs/blueprints/0.1/tangle-data-storage/architecture":{}}}],["sha256、およびipf",{"_index":1830,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/architecture":{}}}],["sha256チェックサムは、apach",{"_index":623,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["sha256ハッシュ、およびipfsハッシュはイミュータブルです。ipf",{"_index":1848,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/deployment-and-testing":{}}}],["sha256ハッシュ、およびファイルの内容をipfsノードに送信します（post",{"_index":1828,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/architecture":{}}}],["sha256ハッシュおよびコード署名を使用できます。これら2",{"_index":1109,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{}}}],["sha256ハッシュとリリースノートのsha256",{"_index":1113,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{}}}],["sha256ハッシュをapiから返されたsha256",{"_index":1837,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/architecture":{}}}],["sha512",{"_index":1764,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{}}}],["share",{"_index":1898,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["shell",{"_index":2226,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/smartcity/0.1/astropiota/how-to-guides/connect":{}}}],["shift",{"_index":2346,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["shimmer",{"_index":1005,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["shimmer.exeに変更してから、コマンドプロンプトで.\\\\shimm",{"_index":1011,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["ship",{"_index":1920,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["show",{"_index":1945,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["showdata",{"_index":2840,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["shutdown",{"_index":2544,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-plugin":{}}}],["sidekeyは認証の証としてdelet",{"_index":1798,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["sidekeyは認証の証としてdeleteに渡されます。電力源が登録解除されると、生産者は電力源のmam",{"_index":1792,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["sidekey：str",{"_index":2715,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["signal",{"_index":2431,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["signaturemessagefrag",{"_index":159,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{}}}],["signaturemessagefragmentフィールドにマークル木を再構築することができるのに十分なマークル木からの足りないデータを含む1",{"_index":315,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/the-tangle":{}}}],["signaturemessagefragmentフィールドに含めることができるのは2187トライトだけなので、1より大きいセキュリティレベルを持つ入力アドレスは、ゼロトークンの出力トランザクションのsignaturemessagefrag",{"_index":337,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/addresses-and-signatures":{}}}],["signaturemessagefragmentフィールド（2187",{"_index":354,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{}}}],["signbundl",{"_index":1395,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{},"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["signbundle()メソッドを使用する前に、ハブのsignbundle_enabledフラグがtru",{"_index":1394,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{}}}],["signbundle_en",{"_index":1427,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{},"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["signbundle_enabledフラグがtru",{"_index":1388,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{}}}],["signbundlerepli",{"_index":1428,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["signbundlerequest",{"_index":1426,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["signed_uuid",{"_index":1504,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/database-tables":{}}}],["signerです。シェルでhostnam",{"_index":1275,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["signing.conf",{"_index":1284,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["signing.confファイルに追加します。userフィールドの値をユーザー名に置き換え、command、directory、stderr_logfile、stdout_logfil",{"_index":1283,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["silo",{"_index":1676,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/overview":{}}}],["similar",{"_index":1981,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["simpl",{"_index":2273,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["simplest",{"_index":2033,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["simpli",{"_index":1915,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["singl",{"_index":1032,"docTitle":{"docs/iot/0.1/how-to-guides/setup-sbc":{}},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["size",{"_index":2074,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{}}}],["sizeはどちらもオプションであり、デフォルトはそれぞれ0と10",{"_index":1801,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["si）における物理量および単位の略語。湿度、大気質、降水量、風速、風向などの環境測定単位でもあります。このフィールドの長さは20",{"_index":1732,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["skip",{"_index":2342,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["slightli",{"_index":2759,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["small",{"_index":1946,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["smaller",{"_index":2760,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["smart",{"_index":1688,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/overview":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["sn",{"_index":727,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node":{}}}],["snapshot",{"_index":880,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/iri-configuration-options":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/compass/0.1/references/troubleshooting":{},"docs/wallets/0.1/trinity/how-to-guides/perform-a-snapshot-transition":{}}}],["snapshot.example.txtファイルは、次のシードから派生した最初のアドレスに2.7piのiota",{"_index":1054,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["snapshot.meta",{"_index":542,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/local-snapshot":{},"docs/node-software/0.1/iri/references/data-in-the-snapshot-metadata-file":{}}}],["snapshot.st",{"_index":544,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/local-snapshot":{}}}],["snapshot.txt",{"_index":1055,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/compass/0.1/references/troubleshooting":{}}}],["snapshotindex",{"_index":948,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["social",{"_index":1937,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["socket",{"_index":1084,"docTitle":{},"docBody":{"docs/compass/0.1/references/troubleshooting":{}}}],["softwar",{"_index":498,"docTitle":{},"docBody":{"docs/node-software/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["solder",{"_index":2153,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{}}}],["solid",{"_index":553,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/local-snapshot":{}}}],["solut",{"_index":2109,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["someth",{"_index":2225,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["sometim",{"_index":2100,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["sometimetim",{"_index":2126,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["soon",{"_index":1917,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["sourc",{"_index":1782,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{},"docs/iot/0.1/introduction/overview":{}}}],["sourceディレクトリに移動してrepl",{"_index":754,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["space",{"_index":1992,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{}}}],["spammer",{"_index":1009,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["spamnet",{"_index":259,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/contribution/0.1/style-guide":{}}}],["spamnetトークンを使用するpoc",{"_index":278,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{}}}],["spamnet上でiri",{"_index":282,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{}}}],["spamnet上のiriノードのzmq",{"_index":284,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{}}}],["spamnet上のトランザクションが有効になるには、7の最小重量値（mwm",{"_index":279,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{}}}],["spamnet上のトークンの総供給量を含むアドレスを定義するためのスナップショットファイルも作成しなければなりません。このファイルの場所は、snapshot_fil",{"_index":641,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["sparkfun",{"_index":2121,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["special",{"_index":2116,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["specif",{"_index":2008,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{}}}],["spectrum",{"_index":2068,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["speed",{"_index":1923,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["spell",{"_index":2970,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["spent",{"_index":804,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/update-the-iri":{}}}],["spread",{"_index":2067,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["src/desktop/out",{"_index":1176,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["src/shared/locales/en/translation.jsonに移動し、作成したテーマの名前をthem",{"_index":1189,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["src/shared/locales/en/ディレクトリのtranslation.json",{"_index":1193,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["sscc",{"_index":1865,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["sseベースのpowのpow_ss",{"_index":2476,"docTitle":{},"docBody":{"docs/iota-go/0.1/core/introduction/overview":{}}}],["ssh",{"_index":2245,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{},"docs/general/0.1/how-to-guides/set-up-virtual-machine":{},"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["sshでraspberri",{"_index":2807,"docTitle":{"docs/smartcity/0.1/astropiota/how-to-guides/connect":{}},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/connect":{}}}],["sshを通してsbcに接続しています。これでsbc",{"_index":2940,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["sshクライアントと構成済みネットワークがインストールされたlinuxベースのオペレーティングシステム（os）。このガイドでは、ubuntuを使用しますが、macosと同様に他のlinux",{"_index":2921,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["sshサーバとしてlinux",{"_index":2906,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["ssh接続を確立します。ip_address_from_step_7プレースホルダーをlinuxサーバのip",{"_index":2915,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["ssh接続を開き、raspberri",{"_index":2816,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/connect":{}}}],["ssh経由でlinuxサーバに接続しました。puttyまたはホストデバイスにlinuxコマンドを入力して、linuxサーバ上でlinux",{"_index":2919,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["ssh経由でsbc",{"_index":2950,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["ssl",{"_index":1268,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["ssl.yml",{"_index":1576,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["ssl証明書をインポートし、ssl証明書を使用するようにstart.sh",{"_index":1285,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["ssl証明書を使用する安全なcaddyプロキシサーバを起動するようにワンコマンドタングルのdock",{"_index":1564,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["st",{"_index":2843,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/references/sensehat-specs":{}}}],["stack",{"_index":892,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/troubleshooting":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["stackexchang",{"_index":888,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/troubleshooting":{},"docs/wallets/0.1/trinity/references/troubleshooting":{}}}],["stackoverflow",{"_index":1512,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/troubleshooting":{}}}],["stakehold",{"_index":1852,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/overview":{}}}],["stand",{"_index":2048,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["standard",{"_index":2079,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/connect-programmer":{}}}],["star",{"_index":2031,"docTitle":{"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{}},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["start",{"_index":437,"docTitle":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}},"docBody":{"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/smartcity/0.1/astropiota/references/sensehat-specs":{},"docs/contribution/0.1/style-guide":{}}}],["start()関数を作成します。アカウントが開始されると、すべてのプラグインはaccount",{"_index":2543,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-plugin":{}}}],["start.sh",{"_index":1253,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["startattaching()とstopattach",{"_index":2666,"docTitle":{},"docBody":{"docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["starter",{"_index":2766,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["state",{"_index":1061,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/compass/0.1/references/troubleshooting":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["state：object",{"_index":2712,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["static",{"_index":2881,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["station",{"_index":1706,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/architecture":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["statsrepli",{"_index":1430,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["statsrequest",{"_index":1429,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["statu",{"_index":993,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["status&amp;gt",{"_index":1863,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["step",{"_index":2180,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["stlinkv2",{"_index":2010,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{}}}],["stm",{"_index":238,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["stmicroelectron",{"_index":2011,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{}}}],["storag",{"_index":1667,"docTitle":{},"docBody":{"docs/blueprints/0.1/introduction/overview":{},"docs/blueprints/0.1/tangle-data-storage/architecture":{},"docs/blueprints/0.1/tangle-data-storage/deployment-and-testing":{},"docs/iot/0.1/concepts/flashing":{}}}],["storageなどの代替ストレージソリューションを使用するには、一意のハッシュ（たとえばファイルのsha256",{"_index":1842,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/architecture":{}}}],["store",{"_index":500,"docTitle":{},"docBody":{"docs/node-software/0.1/introduction/overview":{},"docs/blueprints/0.1/tangle-data-storage/architecture":{},"docs/iot/0.1/introduction/overview":{},"docs/iota-java/0.1/account-module/how-to-guides/create-account":{}}}],["storeandbroadcast(tryt",{"_index":2649,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["storefil",{"_index":1826,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/architecture":{}}}],["storefile()メソッドは次の形式のjson",{"_index":1831,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/architecture":{}}}],["storetailtransact",{"_index":1659,"docTitle":{},"docBody":{"docs/utils/0.1/official/tryte-compress/overview":{}}}],["storetransact",{"_index":840,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{}}}],["storetransactions(tryt",{"_index":2650,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["storeオブジェクトをclose可能であれば、clos",{"_index":2505,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-account":{}}}],["stream",{"_index":1468,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["streamingディレクトリに移動してrepl（read",{"_index":747,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["string",{"_index":2716,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["structur",{"_index":2062,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["studio",{"_index":133,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/getting-started/0.1/tutorials/send-iota-tokens":{},"docs/dev-essentials/0.1/how-to-guides/convert-data-to-trytes":{},"docs/dev-essentials/0.1/how-to-guides/create-an-address":{},"docs/dev-essentials/0.1/how-to-guides/derive-addresses-from-private-keys":{},"docs/dev-essentials/0.1/how-to-guides/send-bundle":{},"docs/dev-essentials/0.1/how-to-guides/check-transaction-confirmation":{},"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{},"docs/node-software/0.1/iri/how-to-guides/interact-with-an-iri-node":{},"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node":{},"docs/node-software/0.1/goshimmer/how-to-guides/subscribe-to-events":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{},"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{},"docs/utils/0.1/official/iota-area-codes/overview":{},"docs/utils/0.1/official/proof-of-existance/overview":{},"docs/utils/0.1/official/tangle-certificate/overview":{},"docs/utils/0.1/official/tryte-compress/overview":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/iota-go/0.1/account-module/how-to-guides/create-account":{},"docs/iota-java/0.1/account-module/how-to-guides/create-account":{},"docs/iota-js/0.1/account-module/how-to-guides/create-account":{},"docs/contribution/0.1/style-guide":{}}}],["sub",{"_index":2876,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["sub2",{"_index":929,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["subjパラメーターを変更し（例えば、cn=sign",{"_index":1278,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["submit",{"_index":1471,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/contribution/0.1/style-guide":{}}}],["subnet",{"_index":2283,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["subscrib",{"_index":2678,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/introduction/overview":{},"docs/iota-js/0.1/mam/references/api-reference":{}}}],["subse",{"_index":403,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/derive-addresses-from-private-keys":{}}}],["succe",{"_index":2464,"docTitle":{},"docBody":{"docs/iot/0.1/references/troubleshooting":{}}}],["success",{"_index":124,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-the-trinity-wallet":{},"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{},"docs/node-software/0.1/chronicle/how-to-guides/get-started":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/utils/0.1/community/mam-watcher/overview":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/contribution/0.1/style-guide":{}}}],["success:congratul",{"_index":2270,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["success:おめでとうございます:tada",{"_index":152,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/getting-started/0.1/tutorials/send-iota-tokens":{},"docs/dev-essentials/0.1/how-to-guides/derive-addresses-from-private-keys":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{},"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{},"docs/utils/0.1/official/iota-area-codes/overview":{},"docs/utils/0.1/official/proof-of-existance/overview":{},"docs/utils/0.1/official/tryte-compress/overview":{},"docs/iot/0.1/how-to-guides/install-go-on-sbc":{},"docs/iota-js/0.1/mam/how-to-guides/create-public-channel":{},"docs/iota-js/0.1/mam/how-to-guides/create-restricted-channel":{}}}],["success:おめでとうございます！:tada",{"_index":692,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{},"docs/wallets/0.1/trinity/how-to-guides/connect-to-a-custom-node":{},"docs/wallets/0.1/trinity/how-to-guides/outsource-pow":{},"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{},"docs/iota-go/0.1/account-module/how-to-guides/create-account":{},"docs/iota-go/0.1/account-module/how-to-guides/listen-to-events":{},"docs/iota-go/0.1/account-module/how-to-guides/create-plugin":{},"docs/iota-java/0.1/account-module/how-to-guides/create-account":{},"docs/iota-java/0.1/account-module/how-to-guides/listen-to-events":{},"docs/iota-java/0.1/account-module/how-to-guides/create-plugin":{},"docs/iota-js/0.1/account-module/how-to-guides/create-account":{},"docs/iota-js/0.1/account-module/how-to-guides/listen-to-events":{},"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["success:コンパスはあなた自身のiotaネットワークでマイルストーンを送っています！:tada",{"_index":1069,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["such",{"_index":1947,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["summary.log",{"_index":2969,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["summary.md",{"_index":2971,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["supervisorパッケージをインストールします（ctrl+c",{"_index":1264,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["suppli",{"_index":1933,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["support",{"_index":2179,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/references/troubleshooting":{}}}],["sure",{"_index":2139,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["svg",{"_index":1644,"docTitle":{},"docBody":{"docs/utils/0.1/official/tangle-certificate/overview":{}}}],["swarm",{"_index":954,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/references/architecture":{}}}],["sweep",{"_index":1463,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/wallets/0.1/hub/references/database-tables":{}}}],["sweep_max_deposit",{"_index":1228,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/concepts/sweeps":{}}}],["sweep_max_withdraw",{"_index":1229,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/concepts/sweeps":{}}}],["sweep_tail",{"_index":1506,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/database-tables":{}}}],["sweepdetail",{"_index":1461,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["sweepdetailrepli",{"_index":1432,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["sweepdetailrequest",{"_index":1431,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["sweepev",{"_index":1433,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["sweepinfo",{"_index":1462,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["sweepinforequest",{"_index":1434,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["sweepinterv",{"_index":1226,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/concepts/sweeps":{}}}],["sweepsubscript",{"_index":1466,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["sweepsubscriptionrequest",{"_index":1435,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["sweeps：取り出しを発行すると、hub",{"_index":1218,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/introduction/overview":{}}}],["switch",{"_index":2040,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["system",{"_index":1962,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/references/troubleshooting":{},"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["system(rto",{"_index":1973,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{}}}],["system（ipf",{"_index":1822,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/architecture":{}}}],["sとledger",{"_index":1097,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/concepts/hardware-wallet":{}}}],["sを使用して、トリニティから650",{"_index":1101,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/concepts/hardware-wallet":{}}}],["sを使用すると、同じトランザクション内で2",{"_index":1099,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/concepts/hardware-wallet":{}}}],["tab",{"_index":2985,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["tabl",{"_index":964,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/references/data-model":{}}}],["tada",{"_index":125,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-the-trinity-wallet":{},"docs/node-software/0.1/chronicle/how-to-guides/get-started":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["tagフィールドにiac",{"_index":1623,"docTitle":{},"docBody":{"docs/utils/0.1/official/iota-area-codes/overview":{}}}],["tag：str",{"_index":2733,"docTitle":{},"docBody":{"docs/iota-js/0.1/mam/references/api-reference":{}}}],["tail",{"_index":434,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{}}}],["tail変数が上記で作成したautopromotereattach",{"_index":435,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{}}}],["take",{"_index":2291,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["talk",{"_index":2438,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["tangl",{"_index":156,"docTitle":{"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/dev-essentials/0.1/how-to-guides/send-bundle":{},"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{},"docs/utils/0.1/official/tangle-certificate/overview":{},"docs/blueprints/0.1/introduction/overview":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["tanglebeatはzmq",{"_index":757,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["tangleディレクトリで、dock",{"_index":1535,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["target",{"_index":2459,"docTitle":{},"docBody":{"docs/iot/0.1/references/troubleshooting":{}}}],["task",{"_index":1717,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["tcp",{"_index":594,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{}}}],["tcp://p101.testnet.iota.cafe:14666",{"_index":637,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["tcp://p102.testnet.iota.cafe:14666",{"_index":638,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["tcp://p103.testnet.iota.cafe:14666",{"_index":639,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["tcp://p104.testnet.iota.cafe:14666",{"_index":640,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["tcp://zmq.devnet.iota.org:5556を別のノードのurl",{"_index":726,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node":{}}}],["tcp://zmq.spamnet.iota.org:5556",{"_index":285,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{}}}],["tcp://zmq.testnet.iota.org:5556",{"_index":275,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{}}}],["tcpのapi",{"_index":596,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["techniqu",{"_index":2086,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["technolog",{"_index":1928,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["temp.pi",{"_index":1584,"docTitle":{},"docBody":{"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{}}}],["temperatur",{"_index":2400,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["temporari",{"_index":2150,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["tempy.pi",{"_index":1587,"docTitle":{},"docBody":{"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{}}}],["term",{"_index":1896,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["termin",{"_index":2381,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/references/troubleshooting":{}}}],["test",{"_index":1651,"docTitle":{},"docBody":{"docs/utils/0.1/official/tangle-certificate/overview":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/iota-js/0.1/core/introduction/overview":{},"docs/iota-js/0.1/account-module/introduction/overview":{}}}],["testnet",{"_index":883,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/iri-configuration-options":{}}}],["tether",{"_index":1059,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["text",{"_index":2782,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{},"docs/smartcity/0.1/astropiota/how-to-guides/connect":{}}}],["thank",{"_index":1900,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{},"docs/contribution/0.1/style-guide":{}}}],["that'",{"_index":503,"docTitle":{},"docBody":{"docs/node-software/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["themes.jsファイル内で、作成したテーマをインポートしてthem",{"_index":1188,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["themesディレクトリに新しいjavascriptファイルを作成し、そのファイルにclassic.j",{"_index":1187,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["thetangle.org",{"_index":946,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{}}}],["thetangle.orgなどのタングルビジュアライゼーションweb",{"_index":537,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/zero-message-queue":{},"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node":{}}}],["they'r",{"_index":1154,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/connect-to-a-custom-node":{}}}],["thing",{"_index":1685,"docTitle":{"docs/iot/0.1/introduction/overview":{}},"docBody":{"docs/blueprints/0.1/data-marketplace/overview":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["thingy:52",{"_index":1710,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/architecture":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["threshold",{"_index":2631,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["through",{"_index":1491,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["tick",{"_index":1068,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["time",{"_index":1469,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/blueprints/0.1/track-and-trace/architecture":{},"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{},"docs/iot/0.1/references/troubleshooting":{},"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["timedeciderオラクルソースを使用して、cdaの有効期限が少なくとも30分離れているかどうかを確認します。この30",{"_index":2532,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["timeout_at",{"_index":2552,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/references/cda-advice":{},"docs/iota-java/0.1/account-module/references/cda-advice":{},"docs/iota-js/0.1/account-module/references/cda-advice":{}}}],["timeout_atフィールドのみを使用してcdaを作成した場合は、期限切れになっていなくてもゼロではない残高になるとすぐにiotaトークンを出金することができます。そのため、署名済みアドレスの再利用を避けるために、可能な限りmulti_useフィールドまたはexpected_amountフィールドのいずれかをtimeout_atフィールドと併用してcda",{"_index":2553,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/references/cda-advice":{},"docs/iota-java/0.1/account-module/references/cda-advice":{},"docs/iota-js/0.1/account-module/references/cda-advice":{}}}],["timeout_atフィールドの値が足りなくなったときに確実に新しいcda",{"_index":2557,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/references/cda-advice":{},"docs/iota-java/0.1/account-module/references/cda-advice":{},"docs/iota-js/0.1/account-module/references/cda-advice":{}}}],["timesource()メソッドでアカウントを作成した場合は、timeoutatフィールドでtimesourc",{"_index":2665,"docTitle":{},"docBody":{"docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda":{}}}],["timestamp",{"_index":347,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{}}}],["timeはトランザクションを開始したデバイス（携帯電話またはweb",{"_index":1869,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["tip",{"_index":581,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/tip-selection":{},"docs/node-software/0.1/iri/references/api-reference":{},"docs/node-software/0.1/iri/references/api-errors":{},"docs/node-software/0.1/iri/references/iri-configuration-options":{},"docs/node-software/0.1/chronicle/references/data-model":{},"docs/iota-js/0.1/core/introduction/overview":{}}}],["tmp/crontab.0qnktw/crontab",{"_index":2813,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/connect":{}}}],["token",{"_index":1133,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/send-a-transaction":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["took",{"_index":2307,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["tool",{"_index":1557,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["toolbox",{"_index":190,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/run-your-own-iri-node":{}}}],["toolchain",{"_index":2191,"docTitle":{"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{}},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/references/troubleshooting":{}}}],["toolchain'",{"_index":2238,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{}}}],["toolパッケージおよびregener",{"_index":1631,"docTitle":{},"docBody":{"docs/utils/0.1/official/proof-of-existance/overview":{}}}],["topic",{"_index":2989,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["topolog",{"_index":2029,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["topology,al",{"_index":2035,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["toy",{"_index":2111,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["tp",{"_index":995,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["tpsiriノードを介した1",{"_index":448,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/glossary":{}}}],["tpsは設定したtp",{"_index":1020,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/send-spam":{}}}],["trace",{"_index":1669,"docTitle":{},"docBody":{"docs/blueprints/0.1/introduction/overview":{},"docs/blueprints/0.1/track-and-trace/overview":{},"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["track",{"_index":1668,"docTitle":{},"docBody":{"docs/blueprints/0.1/introduction/overview":{},"docs/blueprints/0.1/track-and-trace/overview":{},"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["trade",{"_index":1894,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/deployment-and-testing":{},"docs/iot/0.1/introduction/overview":{}}}],["traffic",{"_index":2439,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["trangl",{"_index":1534,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["transact",{"_index":208,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-the-trinity-wallet":{},"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{},"docs/dev-essentials/0.1/how-to-guides/send-bundle":{},"docs/dev-essentials/0.1/how-to-guides/check-transaction-confirmation":{},"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{},"docs/node-software/0.1/introduction/overview":{},"docs/node-software/0.1/iri/concepts/tip-selection":{},"docs/node-software/0.1/iri/references/api-reference":{},"docs/wallets/0.1/trinity/how-to-guides/send-a-transaction":{},"docs/wallets/0.1/trinity/how-to-guides/receive-a-transaction":{}}}],["transaction.j",{"_index":140,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/getting-started/0.1/tutorials/send-iota-tokens":{}}}],["transaction_hash",{"_index":966,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/references/data-model":{}}}],["transactions_hash",{"_index":963,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/references/data-model":{}}}],["transactionsまでスクロールしてtrunk",{"_index":415,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/send-bundle":{}}}],["transfer",{"_index":1496,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/utils/0.1/official/tryte-compress/overview":{},"docs/iota-js/0.1/core/introduction/overview":{}}}],["transferオブジェクトを1つ作成します。address",{"_index":408,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/send-bundle":{}}}],["transit",{"_index":1161,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/perform-a-snapshot-transition":{}}}],["translate高階コンポーネント（hoc",{"_index":1190,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["transmit",{"_index":2023,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["transpar",{"_index":2078,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["transport",{"_index":1908,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["traversebundle(trunktransact",{"_index":2651,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["tree",{"_index":304,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/the-tangle":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["tri",{"_index":1082,"docTitle":{},"docBody":{"docs/compass/0.1/references/troubleshooting":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/references/troubleshooting":{}}}],["triniti",{"_index":199,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-the-trinity-wallet":{},"docs/wallets/0.1/introduction/overview":{},"docs/wallets/0.1/trinity/introduction/overview":{},"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{},"docs/wallets/0.1/trinity/how-to-guides/connect-to-a-custom-node":{},"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["trinity.app",{"_index":1124,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{}}}],["trinity.appファイルの署名を確認します。パスをtrinity.app",{"_index":1122,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{}}}],["trinityは公式のiotaウォレットであり、iota",{"_index":1313,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{}}}],["troubleshoot",{"_index":2224,"docTitle":{"docs/iot/0.1/references/troubleshooting":{}},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/references/troubleshooting":{}}}],["true",{"_index":423,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/check-transaction-confirmation":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["trueを返す場合、これ以上iota",{"_index":1446,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["trunk",{"_index":416,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/send-bundle":{}}}],["trunktransact",{"_index":359,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{},"docs/dev-essentials/0.1/concepts/reattach-rebroadcast-promote":{},"docs/dev-essentials/0.1/references/structure-of-a-bundle":{},"docs/node-software/0.1/iri/references/api-reference":{}}}],["trunktransactionフィールドの値によって接続されています。トランザクション0のtrunktransactionハッシュは、トランザクション1のトランザクションハッシュ（hash",{"_index":411,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/send-bundle":{}}}],["trust",{"_index":1924,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["trustanchor",{"_index":889,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/troubleshooting":{}}}],["truth",{"_index":1914,"docTitle":{},"docBody":{"docs/iot/0.1/introduction/overview":{}}}],["tryte",{"_index":2623,"docTitle":{},"docBody":{"docs/iota-js/0.1/core/introduction/overview":{}}}],["trytestotrit",{"_index":1396,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{}}}],["trytesコンバータをインポートします。次に、スクロールマーキーを有効にするためにsens",{"_index":2822,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/customize":{}}}],["trytesパラメータには、attachtotangl",{"_index":817,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{}}}],["trytesパラメータの値は有効でなければなりません。有効なトライトはattachtotangl",{"_index":841,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{}}}],["ttl",{"_index":2130,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["turn",{"_index":2256,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["tutori",{"_index":2106,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["two",{"_index":2030,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["tx",{"_index":762,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{},"docs/node-software/0.1/goshimmer/how-to-guides/subscribe-to-events":{}}}],["tx_tryteszmqイベントを介してiriノードからトランザクションを受け取ります。クロニクルがトランザクションを受信すると、elixirアンブレラプロジェクトを介してトランザクションを処理し、scylladb",{"_index":903,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/introduction/overview":{}}}],["tx_trytes配列で、zmqが有効になっている1つ以上のノードのurl",{"_index":925,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["type",{"_index":1457,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{}}}],["t定数を作成し、それをprop",{"_index":1191,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["u204324",{"_index":928,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["uart",{"_index":2128,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["uartアダプタがある場合は、\"usb",{"_index":2929,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["uartアダプタを使用します。cp2102はよく知られている安価なアダプタですが、sbcには一体型のアダプタがあるかもしれません。調べるには、使用しているsbc",{"_index":2926,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["ubuntu",{"_index":890,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/troubleshooting":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{},"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["ubuntuはnginxを起動します。再起動のたびにnginx",{"_index":684,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{}}}],["udev",{"_index":2448,"docTitle":{},"docBody":{"docs/iot/0.1/references/troubleshooting":{}}}],["udp",{"_index":2373,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{}}}],["uiで使用される配色で構成されています。すべてのテーマは、/src/shared/themes/ディレクトリ内の別々のjavascript",{"_index":1186,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["ui（wui）は、mamエクスプローラにアクセスして情報（例：特定の回収可能資産の現在の保管者と所在地）を取得するためのapiを実装しています。タングル上の情報は、オブジェクトリポジトリから取得した必要なチャネルルートアドレスにアクセスすることによって取得できます。足りない資産は同じgui",{"_index":1883,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["umbrella",{"_index":959,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/references/architecture":{},"docs/iot/0.1/introduction/overview":{}}}],["unconfirmedtransactionmessagesのみが含まれるようになります。型をチェックし、ストリームをオプションでラップして値を取得します。すでにディスクリプタをフィルタリングしているので、すべてのイベントはunconfirmedtransactionmessage型であることがわかります。そうでない場合、基本的なことが間違っており、nullpointerexcept",{"_index":765,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["unconfirmedtransactionmessage型のストリームができました。基本的に、フルノードが受信するすべてのメッセージを受け取り、どのアドレスが最も多く使用されたかを調べます。つまり、アドレスとカウンターがあれば十分です。簡単にするために、トランザクション内のすべてのアドレスを1つとして数えます。また入力しか保存できませんでした。二重に使用されているアドレスを検出するために、出力をフィルタリングすることもできます。出力をフィルタリングする場合は、valu",{"_index":767,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["undefin",{"_index":440,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{}}}],["under",{"_index":2323,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/read-sensor-data":{}}}],["understand",{"_index":2098,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["uninstal",{"_index":2454,"docTitle":{},"docBody":{"docs/iot/0.1/references/troubleshooting":{}}}],["uniqu",{"_index":2440,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["unit",{"_index":1131,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/send-a-transaction":{}}}],["unnecessari",{"_index":1991,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{}}}],["uno",{"_index":1979,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{}}}],["unreli",{"_index":2055,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["unsaf",{"_index":1295,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{}}}],["untar",{"_index":2231,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/install-arm-gcc-toolchain":{},"docs/iot/0.1/references/troubleshooting":{}}}],["until",{"_index":2311,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["up",{"_index":987,"docTitle":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{}},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{},"docs/iot/0.1/references/troubleshooting":{}}}],["updat",{"_index":1204,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/references/troubleshooting":{},"docs/smartcity/0.1/astropiota/how-to-guides/build":{},"docs/smartcity/0.1/astropiota/how-to-guides/connect":{},"docs/contribution/0.1/style-guide":{}}}],["updateitem()関数では、まずfirebaseオブジェクトリポジトリでitemidフィールドによって既存の資産が検索され、次にそのオブジェクトに関するすべての情報が新しいmam",{"_index":1890,"docTitle":{},"docBody":{"docs/blueprints/0.1/track-and-trace/architecture":{}}}],["upgrad",{"_index":2462,"docTitle":{},"docBody":{"docs/iot/0.1/references/troubleshooting":{}}}],["upload",{"_index":1844,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/deployment-and-testing":{}}}],["uploadをクリックして、メタデータをipf",{"_index":1846,"docTitle":{},"docBody":{"docs/blueprints/0.1/tangle-data-storage/deployment-and-testing":{}}}],["upper",{"_index":84,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{}}}],["upstreamディレクティブの詳細についてはnginx",{"_index":706,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{}}}],["upstreamブロックディレクティブで、ip_hash",{"_index":702,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{}}}],["upstreamブロックディレクティブで、iriノードのipアドレスごとに1つのserv",{"_index":703,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{}}}],["uptim",{"_index":1001,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["uriフォーマットは\"tcp://ipaddress:port",{"_index":839,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{}}}],["uriフォーマットは、\"tcp://ipaddress:port",{"_index":809,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{}}}],["url",{"_index":270,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/blueprints/0.1/doc-immutability/architecture":{},"docs/iota-js/0.1/mam/references/api-reference":{}}}],["url/root",{"_index":1771,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{}}}],["urlhttp&#x3a;//localhost:14265",{"_index":1078,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["urlまたはip",{"_index":1148,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/connect-to-a-custom-node":{},"docs/wallets/0.1/trinity/how-to-guides/outsource-pow":{}}}],["urlまたはipアドレスをconfig.ini",{"_index":650,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{}}}],["us",{"_index":826,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{},"docs/wallets/0.1/trinity/how-to-guides/connect-to-a-custom-node":{},"docs/blueprints/0.1/p2p-energy/overview":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{},"docs/iot/0.1/references/troubleshooting":{},"docs/iota-js/0.1/core/introduction/overview":{}}}],["us)を選択します。ロケール、タイムゾーン、およびwifi",{"_index":2794,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/run":{}}}],["usb",{"_index":1987,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/connect-programmer":{},"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{},"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["usb_port",{"_index":2218,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/read-sensor-data":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["usbバッテリーでraspberri",{"_index":2772,"docTitle":{},"docBody":{"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["usbポートは/dev/ttyusbxにあります。xがusbポートの番号です。正しいusbポートを見つける最も簡単な方法は、usbアダプタを接続することです。まず、l",{"_index":2942,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["usehttpsiriフラグがtru",{"_index":1260,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["usemodul",{"_index":2321,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/read-sensor-data":{}}}],["user",{"_index":1488,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["user'",{"_index":1472,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["user_account",{"_index":1304,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/get-started-with-the-grpc-api":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/wallets/0.1/hub/references/database-tables":{}}}],["user_account_bal",{"_index":1507,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/database-tables":{}}}],["user_address",{"_index":1317,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/query-the-database":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/wallets/0.1/hub/references/database-tables":{}}}],["user_address_bal",{"_index":1508,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/database-tables":{}}}],["useraccountbalanceev",{"_index":1436,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["useraccountbalanceeventtyp",{"_index":1437,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["useraddressbalanceev",{"_index":1438,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["useraddressbalancereason",{"_index":1439,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["usernam",{"_index":927,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{},"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["username>/documentation@&lt;your",{"_index":2965,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["usernameプレースホルダーを現在のlinux",{"_index":2315,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/install-go-on-sbc":{}}}],["userwithdraw",{"_index":1470,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["userwithdrawapi",{"_index":1370,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/integrate-hub":{}}}],["userwithdrawapi呼び出しを使用すると、iota",{"_index":1372,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/integrate-hub":{}}}],["userwithdrawcancel",{"_index":1474,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["userwithdrawcancelrepli",{"_index":1441,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["userwithdrawcancelrequest",{"_index":1440,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["userwithdrawrepli",{"_index":1443,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["userwithdrawrequest",{"_index":1442,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["userフィールドの値をユーザー名に置き換え、command、directory、stderr_logfile、stdout_logfil",{"_index":1266,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["userフラグは、bazelをシステムの$home/bin",{"_index":1235,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{}}}],["userフラグを使用してbazel",{"_index":1269,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["userフラグを使用して、アクティブユーザーの下にbazel",{"_index":1040,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{}}}],["usual",{"_index":2114,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["utils.iota.org",{"_index":1540,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["uuid",{"_index":1316,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/query-the-database":{},"docs/wallets/0.1/hub/how-to-guides/integrate-hub":{},"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["uuidを保存し、そのシードuuid",{"_index":1375,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/integrate-hub":{}}}],["uuid：seeduuid",{"_index":1212,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/introduction/overview":{}}}],["valu",{"_index":343,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/concepts/bundles-and-transactions":{}}}],["variabl",{"_index":2392,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["variant",{"_index":2310,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["variat",{"_index":2158,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["varieti",{"_index":2026,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["vc",{"_index":1174,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["vcc",{"_index":2426,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-to-serial-interface":{}}}],["vddio",{"_index":2406,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{}}}],["verif",{"_index":1759,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/architecture":{}}}],["verifi",{"_index":2384,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{}}}],["version",{"_index":608,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/references/troubleshooting":{},"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{},"docs/smartcity/0.1/astropiota/how-to-guides/build":{}}}],["version.ex",{"_index":1115,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{}}}],["version}にはバージョン全体（例えば1.7.0",{"_index":611,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["video",{"_index":2095,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["virtual",{"_index":2902,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["virtualbox",{"_index":2901,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["virtualboxで64ビットバージョンのubuntu",{"_index":2957,"docTitle":{},"docBody":{"docs/general/0.1/references/troubleshooting":{}}}],["vista",{"_index":1168,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["visual",{"_index":132,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/getting-started/0.1/tutorials/send-iota-tokens":{},"docs/dev-essentials/0.1/how-to-guides/convert-data-to-trytes":{},"docs/dev-essentials/0.1/how-to-guides/create-an-address":{},"docs/dev-essentials/0.1/how-to-guides/derive-addresses-from-private-keys":{},"docs/dev-essentials/0.1/how-to-guides/send-bundle":{},"docs/dev-essentials/0.1/how-to-guides/check-transaction-confirmation":{},"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{},"docs/node-software/0.1/iri/how-to-guides/interact-with-an-iri-node":{},"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node":{},"docs/node-software/0.1/goshimmer/how-to-guides/subscribe-to-events":{},"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/wallets/0.1/hub/how-to-guides/get-started-with-rest-api":{},"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{},"docs/utils/0.1/official/iota-area-codes/overview":{},"docs/utils/0.1/official/proof-of-existance/overview":{},"docs/utils/0.1/official/tangle-certificate/overview":{},"docs/utils/0.1/official/tryte-compress/overview":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/iota-go/0.1/account-module/how-to-guides/create-account":{},"docs/iota-java/0.1/account-module/how-to-guides/create-account":{},"docs/iota-js/0.1/account-module/how-to-guides/create-account":{},"docs/contribution/0.1/style-guide":{}}}],["vmバージョン22以降（elixir",{"_index":915,"docTitle":{},"docBody":{"docs/node-software/0.1/chronicle/how-to-guides/get-started":{}}}],["vm）またはlinuxサブシステムを使用できます。サブシステムを使用すると、vmのオーバーヘッドなしにlinuxを実行できます。あなたが上級ユーザーであれば、linuxツールをwindow",{"_index":2923,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["w",{"_index":2247,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["wait",{"_index":2371,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{}}}],["wake",{"_index":2050,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["walkeralpha",{"_index":574,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/tip-selection":{}}}],["wallet",{"_index":1077,"docTitle":{},"docBody":{"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["walletディレクトリでnpm",{"_index":1197,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["walletユーザーはすべてのユーザーのiotaトークンにアクセスできるため、取引所は保管のためにハブからコールドウォレットにiota",{"_index":1360,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["wan",{"_index":1815,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/deployment-and-testing":{}}}],["want",{"_index":2132,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/connect-programmer":{}}}],["warn",{"_index":61,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/getting-started/0.1/tutorials/send-iota-tokens":{},"docs/getting-started/0.1/references/quickstart-dev-handbook":{},"docs/dev-essentials/0.1/how-to-guides/create-an-address":{},"docs/client-libraries/0.1/introduction/overview":{},"docs/node-software/0.1/iri/how-to-guides/install-a-pow-proxy":{},"docs/node-software/0.1/iri/how-to-guides/update-the-iri":{},"docs/node-software/0.1/iri/references/api-reference":{},"docs/node-software/0.1/chronicle/how-to-guides/get-started":{},"docs/node-software/0.1/chronicle/references/api-reference":{},"docs/compass/0.1/how-to-guides/set-up-a-private-tangle":{},"docs/wallets/0.1/trinity/how-to-guides/create-deep-link":{},"docs/wallets/0.1/trinity/how-to-guides/connect-to-a-custom-node":{},"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{},"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/wallets/0.1/hub/how-to-guides/integrate-hub":{},"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/utils/0.1/community/mam-watcher/overview":{},"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{},"docs/blueprints/0.1/data-marketplace/architecture":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/blueprints/0.1/doc-immutability/architecture":{},"docs/blueprints/0.1/p2p-energy/architecture":{},"docs/blueprints/0.1/tangle-data-storage/architecture":{},"docs/blueprints/0.1/track-and-trace/architecture":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iota-go/0.1/core/introduction/overview":{},"docs/iota-go/0.1/account-module/introduction/overview":{},"docs/iota-go/0.1/account-module/how-to-guides/create-account":{},"docs/iota-go/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-go/0.1/account-module/how-to-guides/import-seed-state":{},"docs/iota-java/0.1/core/introduction/overview":{},"docs/iota-java/0.1/account-module/introduction/overview":{},"docs/iota-java/0.1/account-module/how-to-guides/create-account":{},"docs/iota-java/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-js/0.1/core/introduction/overview":{},"docs/iota-js/0.1/account-module/introduction/overview":{},"docs/iota-js/0.1/account-module/how-to-guides/create-account":{},"docs/iota-js/0.1/account-module/how-to-guides/create-and-manage-cda":{},"docs/iota-js/0.1/mam/introduction/overview":{},"docs/general/0.1/how-to-guides/expose-your-local-device":{},"docs/general/0.1/how-to-guides/setup-sbc":{},"docs/contribution/0.1/style-guide":{}}}],["warning:devnet",{"_index":1149,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/connect-to-a-custom-node":{},"docs/wallets/0.1/trinity/how-to-guides/outsource-pow":{}}}],["wasaddressspentfrom",{"_index":1479,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["wasaddressspentfromrepli",{"_index":1447,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["wasaddressspentfromrequest",{"_index":1445,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["waswithdrawalcancel",{"_index":1485,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["waswithdrawalcancelledrepli",{"_index":1448,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["waswithdrawalcancelledrequest",{"_index":1444,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/grpc-api-reference":{}}}],["watcher",{"_index":1519,"docTitle":{},"docBody":{"docs/utils/0.1/community/mam-watcher/overview":{}}}],["way",{"_index":2436,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["wearabl",{"_index":2110,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["weather",{"_index":1705,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/architecture":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["web",{"_index":158,"docTitle":{"docs/iota-js/0.1/mam/how-to-guides/create-mam-webpage":{}},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/getting-started/0.1/tutorials/send-iota-tokens":{},"docs/getting-started/0.1/references/quickstart-dev-handbook":{},"docs/dev-essentials/0.1/how-to-guides/convert-data-to-trytes":{},"docs/dev-essentials/0.1/how-to-guides/create-an-address":{},"docs/dev-essentials/0.1/how-to-guides/derive-addresses-from-private-keys":{},"docs/dev-essentials/0.1/how-to-guides/send-bundle":{},"docs/dev-essentials/0.1/how-to-guides/check-transaction-confirmation":{},"docs/dev-essentials/0.1/how-to-guides/confirm-pending-bundle":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{},"docs/node-software/0.1/iri/how-to-guides/interact-with-an-iri-node":{},"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node":{},"docs/compass/0.1/references/merkle-tree-compute-times":{},"docs/utils/0.1/community/one-command-tangle/overview":{},"docs/utils/0.1/official/iota-area-codes/overview":{},"docs/utils/0.1/official/proof-of-existance/overview":{},"docs/blueprints/0.1/data-marketplace/overview":{},"docs/blueprints/0.1/data-marketplace/architecture":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{},"docs/blueprints/0.1/doc-immutability/overview":{},"docs/blueprints/0.1/p2p-energy/architecture":{},"docs/blueprints/0.1/p2p-energy/deployment-and-testing":{},"docs/blueprints/0.1/tangle-data-storage/overview":{},"docs/blueprints/0.1/track-and-trace/overview":{},"docs/blueprints/0.1/track-and-trace/deployment-and-testing":{},"docs/iota-js/0.1/mam/introduction/overview":{},"docs/iota-js/0.1/mam/how-to-guides/create-public-channel":{},"docs/iota-js/0.1/mam/how-to-guides/create-restricted-channel":{},"docs/iota-js/0.1/mam/how-to-guides/create-mam-webpage":{}}}],["websit",{"_index":2261,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["webサイト、またはiota",{"_index":615,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-on-linux":{}}}],["webサイトではそのドキュメントのmd5/sha1文字列が表示されています。これは、ユーザーが自分のマシンでプログラムを実行する前に確認するドキュメントのハッシュ値です。面倒な作業なので、ほとんどの人はドキュメントのハッシュ値を確認しません。また、公式のweb",{"_index":1743,"docTitle":{},"docBody":{"docs/blueprints/0.1/doc-immutability/overview":{}}}],["webサイトなど、cda",{"_index":2555,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/references/cda-advice":{},"docs/iota-java/0.1/account-module/references/cda-advice":{},"docs/iota-js/0.1/account-module/references/cda-advice":{}}}],["webサイトには、iotaネットワークを使いやすくするためのユーティリティがあります。たとえば、webサイトを使用してiotaネットワークと対話したり、トランザクショントライトを圧縮したり、iota",{"_index":1541,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["webサイトには、mainnet",{"_index":123,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{}}}],["webサイトまたはeコマースプラットフォームにディープリンクを追加して、顧客にとってiota",{"_index":1142,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/create-deep-link":{}}}],["webサーバー：nginx",{"_index":1811,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/deployment-and-testing":{}}}],["webサービス（aws）r5",{"_index":862,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/best-practice":{}}}],["webブラウザで、http&#x3a;//localhost:4001にアクセスしてタングルユーティリティweb",{"_index":1553,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["webブラウザで、iriノードのurlにアクセスします。たとえば、作成したノードのドメイン名がprivatetangle.comの場合、https&#x3a;//privatetangle.com",{"_index":1572,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["webブラウザで、ルーターのipアドレスを入力します。このipアドレスはルーターに表示されているはずです。表示されない場合は、コマンドプロンプトで見つけます。あなたのルーターのipアドレスはgateway",{"_index":2884,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/expose-your-local-device":{}}}],["webブラウザに次のように表示されます。つまり、iriノードはポート443",{"_index":1573,"docTitle":{},"docBody":{"docs/utils/0.1/community/one-command-tangle/overview":{}}}],["webブラウザを開き、アドレスバーにlinuxサーバのip",{"_index":686,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/set-up-a-reverse-proxy":{}}}],["webブラウザを開き、アドレスバーに以下のように入力します。インターネットを通して自分のノードにアクセスしたいならば、localhostを自分のip",{"_index":1017,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/send-spam":{}}}],["webブラウザーに移動して127.0.0.1:8000",{"_index":1328,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{}}}],["webブラウザーを開き、コンソールに出力されたurl",{"_index":1649,"docTitle":{},"docBody":{"docs/utils/0.1/official/tangle-certificate/overview":{}}}],["weight",{"_index":149,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-nodejs":{},"docs/getting-started/0.1/tutorials/send-iota-tokens":{},"docs/wallets/0.1/hub/how-to-guides/recover-tokens":{}}}],["well",{"_index":506,"docTitle":{},"docBody":{"docs/node-software/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["went",{"_index":2369,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["wereaddressesspentfrom",{"_index":842,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/api-reference":{}}}],["whatの形での簡単な紹介は、シナリオです。シナリオを他のシナリオのコンテキストに配置するwhenセクション。たとえば、iriの実行のシナリオでは、最初にiri",{"_index":3005,"docTitle":{},"docBody":{"docs/contribution/0.1/style-guide":{}}}],["wi",{"_index":2169,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["wide",{"_index":1263,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/install-hub":{},"docs/wallets/0.1/hub/how-to-guides/install-the-signing-server":{}}}],["wifi",{"_index":1107,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/back-up-seed":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["wifi経由でインターネットに接続する場合は、次の手順で、my_ssidをネットワークの名前に置き換え、my_passwordをwifi",{"_index":2948,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["window",{"_index":65,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/getting-started/0.1/tutorials/run-your-own-iri-node":{},"docs/node-software/0.1/iri/how-to-guides/run-an-iri-node-in-docker":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{},"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{},"docs/iot/0.1/references/troubleshooting":{},"docs/smartcity/0.1/astropiota/how-to-guides/run":{},"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["windowsまたはlinux",{"_index":1166,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{}}}],["windowsまたはmacオペレーティングシステムでlinuxサーバを実行するには、仮想マシンをインストールして、仮想マシンでlinux",{"_index":2895,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["windowsまたはmac用のvirtualbox",{"_index":2896,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["windowsを使用している場合は、7",{"_index":2897,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["windowsを使用している場合は、ファイルを右クリックしてここで解凍をクリックします。mac",{"_index":2900,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["windows上のlinuxサーバへのssh",{"_index":2916,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["winternitzワンタイム署名（w",{"_index":456,"docTitle":{},"docBody":{"docs/dev-essentials/0.1/references/glossary":{}}}],["wire",{"_index":1995,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{}}}],["wireless",{"_index":2017,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["wirelessli",{"_index":2025,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/ipv6-mesh-network":{}}}],["withdefaultplugins()メソッドの両方を使用してアカウントを作成すると、デフォルトのtransf",{"_index":2508,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-account":{}}}],["withdraw",{"_index":1366,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/how-to-guides/create-a-demo-exchange":{},"docs/wallets/0.1/hub/references/restful-api-reference":{},"docs/wallets/0.1/hub/references/database-tables":{}}}],["withdrawal_cancel",{"_index":1498,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["withdrawn",{"_index":1482,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["withdrew",{"_index":1497,"docTitle":{},"docBody":{"docs/wallets/0.1/hub/references/restful-api-reference":{}}}],["within",{"_index":2301,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["without",{"_index":2152,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/connect-bosch-bme-280-bmp-280":{}}}],["withplugin",{"_index":2514,"docTitle":{},"docBody":{"docs/iota-go/0.1/account-module/how-to-guides/create-account":{}}}],["wl",{"_index":2266,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/setup-sbc":{}}}],["wlp3s0",{"_index":2936,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["work",{"_index":867,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/references/best-practice":{},"docs/node-software/0.1/iri/references/iri-configuration-options":{},"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/iot/0.1/concepts/flashing":{}}}],["workflow",{"_index":1783,"docTitle":{},"docBody":{"docs/blueprints/0.1/p2p-energy/architecture":{}}}],["work操作はすべてのデータパッケージに対して実行されることに注意してください。これはハードウェアによっては最大60",{"_index":1737,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["world",{"_index":207,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/send-a-zero-value-transaction-with-the-trinity-wallet":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{}}}],["write",{"_index":1974,"docTitle":{},"docBody":{"docs/iot/0.1/concepts/flashing":{}}}],["writer",{"_index":2391,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app":{}}}],["x",{"_index":239,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{},"docs/utils/0.1/official/iota-area-codes/overview":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["x86",{"_index":2956,"docTitle":{},"docBody":{"docs/general/0.1/references/troubleshooting":{}}}],["xcode",{"_index":1121,"docTitle":{},"docBody":{"docs/wallets/0.1/trinity/how-to-guides/verify-trinity-desktop":{}}}],["xdk",{"_index":1707,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/architecture":{},"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}],["xdkプラットフォーム用のxdk2mam",{"_index":254,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/quickstart-dev-handbook":{}}}],["yarn",{"_index":99,"docTitle":{},"docBody":{"docs/getting-started/0.1/tutorials/get-started":{},"docs/wallets/0.1/trinity/how-to-guides/develop-features-on-trinity":{},"docs/iota-js/0.1/core/introduction/overview":{},"docs/iota-js/0.1/account-module/introduction/overview":{},"docs/iota-js/0.1/mam/introduction/overview":{}}}],["you'll",{"_index":2105,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{}}}],["you'r",{"_index":2145,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-nrf52-microcontroller":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{},"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client":{},"docs/iot/0.1/how-to-guides/set-up-a-bluetooth-star-network":{},"docs/iot/0.1/how-to-guides/connect-a-I2C-sensor":{},"docs/iot/0.1/references/troubleshooting":{}}}],["you'v",{"_index":2104,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{},"docs/iot/0.1/how-to-guides/set-up-ipv6-ble-host-example":{}}}],["your_device_id",{"_index":2357,"docTitle":{},"docBody":{"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router":{}}}],["zero",{"_index":530,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/zero-message-queue":{},"docs/iot/0.1/introduction/overview":{},"docs/iot/0.1/how-to-guides/get-started-with-microcontrollers":{},"docs/iot/0.1/how-to-guides/setup-sbc":{},"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["zeromq",{"_index":725,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node":{},"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{},"docs/node-software/0.1/goshimmer/how-to-guides/subscribe-to-events":{}}}],["zeromqmessageparserを使用して、生のイベントメッセージをクラスインスタンスへパースします。すべてのzmqイベントメッセージは、protocol",{"_index":734,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["zeroの場合は115200",{"_index":2947,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/setup-sbc":{}}}],["zipの最新バージョンをダウンロードしてインストールします。macを使用している場合は、unarchiv",{"_index":2898,"docTitle":{},"docBody":{"docs/general/0.1/how-to-guides/set-up-virtual-machine":{}}}],["zmq",{"_index":272,"docTitle":{"docs/node-software/0.1/iri/references/zmq-events":{}},"docBody":{"docs/getting-started/0.1/references/iota-networks":{},"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node":{},"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{},"docs/node-software/0.1/iri/references/iri-configuration-options":{},"docs/node-software/0.1/iri/references/zmq-events":{},"docs/node-software/0.1/goshimmer/how-to-guides/subscribe-to-events":{}}}],["zmqwatcher.j",{"_index":1588,"docTitle":{},"docBody":{"docs/utils/0.1/community/raspberry-pi-pub-sub/overview":{}}}],["zmq、およびダッシュボードプラグインを有効にします。これらのプラグインを使用すると、スパムトランザクションを自分のノードに送信したり、着信トランザクションを監視したり、web",{"_index":1012,"docTitle":{},"docBody":{"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node":{}}}],["zmqでsnイベントを購読して、最近確定されたトランザクションをリッスンすることができます。sn",{"_index":724,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node":{}}}],["zmqでは、iri",{"_index":533,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/zero-message-queue":{}}}],["zmqに関する知識を活用して、他のイベントについてiri",{"_index":728,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node":{}}}],["zmqイベントを購読すると、zmqイベントが発生したときにiriノードがクライアントアプリケーションに通知するので、iota",{"_index":534,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/zero-message-queue":{}}}],["zmqイベントを購読すると、ノードからほぼリアルタイムでタングルデータを受信できます。このデータを処理するために、オープンソースのapach",{"_index":731,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["zmqイベントストリームのデータを使用して、過去1時間で最も使用された上位10",{"_index":760,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/flink-tangle-stream-processing":{}}}],["zmqソケットを作成し、それをzmq対応設定パラメーターがtrueに設定されているiri",{"_index":722,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node":{}}}],["zmqノードを使用して、iri",{"_index":274,"docTitle":{},"docBody":{"docs/getting-started/0.1/references/iota-networks":{}}}],["zmqポートが有効になっている場合は、トランザクション確定などのイベントを購読できます。これらのイベントにより、iota",{"_index":721,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/how-to-guides/subscribe-to-events-in-an-iri-node":{}}}],["zmq）は、クライアントがiri",{"_index":532,"docTitle":{},"docBody":{"docs/node-software/0.1/iri/concepts/zero-message-queue":{}}}],["z）で始まり、その後に任意の数の英字、数字（0",{"_index":1724,"docTitle":{},"docBody":{"docs/blueprints/0.1/data-marketplace/deployment-and-testing":{}}}]],"pipeline":["stemmer"]}

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouterPropTypes = __webpack_require__(4);

var _reactRouterPropTypes2 = _interopRequireDefault(_reactRouterPropTypes);

var _projects = __webpack_require__(8);

var _propTypes = __webpack_require__(3);

var _Heading = __webpack_require__(11);

var _Heading2 = _interopRequireDefault(_Heading);

var _Link = __webpack_require__(6);

var _Link2 = _interopRequireDefault(_Link);

var _ScrollToTop = __webpack_require__(98);

var _ScrollToTop2 = _interopRequireDefault(_ScrollToTop);

var _Text = __webpack_require__(12);

var _Text2 = _interopRequireDefault(_Text);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Footer = function (_React$Component) {
    _inherits(Footer, _React$Component);

    function Footer(props) {
        _classCallCheck(this, Footer);

        var _this = _possibleConstructorReturn(this, (Footer.__proto__ || Object.getPrototypeOf(Footer)).call(this, props));

        var projectParts = (0, _projects.parseProjectUrl)(_this.props.location.pathname);

        var projectLinks = (0, _projects.createProjectLinks)(_this.props.projects);

        var dynamicSections = [{
            heading: props.footerData.footerDocsSectionTitle,
            links: projectLinks
        }];

        _this.state = {
            projectLinks: (0, _projects.createProjectLinks)(_this.props.projects),
            currentProjectFolder: projectParts.projectFolder,
            footerSections: dynamicSections.concat(props.footerData.footerSections),
            footerStaticContent: props.footerData.footerStaticContent
        };

        _this.handleClick = _this.handleClick.bind(_this);
        return _this;
    }

    _createClass(Footer, [{
        key: 'handleClick',
        value: function handleClick(urlOrProjectFolder) {
            if (urlOrProjectFolder.startsWith('http')) {
                window.open(urlOrProjectFolder, '_blank');
            } else {
                this.props.history.push(this.state.projectLinks.find(function (pl) {
                    return pl.folder === urlOrProjectFolder;
                }).link);
            }
            this.setState({ currentProject: urlOrProjectFolder });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            return _react2.default.createElement(
                'footer',
                { className: 'footer' },
                _react2.default.createElement(
                    'div',
                    { className: 'footer__wrapper' },
                    _react2.default.createElement(
                        'div',
                        { className: 'footer-top-content' },
                        this.state.footerSections.map(function (_ref) {
                            var heading = _ref.heading,
                                links = _ref.links;
                            return _react2.default.createElement(
                                'section',
                                { key: heading, className: 'footer-top-content__wrapper' },
                                _react2.default.createElement(_Heading2.default, { level: 3, text: heading, className: 'footer-top-content__heading' }),
                                links.map(function (item) {
                                    return _react2.default.createElement(
                                        _react2.default.Fragment,
                                        { key: item.name },
                                        item.link && _react2.default.createElement(
                                            _Link2.default,
                                            { href: item.link, className: 'footer-top-content__link' },
                                            item.name
                                        )
                                    );
                                })
                            );
                        })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'footer-top-content__dropdown-wrapper' },
                        _react2.default.createElement(_Heading2.default, { level: 3, text: 'Jump to a section', className: 'footer-top-content__heading' }),
                        _react2.default.createElement(
                            'div',
                            { className: 'select-wrapper' },
                            _react2.default.createElement(
                                'select',
                                {
                                    onChange: function onChange(e) {
                                        return _this2.handleClick(e.target.value);
                                    },
                                    value: this.state.currentProjectFolder,
                                    className: 'select footer-top-content__dropdown' },
                                _react2.default.createElement(
                                    'option',
                                    { value: '' },
                                    'Select a topic'
                                ),
                                this.state.footerSections.map(function (_ref2) {
                                    var heading = _ref2.heading,
                                        links = _ref2.links;
                                    return _react2.default.createElement(
                                        'optgroup',
                                        { key: heading, label: heading },
                                        links.map(function (item) {
                                            return _react2.default.createElement(
                                                'option',
                                                { key: item.name, value: item.folder || item.link },
                                                item.name
                                            );
                                        })
                                    );
                                })
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'footer-bottom-content' },
                        _react2.default.createElement(
                            'section',
                            { className: 'footer-bottom-content__wrapper' },
                            this.state.footerStaticContent.address.map(function (text) {
                                return _react2.default.createElement(
                                    _Text2.default,
                                    { key: text, className: 'footer-bottom-content__item', html: true },
                                    text
                                );
                            })
                        ),
                        _react2.default.createElement(
                            'section',
                            { className: 'footer-bottom-content__wrapper legal' },
                            this.state.footerStaticContent.legal.map(function (text) {
                                return _react2.default.createElement(
                                    _Text2.default,
                                    { key: text, className: 'footer-bottom-content__item', html: true },
                                    text
                                );
                            })
                        ),
                        _react2.default.createElement(
                            'section',
                            { className: 'footer-bottom-content__wrapper copyright' },
                            this.state.footerStaticContent.copyright.map(function (text) {
                                return _react2.default.createElement(
                                    _Text2.default,
                                    { key: text, className: 'footer-bottom-content__item', html: true },
                                    text
                                );
                            })
                        ),
                        _react2.default.createElement(_ScrollToTop2.default, null)
                    )
                )
            );
        }
    }]);

    return Footer;
}(_react2.default.Component);

Footer.propTypes = {
    footerData: _propTypes.FooterDataPropTypes,
    projects: _propTypes.ProjectsPropTypes.isRequired,
    history: _reactRouterPropTypes2.default.history,
    location: _reactRouterPropTypes2.default.location
};
exports.default = Footer;

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ScrollToTop = function ScrollToTop() {

    var onScrollToTop = function onScrollToTop() {
        var target = document.querySelector('#root');
        target.scrollIntoView({ behavior: 'smooth', block: 'start' });
    };

    return _react2.default.createElement('button', {
        className: 'scroll-to-top',
        onClick: onScrollToTop });
};

exports.default = ScrollToTop;

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = __webpack_require__(2);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactStyleProptype = __webpack_require__(26);

var _reactStyleProptype2 = _interopRequireDefault(_reactStyleProptype);

var _ClickOutside = __webpack_require__(37);

var _ClickOutside2 = _interopRequireDefault(_ClickOutside);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DropSelector = function (_React$PureComponent) {
    _inherits(DropSelector, _React$PureComponent);

    function DropSelector(props) {
        _classCallCheck(this, DropSelector);

        var _this = _possibleConstructorReturn(this, (DropSelector.__proto__ || Object.getPrototypeOf(DropSelector)).call(this, props));

        _this.state = {
            isExpanded: false
        };

        _this.handleExpand = _this.handleExpand.bind(_this);
        return _this;
    }

    _createClass(DropSelector, [{
        key: 'handleExpand',
        value: function handleExpand() {
            this.setState({ isExpanded: !this.state.isExpanded });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            return _react2.default.createElement(
                _ClickOutside2.default,
                { onClickOutside: this.state.isExpanded ? this.handleExpand : undefined },
                _react2.default.createElement(
                    'div',
                    { className: (0, _classnames2.default)('drop-selector', { 'drop-selector__expanded': this.state.isExpanded }),
                        style: this.props.style },
                    _react2.default.createElement(
                        'div',
                        { className: 'drop-selector-title', onClick: this.handleExpand },
                        _react2.default.createElement(
                            'div',
                            { className: 'drop-selector-title__text' },
                            this.props.currentName
                        ),
                        _react2.default.createElement('div', { className: 'drop-selector-title__icon' })
                    ),
                    _react2.default.createElement(
                        'ul',
                        { className: 'drop-selector-list' },
                        this.props.items.map(function (item) {
                            return _react2.default.createElement(
                                'li',
                                { key: item.link, className: (0, _classnames2.default)('drop-selector-list-item', { 'drop-selector-list-item__selected': item.name === _this2.props.currentName }) },
                                _react2.default.createElement(
                                    'a',
                                    { href: item.link },
                                    item.name
                                )
                            );
                        })
                    )
                )
            );
        }
    }]);

    return DropSelector;
}(_react2.default.PureComponent);

DropSelector.propTypes = {
    items: _propTypes2.default.arrayOf(_propTypes2.default.shape({
        name: _propTypes2.default.string.isRequired,
        link: _propTypes2.default.string.isRequired
    })),
    currentName: _propTypes2.default.string,
    style: _reactStyleProptype2.default
};
exports.default = DropSelector;

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _projects = __webpack_require__(8);

var _propTypes3 = __webpack_require__(3);

var _Link = __webpack_require__(6);

var _Link2 = _interopRequireDefault(_Link);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Navigator = function (_React$Component) {
    _inherits(Navigator, _React$Component);

    function Navigator(props) {
        _classCallCheck(this, Navigator);

        var _this = _possibleConstructorReturn(this, (Navigator.__proto__ || Object.getPrototypeOf(Navigator)).call(this, props));

        _this.state = {
            nextTitle: '',
            nextUrl: '',
            previousTitle: '',
            previousUrl: ''
        };
        return _this;
    }

    _createClass(Navigator, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var projectUrlParts = (0, _projects.parseProjectUrl)(this.props.pathname);
            var nextIndexItem = (0, _projects.getNextPage)(projectUrlParts, this.props.projects);
            var previousIndexItem = (0, _projects.getPreviousPage)(projectUrlParts, this.props.projects);

            this.setState({
                nextTitle: nextIndexItem ? nextIndexItem.name.replace(/\//g, ' / ') : '',
                nextUrl: nextIndexItem ? nextIndexItem.link : '',
                previousTitle: previousIndexItem ? previousIndexItem.name.replace(/\//g, ' / ') : '',
                previousUrl: previousIndexItem ? previousIndexItem.link : ''
            });
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'section',
                { className: 'navigator' },
                _react2.default.createElement(
                    _Link2.default,
                    { href: this.state.previousUrl, className: 'navigator__back', disabled: !this.state.previousUrl },
                    _react2.default.createElement(
                        'div',
                        { className: 'navigator__label' },
                        '\u524D\u3078'
                    ),
                    _react2.default.createElement(
                        'span',
                        { className: 'navigator__title' },
                        this.state.previousTitle
                    )
                ),
                _react2.default.createElement(
                    _Link2.default,
                    { href: this.state.nextUrl, className: 'navigator__next', disabled: !this.state.nextUrl },
                    _react2.default.createElement(
                        'div',
                        { className: 'navigator__label' },
                        '\u6B21\u3078'
                    ),
                    _react2.default.createElement(
                        'span',
                        { className: 'navigator__title' },
                        this.state.nextTitle
                    )
                )
            );
        }
    }]);

    return Navigator;
}(_react2.default.Component);

Navigator.propTypes = {
    projects: _propTypes3.ProjectsPropTypes,
    pathname: _propTypes2.default.string
};
exports.default = Navigator;

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _projects = __webpack_require__(8);

var _propTypes3 = __webpack_require__(3);

var _Link = __webpack_require__(6);

var _Link2 = _interopRequireDefault(_Link);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SubHeader = function (_React$Component) {
    _inherits(SubHeader, _React$Component);

    function SubHeader(props) {
        _classCallCheck(this, SubHeader);

        var _this = _possibleConstructorReturn(this, (SubHeader.__proto__ || Object.getPrototypeOf(SubHeader)).call(this, props));

        _this.state = {
            currProject: '',
            currTitle: '',
            nextTitle: '',
            nextUrl: '',
            previousTitle: '',
            previousUrl: ''
        };
        return _this;
    }

    _createClass(SubHeader, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var projectUrlParts = (0, _projects.parseProjectUrl)(this.props.pathname);
            var nextIndexItem = (0, _projects.getNextPage)(projectUrlParts, this.props.projects);
            var previousIndexItem = (0, _projects.getPreviousPage)(projectUrlParts, this.props.projects);

            this.setState({
                currProject: (0, _projects.getProjectTitle)(projectUrlParts, this.props.projects),
                currTitle: (0, _projects.getDocumentTitle)(projectUrlParts, this.props.projects),
                nextTitle: nextIndexItem ? nextIndexItem.name : '',
                nextUrl: nextIndexItem ? nextIndexItem.link : '',
                previousTitle: previousIndexItem ? previousIndexItem.name : '',
                previousUrl: previousIndexItem ? previousIndexItem.link : ''
            });
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'section',
                { className: 'sub-header__wrapper' },
                _react2.default.createElement(
                    'section',
                    { className: 'sub-header' },
                    _react2.default.createElement(
                        'span',
                        { className: 'sub-header__title' },
                        this.state.currProject
                    ),
                    _react2.default.createElement(
                        'section',
                        { className: 'sub-header__body' },
                        _react2.default.createElement(_Link2.default, { href: this.state.previousUrl, className: 'arrow-button arrow-button--left', disabled: !this.state.previousUrl }),
                        _react2.default.createElement(
                            'span',
                            { className: 'sub-header__bottom-title' },
                            this.state.currTitle
                        ),
                        _react2.default.createElement(_Link2.default, { href: this.state.nextUrl, className: 'arrow-button arrow-button--right', disabled: !this.state.nextUrl })
                    )
                )
            );
        }
    }]);

    return SubHeader;
}(_react2.default.Component);

SubHeader.propTypes = {
    projects: _propTypes3.ProjectsPropTypes,
    pathname: _propTypes2.default.string
};
exports.default = SubHeader;

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactRouterPropTypes = __webpack_require__(4);

var _reactRouterPropTypes2 = _interopRequireDefault(_reactRouterPropTypes);

var _classnames = __webpack_require__(2);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _scroll = __webpack_require__(36);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TableOfContents = function (_React$PureComponent) {
    _inherits(TableOfContents, _React$PureComponent);

    function TableOfContents(props) {
        _classCallCheck(this, TableOfContents);

        var _this = _possibleConstructorReturn(this, (TableOfContents.__proto__ || Object.getPrototypeOf(TableOfContents)).call(this, props));

        _this.state = {
            activeTarget: undefined,
            filteredItems: _this.props.items
        };
        return _this;
    }

    _createClass(TableOfContents, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.handleScroll = this.handleScroll.bind(this);
            this.handleClick = this.handleClick.bind(this);

            document.addEventListener('scroll', this.handleScroll);
            window.addEventListener('resize', this.handleScroll);
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps) {
            var _this2 = this;

            if (this.props.items.length !== prevProps.items.length || !this.targets) {
                var headingCounters = {};

                var filteredItems = this.props.items;
                if (filteredItems.length > 30) {
                    filteredItems = filteredItems.filter(function (i) {
                        return i.level <= 2;
                    });
                }

                this.targets = filteredItems.map(function (item) {
                    var id = item.link;

                    if (headingCounters[id] === undefined) {
                        headingCounters[id] = -1;
                    }
                    headingCounters[id]++;
                    if (headingCounters[id] > 0) {
                        id = id + '_' + headingCounters[id];
                    }

                    item.link = id;

                    var target = document.getElementById(item.link.substring(1));
                    if (!target) {
                        // eslint-disable-next-line no-console
                        console.error('Unable to find TOC link \'' + item.link.substring(1) + '\' in content');
                    }

                    return target;
                }).filter(function (t) {
                    return t !== undefined && t !== null;
                });

                this.setState({
                    filteredItems: filteredItems
                }, function () {
                    _this2.handleScroll();
                    var defaultTarget = _this2.props.history.location && _this2.props.history.location.hash;
                    if (defaultTarget) {
                        var elem = document.querySelector(defaultTarget);
                        if (elem) {
                            (0, _scroll.scrollIntoView)(elem);
                        }
                    }
                });
            }
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            document.removeEventListener('scroll', this.handleScroll);
            window.removeEventListener('resize', this.handleScroll);
        }
    }, {
        key: 'handleScroll',
        value: function handleScroll() {
            if (this.targets && this.targets.length > 0) {
                var activeTarget = this.targets[0].id;
                var scrollTop = (0, _scroll.currentScrollTop)();

                for (var i = 0; i < this.targets.length; i++) {
                    if (scrollTop >= this.targets[i].offsetTop - 200) {
                        activeTarget = this.targets[i].id;
                    }
                }

                if (activeTarget !== this.state.activeTarget) {
                    this.setState({
                        activeTarget: activeTarget
                    });
                }
            }
        }
    }, {
        key: 'isElementInViewport',
        value: function isElementInViewport(el) {
            var rect = el.getBoundingClientRect();

            return rect.top >= 0 && rect.left >= 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && rect.right <= (window.innerWidth || document.documentElement.clientWidth);
        }
    }, {
        key: 'handleClick',
        value: function handleClick(e) {
            var _this3 = this;

            e.preventDefault();

            var href = e.target.getAttribute('href');
            var target = document.querySelector(href);
            if (!target) {
                // eslint-disable-next-line no-console
                console.error('Unable to find TOC link \'' + href + '\' in content');
            } else {
                (0, _scroll.scrollIntoView)(target, function () {
                    _this3.props.history.replace('' + _this3.props.history.location.pathname + _this3.props.history.location.search + (href === '#root' ? '' : href));
                });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this4 = this;

            return _react2.default.createElement(
                'div',
                { className: (0, _classnames2.default)('table-of-contents', { 'table-of-contents__compact': this.props.compact }) },
                _react2.default.createElement(
                    'h3',
                    { className: 'table-of-contents__section-title' },
                    this.props.title
                ),
                _react2.default.createElement(
                    'ul',
                    { className: 'table-of-contents__section' },
                    this.state.filteredItems.map(function (item, idx) {
                        return _react2.default.createElement(
                            'li',
                            { key: idx, className: (0, _classnames2.default)('table-of-contents-list-item', { 'table-of-contents-list-item__sub': item.level > 2 }, { 'table-of-contents-list-item__selected': _this4.state.activeTarget === item.link.substring(1) }) },
                            _react2.default.createElement(
                                'a',
                                { href: item.link, onClick: _this4.handleClick },
                                item.name
                            )
                        );
                    })
                )
            );
        }
    }]);

    return TableOfContents;
}(_react2.default.PureComponent);

TableOfContents.propTypes = {
    items: _propTypes2.default.arrayOf(_propTypes2.default.shape({
        name: _propTypes2.default.string.isRequired,
        link: _propTypes2.default.string.isRequired
    })),
    title: _propTypes2.default.string.isRequired,
    compact: _propTypes2.default.bool,
    history: _reactRouterPropTypes2.default.history
};
exports.default = TableOfContents;

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = __webpack_require__(2);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _projects = __webpack_require__(8);

var _propTypes3 = __webpack_require__(3);

var _Link = __webpack_require__(6);

var _Link2 = _interopRequireDefault(_Link);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TreeMenu = function (_React$Component) {
    _inherits(TreeMenu, _React$Component);

    function TreeMenu(props) {
        _classCallCheck(this, TreeMenu);

        var _this = _possibleConstructorReturn(this, (TreeMenu.__proto__ || Object.getPrototypeOf(TreeMenu)).call(this, props));

        _this.state = {
            sections: []
        };
        return _this;
    }

    _createClass(TreeMenu, [{
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps) {
            if (this.props.menuItems !== prevProps.menuItems) {
                this.setState({
                    sections: (0, _projects.buildItemTree)(this.props.menuItems, this.props.highlightedItem)
                });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var sections = this.state.sections;

            return _react2.default.createElement(
                'div',
                { className: 'tree-menu' },
                sections.map(function (section, idx) {
                    return _react2.default.createElement(
                        _react2.default.Fragment,
                        { key: idx },
                        section.type === 'section-link' && _react2.default.createElement(
                            'h3',
                            {
                                className: (0, _classnames2.default)('tree-menu__section-title') },
                            _react2.default.createElement(
                                _Link2.default,
                                { to: section.link, target: section.link.startsWith('http') ? '_blank' : undefined },
                                section.name
                            )
                        ),
                        section.type === 'section-header' && _react2.default.createElement(
                            _react2.default.Fragment,
                            null,
                            _react2.default.createElement(
                                'h3',
                                { className: (0, _classnames2.default)('tree-menu__section-title') },
                                section.name
                            ),
                            _react2.default.createElement(
                                'ul',
                                { className: (0, _classnames2.default)('tree-menu__section') },
                                section.items.map(function (item, idx2) {
                                    return _react2.default.createElement(
                                        _react2.default.Fragment,
                                        { key: idx2 },
                                        _react2.default.createElement(
                                            'li',
                                            {
                                                className: (0, _classnames2.default)('tree-menu__section-item', { 'tree-menu__section-item--selected': item.selected })
                                            },
                                            item.type === 'section-header-item' && _react2.default.createElement(
                                                _Link2.default,
                                                { href: item.link, target: item.link.startsWith('http') ? '_blank' : undefined },
                                                item.name
                                            ),
                                            item.type === 'section-header-sub' && _react2.default.createElement(
                                                _react2.default.Fragment,
                                                null,
                                                _react2.default.createElement(
                                                    _Link2.default,
                                                    { href: item.items[0].link, target: item.items[0].link.startsWith('http') ? '_blank' : undefined },
                                                    item.name,
                                                    _react2.default.createElement(
                                                        'span',
                                                        { className: 'tree-menu__section-item-superscript' },
                                                        item.items.length > 1 ? ' [' + item.items.length + ']' : ''
                                                    )
                                                ),
                                                item.selected && _react2.default.createElement(
                                                    'ul',
                                                    { className: 'tree-menu__section-item-sub' },
                                                    item.items.map(function (child, idx3) {
                                                        return _react2.default.createElement(
                                                            'li',
                                                            { key: idx3,
                                                                className: (0, _classnames2.default)('tree-menu__section-item-sub-child', { 'tree-menu__section-item-sub-child--selected': child.selected })
                                                            },
                                                            _react2.default.createElement(
                                                                _Link2.default,
                                                                { href: child.link, target: child.link.startsWith('http') ? '_blank' : undefined },
                                                                child.name
                                                            )
                                                        );
                                                    })
                                                )
                                            )
                                        )
                                    );
                                })
                            )
                        )
                    );
                })
            );
        }
    }]);

    return TreeMenu;
}(_react2.default.Component);

TreeMenu.propTypes = {
    menuItems: _propTypes3.ContentMenuItemsPropTypes.isRequired,
    highlightedItem: _propTypes2.default.string.isRequired
};
exports.default = TreeMenu;

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var VersionPicker = function (_React$Component) {
    _inherits(VersionPicker, _React$Component);

    function VersionPicker(props) {
        _classCallCheck(this, VersionPicker);

        return _possibleConstructorReturn(this, (VersionPicker.__proto__ || Object.getPrototypeOf(VersionPicker)).call(this, props));
    }

    _createClass(VersionPicker, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                versions = _props.versions,
                currentVersion = _props.currentVersion;

            return versions.length > 1 ? _react2.default.createElement(
                'div',
                { className: 'version-picker__wrapper' },
                _react2.default.createElement(
                    'div',
                    { className: 'version-picker' },
                    _react2.default.createElement('div', { className: 'left-column' }),
                    _react2.default.createElement(
                        'div',
                        { className: 'middle-column' },
                        _react2.default.createElement(
                            'div',
                            { className: 'version-picker__current' },
                            '' + (currentVersion === versions[versions.length - 1] ? 'You are viewing the latest version of this documentation' : 'There are newer versions of this documentation available')
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'right-column' },
                        _react2.default.createElement(
                            'div',
                            { className: 'version-picker-select__wrapper' },
                            _react2.default.createElement(
                                'select',
                                {
                                    className: 'version-picker__select',
                                    value: currentVersion,
                                    onChange: function onChange(e) {
                                        return _this2.props.onChange(e.target.value);
                                    } },
                                versions.map(function (version, indx) {
                                    return _react2.default.createElement(
                                        'option',
                                        { key: indx, value: version },
                                        'Version ',
                                        version
                                    );
                                })
                            )
                        )
                    )
                )
            ) : null;
        }
    }]);

    return VersionPicker;
}(_react2.default.Component);

VersionPicker.propTypes = {
    versions: _propTypes2.default.arrayOf(_propTypes2.default.string).isRequired,
    currentVersion: _propTypes2.default.string.isRequired,
    onChange: _propTypes2.default.func.isRequired
};
exports.default = VersionPicker;

/***/ }),
/* 105 */
/***/ (function(module, exports) {

module.exports = require("lunr");

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactStatic = __webpack_require__(5);

var _search = __webpack_require__(10);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SearchResult = function (_React$Component) {
    _inherits(SearchResult, _React$Component);

    function SearchResult(props) {
        _classCallCheck(this, SearchResult);

        return _possibleConstructorReturn(this, (SearchResult.__proto__ || Object.getPrototypeOf(SearchResult)).call(this, props));
    }

    _createClass(SearchResult, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var res = this.props.foundResult.length > 0 ? 'Showing results ' + (this.props.indexStart + 1) + ' to ' + (this.props.indexEnd + 1) + '.' : '';
            return _react2.default.createElement(
                'div',
                { className: 'search-result' },
                _react2.default.createElement(
                    'div',
                    { className: 'search-result__total' },
                    this.props.foundResult.length + ' documents found for "' + this.props.query + '". ' + res
                ),
                this.props.foundResult.slice(this.props.indexStart, this.props.indexEnd + 1).map(function (elm) {
                    return _react2.default.createElement(
                        'section',
                        { key: elm.id, className: 'search-result__item' },
                        _react2.default.createElement(
                            _reactStatic.Link,
                            { to: '/' + elm.id + '?' + (0, _search.constructSearchQuery)(_this2.props.query) + '&' + (0, _search.constructHighlights)(elm.matches), exact: true },
                            _react2.default.createElement(
                                'div',
                                { className: 'search-result-item__heading' },
                                elm.name
                            ),
                            _react2.default.createElement(
                                'div',
                                { className: 'search-result-item__link' },
                                '/' + elm.id
                            )
                        ),
                        _react2.default.createElement(
                            'p',
                            { className: 'text-paragraph' },
                            elm.summary
                        )
                    );
                })
            );
        }
    }]);

    return SearchResult;
}(_react2.default.Component);

SearchResult.propTypes = {
    foundResult: _propTypes2.default.arrayOf(_propTypes2.default.shape({
        id: _propTypes2.default.string,
        name: _propTypes2.default.string,
        summary: _propTypes2.default.string,
        matches: _propTypes2.default.arrayOf(_propTypes2.default.string)
    })),
    indexStart: _propTypes2.default.number,
    indexEnd: _propTypes2.default.number,
    query: _propTypes2.default.string
};
exports.default = SearchResult;

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _parallaxJs = __webpack_require__(108);

var _parallaxJs2 = _interopRequireDefault(_parallaxJs);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

__webpack_require__(109);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ParallaxContainer = function (_React$PureComponent) {
    _inherits(ParallaxContainer, _React$PureComponent);

    function ParallaxContainer() {
        _classCallCheck(this, ParallaxContainer);

        return _possibleConstructorReturn(this, (ParallaxContainer.__proto__ || Object.getPrototypeOf(ParallaxContainer)).apply(this, arguments));
    }

    _createClass(ParallaxContainer, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.parallaxInstance = new _parallaxJs2.default(this.parallaxEl, {});
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            return _react2.default.createElement(
                'div',
                { className: 'parallax', ref: function ref(el) {
                        return _this2.parallaxEl = el;
                    } },
                this.props.children
            );
        }
    }]);

    return ParallaxContainer;
}(_react2.default.PureComponent);

ParallaxContainer.propTypes = {
    children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node])
};
exports.default = ParallaxContainer;

/***/ }),
/* 108 */
/***/ (function(module, exports) {

module.exports = require("parallax-js");

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(7)(false);
// imports


// module
exports.push([module.i, ".parallax,.parallax>div{position:absolute;height:100%;width:100%;top:0;left:0;z-index:1;pointer-events:none}.parallax img{position:absolute;-webkit-box-shadow:10px 50px 50px rgba(0,0,0,.15);box-shadow:10px 50px 50px rgba(0,0,0,.15)}.parallax div:first-child img{top:70%;left:16%;-webkit-transform:rotate(12deg) scale(.8);-ms-transform:rotate(12deg) scale(.8);transform:rotate(12deg) scale(.8)}.parallax div:nth-child(2) img{top:20%;left:20%;-webkit-transform:rotate(-12deg);-ms-transform:rotate(-12deg);transform:rotate(-12deg)}.parallax div:nth-child(3) img{top:10%;left:0;-webkit-transform:rotate(60deg);-ms-transform:rotate(60deg);transform:rotate(60deg)}.parallax div:nth-child(4) img{top:30%;left:10%;-webkit-transform:rotate(8deg) scale(2);-ms-transform:rotate(8deg) scale(2);transform:rotate(8deg) scale(2)}.parallax div:nth-child(5) img{top:50%;left:70%;-webkit-transform:rotate(-12deg) scale(.8);-ms-transform:rotate(-12deg) scale(.8);transform:rotate(-12deg) scale(.8)}.parallax div:nth-child(6) img{top:60%;left:75%;-webkit-transform:rotate(12deg);-ms-transform:rotate(12deg);transform:rotate(12deg)}.parallax div:nth-child(7) img{top:20%;left:90%;-webkit-transform:rotate(-18deg) scale(2);-ms-transform:rotate(-18deg) scale(2);transform:rotate(-18deg) scale(2)}@media (max-width:980px){.parallax div:first-child img{left:-2%}.parallax div:nth-child(2) img{left:2%;top:50%}.parallax div:nth-child(3) img{left:-10%}.parallax div:nth-child(4) img{left:-5%}.parallax div:nth-child(5) img{left:90%}.parallax div:nth-child(6) img{left:85%}.parallax div:nth-child(7) img{left:95%}}@media (max-width:620px){.parallax div:first-child img,.parallax div:nth-child(2) img{display:none}.parallax div:nth-child(3) img{left:-10%;top:0}.parallax div:nth-child(4) img{display:none}.parallax div:nth-child(5) img{top:10%}.parallax div:nth-child(6) img{display:none}.parallax div:nth-child(7) img{left:40%;top:90%}}", ""]);

// exports


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(7)(false);
// imports


// module
exports.push([module.i, ".not-found{position:relative;width:100%;height:800px;overflow:hidden;margin:0 auto;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.not-found h1{font-size:140px;line-height:140px;color:#20a49d;font-weight:300;text-align:center;margin:110px 0 20px}.not-found nav{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center}.not-found .button{text-transform:none;border-color:#3f3f3f;color:#3f3f3f}.not-found .button:hover{text-decoration:none;border-color:#7d7d7d}.not-found h2{font-weight:600;font-size:22px;margin-bottom:25px;color:#3f3f3f}.not-found h2,.not-found p{line-height:32px;max-width:370px;text-align:center}.not-found p{font-weight:400;font-size:16px;margin-bottom:175px;color:#4f4f4f}.not-found aside{position:absolute;height:100%;width:100%;top:0;left:0;z-index:1;pointer-events:none;max-width:1495px;left:50%;-webkit-transform:translate(-50%);-ms-transform:translate(-50%);transform:translate(-50%)}@media (max-width:980px){.not-found h1{font-size:90px;line-height:90px;margin:0 0 20px}.not-found h2{font-size:16px;line-height:24px}}@media (max-width:620px){.not-found{height:auto;padding:100px 40px 160px;-webkit-box-sizing:border-box;box-sizing:border-box}.not-found p{margin-bottom:16px}.not-found .button{width:100%;text-align:center;-webkit-box-sizing:border-box;box-sizing:border-box}}", ""]);

// exports


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(7)(false);
// imports


// module
exports.push([module.i, "#root{min-height:100vh}", ""]);

// exports


/***/ })
/******/ ]);
});
//# sourceMappingURL=static.cdab080d.js.map