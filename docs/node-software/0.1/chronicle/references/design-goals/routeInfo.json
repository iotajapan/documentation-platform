{"path":"docs/node-software/0.1/chronicle/references/design-goals","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# Design goals\n\n**We develop Chronicle according to a set of design goals that allow it to fulfill use cases such as identity data.**\n\n## Data integrity goals\n\nData integrity in IOTA is verified through consensus. Data from Chronicle can be verified by querying a quorum of trusted nodes then comparing their results.\n\n## Security goals\n\nSecurity protections are added based on risk. Protections such as authorization, authentication, physical security, and encryption have been addressed, but cybersecurity is an ongoing process. For example, Chronicle nodes can be queried randomly so attackers would have a difficult time discovering which nodes are being queried. This helps to prevent targeted attacks on specific nodes.\n\nElixir and ScyllaDB have built-in protection, but securing the administrator accounts requires layers of security, including network security, server security, social engineering training, and internal controls.\n\n## Performance goals\n\nChronicle is distributed so it has no single point of failure. This avoids data loss and unavailability in case a node is not reachable.\n\nChronicle strives to save a large number of transactions in a short time frame.  For example, suppose 300,000 vehicles can send one transaction every 5 minutes.\nPast transactions should be retrieved within a time comparable to state of the art cloud solutions. Using the Chronicle API is the best way to search for transactions and retrieve data quickly.\n\n## Business goals\n\nOrganizations may offer a pay-per-request service. The initial price can be fixed then replaced by a fee based on fair market value.\n","title":"設計目標 | 参考文献 | クロニクル | ノードSW"}}
