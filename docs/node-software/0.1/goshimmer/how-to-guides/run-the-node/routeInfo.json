{"path":"docs/node-software/0.1/goshimmer/how-to-guides/run-the-node","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# GoShimmer ノードを実行する\n<!-- # Run a GoShimmer node -->\n\n**このガイドでは、GoShimmer ネットワークにノードをインストールして実行し、ネットワークをテストして、定期的な変更を最新の状態に保ちます。**\n<!-- **In this guide, you install and run a node on the GoShimmer network to test the network and keep up to date with regular changes.** -->\n\nノードを実行するには、次のオプションがあります。\n<!-- You have the following options for running a node: -->\n\n- [クイックスタート](#quickstart)\n<!-- - Quickstart -->\n- [ネイティブインストール](#native-start)\n<!-- - Native install -->\n\n## 前提条件\n<!-- ## Prerequisites -->\n\nノードを実行するには、次のものが必要です。\n<!-- To run a node, you need the following: -->\n\n- [Git](https://git-scm.com/downloads)\n- Goshimmer ノードを実行しているデバイスにポート14626（TCP/UDP）およびポート14666（TCP）を[ポート転送](/docs/general/0.1/how-to-guides/expose-your-local-device)する\n<!-- - [Forward ports](/docs/general/0.1/how-to-guides/expose-your-local-device) 14626(TCP/UDP) and 14666 (TCP) to the device that's running the node -->\n- パブリックな IP アドレス\n<!-- - A public IP address -->\n\n<a name=\"quickstart\"></a>\n## クイックスタート\n<!-- ## Quickstart -->\n\nこのセクションでは、GoShimmer GitHub リポジトリにあるビルド済みの実行可能ファイルを使用して、ネイティブファイルシステムでノードを実行します。\n<!-- In this section, you run a node on your native filesystem, using the pre-built executable file on the GoShimmer GitHub repository. -->\n\n1. [GoShimmer リリースページ](https://github.com/iotaledger/goshimmer/releases)に移動します．\n<!-- 1. Go to the [GoShimmer release page](https://github.com/iotaledger/goshimmer/releases) -->\n\n2. ご使用のオペレーティングシステム用の GoShimmer ファイルをダウンロードします．\n<!-- 2. Download the GoShimmer file for your operating system -->\n\n3. オペレーティングシステムに応じて、以下のコマンドのいずれかを使用して、ビルド済みの `goshimmer` ファイルを実行します。\n  <!-- 3. Use one of the following commands to execute the pre-built `goshimmer` file, depending on your operating system: -->\n\n    ```bash\n    # Linux and macOS\n    ./goshimmer --node.enablePlugins \"spammer\",\"graph\"\n    # Windows\n    .\\goshimmer --node.enablePlugins \"spammer\",\"graph\"\n    ```\n\n    :::info:\n    `-h` または `--help` フラグを付けてファイルを実行すると、すべての構成オプションのリストを表示できます。\n    :::\n    <!-- :::info: -->\n    <!-- You can run the file with the `-h` or `--help` flag to see a list of all configuration options. -->\n    <!-- ::: -->\n\n:::success:おめでとうございます:tada:\nGoShimmer ノードを実行しています。\n:::\n<!-- :::success:Congratulations :tada: -->\n<!-- You're now running a GoShimmer node. -->\n<!-- ::: -->\n\n![GoShimmer status screen](/assets/docs/node-software/0.1/goshimmer/images/goshimmer.png)\n\nステータススクリーンの右上隅に次の統計情報が表示されます．\n<!-- The status screen displays the following statistics in the top-right corner: -->\n\n- **TPS：**1秒あたりのトランザクション数．2つのカテゴリに分けられます．**received** トランザクションは，ノードがその台帳に追加したばかりのトランザクションです．**new** トランザクションは凝固トランザクションです．\n<!-- - **TPS:** The number of transactions per second, which are separated into two categories. The **received** transactions are those that the node has just appended to its ledger. The **new** transactions are solid transactions. -->\n- **Node ID：**固有の ID を付与するノードの公開鍵．\n<!-- - **Node ID:** The node's public key that gives it a unique identity -->\n- **Neighbors：**ノードが接続している隣接ノードの数．すべてのノードは最大8つの隣接ノードを持つことができます．各ノードは接続する4つの隣接ノードを選択し，自分を選択した他の4つの隣接ノードからの着信接続を受け入れます．\n<!-- - **Neighbors:** The number of neighbors that the node is connected to. All nodes can have a maximum of 8 neighbors. Each node chooses 4 neighbors to connect to and accepts incoming connections from 4 other neighbors that chose it. -->\n- **Known peers：**ネットワーク内のノードの総数．現時点では，**neighbor** ノードの数は **total** ノードの数と同じです．ネットワークがシャーディングを許可すると，**neighbor** ノードはシャード内にあるノードになります．\n<!-- - **Known peers:** The total number of nodes in the network. At the moment, the number of **neighborhood** nodes is the same as the number of **total** nodes. When the network allows sharding, the **neighborhood** nodes will be those that are in the node's shard. -->\n- **Uptime：**ノードが稼働していた合計時間．\n<!-- - **Uptime:** The total amount of time during which the node has been running -->\n\n:::info:\n`accepted` 隣接ノードがない場合は，`autopeering` TCP/UDP ポート（14626）をデバイスに転送していることを確認します．\n:::\n<!-- :::info: -->\n<!-- If you don't have any accepted neighbors, make sure that you've forwarded your `autopeering` TCP/UDP port (14626) to your device. -->\n<!-- ::: -->\n\n<a name=\"native-install\"></a>\n## ネイティブインストール\n<!-- ## Native install -->\n\nこのセクションでは、GoShimmer 実行可能ファイルをソースからビルドして実行します。\n<!-- In this section, you build the GoShimmer executable file from source and run it. -->\n\n### 前提条件\n<!-- ### Prerequisites -->\n\nこのガイドを完成するには，次のものが必要です．\n<!-- To complete this guide, you need the following: -->\n\n- 少なくとも Go プログラミング言語のバージョン1.13（最新バージョンを推奨）\n<!-- - At least version 1.13 of the Go programming language (we recommend the latest version) -->\n- GCC：macOS の場合、[Homebrew](https://brew.sh/)を使用して GCC をインストールできます（`brew install gcc`）。Windows の場合、[TDM-GCC をインストール](http://tdm-gcc.tdragon.net/download)できます。Linux（Ubuntu 18.04）の場合、[build-essential](https://linuxize.com/post/how-to-install-gcc-compiler-on-ubuntu-18-04/) パッケージから GCC をインストールできます。\n<!-- - GCC: For macOS, you can install GCC using [Homebrew](https://brew.sh/) (`brew install gcc`). For Windows, you can [install TDM-GCC](http://tdm-gcc.tdragon.net/download). For Linux (Ubuntu 18.04), you can [install GCC from the `build-essential` package](https://linuxize.com/post/how-to-install-gcc-compiler-on-ubuntu-18-04/). -->\n\n### GoShimmer 実行可能ファイルをビルドして実行する\n<!-- ### Build and run the GoShimmer executable -->\n\n1. コマンドラインインターフェイスで、`GOPATH` 環境変数を確認します．\n  <!-- 1. In the command-line interface, check your `GOPATH` environment variable -->\n\n    ```bash\n    go env GOPATH\n    ```\n\n    :::info:\n    このディレクトリは `$GOPATH` と呼ばれています．\n    :::\n    <!-- :::info: -->\n    <!-- This directory is called `$GOPATH`. -->\n    <!-- ::: -->\n\n2. `$GOPATH` ではない場所に `goshimmer` リポジトリをクローンします．\n  <!-- 2. Clone the `goshimmer` repository anywhere outside of `$GOPATH` -->\n\n    ```bash\n    git clone https://github.com/iotaledger/goshimmer.git\n    ```\n\n3. `goshimmer` ディレクトリに移動し、サブモジュールをダウンロードします。\n  <!-- 3. Change into the `goshimmer` directory and download the submodules -->\n\n    ```bash\n    cd goshimmer\n    git submodule init\n    git submodule update\n    ```\n\n4. オペレーティングシステムに応じて、次のコマンドのいずれかを使用して実行可能ファイルをビルドします。\n  <!-- 4. Use one of the following commands to build your executable file, depending on your operating system -->\n\n    ```bash\n    # Linux and macOS\n    go build -o goshimmer\n    # Windows\n    go build -o  goshimmer.exe\n    ```\n\n    これで、実行する必要がある `goshimmer` というファイルが作成されました。\n    <!-- Now, you have a file called `goshimmer` that you need to execute. -->\n\n5. `config.json` ファイルを開き、`enablePlugins` フィールドを次のものに置き換えて、スパマー API エンドポイントとタングルビジュアライザーを有効にします。\n  <!-- 5. Open the `config.json` file and replace the `enablePlugins` field with the following to enable the spammer API endpoint and the Tangle visualizer -->\n\n    ```bash\n    \"enablePlugins\":[\"spammer\", \"graph\"]\n    ```\n\n    :::info:\n    `-h` または `--help` フラグを付けてファイルを実行すると、すべての構成オプションのリストを表示できます。\n    :::\n    <!-- :::info: -->\n    <!-- You can run the file with the `-h` or `--help` flag to see a list of all configuration options. -->\n    <!-- ::: -->\n\n6. オペレーティングシステムに応じて、次のコマンドのいずれかを使用して `goshimmer` ファイルを実行します。\n  <!-- 6. Use one of the following commands to execute the `goshimmer` file, depending on your operating system: -->\n\n    ```bash\n    # Linux and macOS\n    ./goshimmer\n    # Windows\n    goshimmer\n    ```\n\n    :::info:\n    `permission denied` エラーが表示された場合は、管理者としてファイルを実行してみてください。\n    :::\n    <!-- :::info: -->\n    <!-- If you see a `permission denied` error, try executing the file as an administrator. -->\n    <!-- ::: -->\n\n:::success:おめでとうございます:tada:\nGoShimmer ノードを実行しています．\n:::\n<!-- :::success:Congratulations :tada: -->\n<!-- You're now running a GoShimmer node. -->\n<!-- ::: -->\n\n![GoShimmer status screen](/assets/docs/node-software/0.1/goshimmer/images/goshimmer.png)\n\nステータススクリーンの右上隅に次の統計情報が表示されます．\n<!-- The status screen displays the following statistics in the top-right corner: -->\n\n- **TPS：**1秒あたりのトランザクション数．2つのカテゴリに分けられます．**received** トランザクションは，ノードがその台帳に追加したばかりのトランザクションです．**new** トランザクションは凝固トランザクションです．\n<!-- - **TPS:** The number of transactions per second, which are separated into two categories. The **received** transactions are those that the node has just appended to its ledger. The **new** transactions are solid transactions. -->\n- **Node ID：**固有の ID を付与するノードの公開鍵．\n<!-- - **Node ID:** The node's public key that gives it a unique identity -->\n- **Neighbors：**ノードが接続している隣接ノードの数．すべてのノードは最大8つの隣接ノードを持つことができます．各ノードは接続する4つの隣接ノードを選択し，自分を選択した他の4つの隣接ノードからの着信接続を受け入れます．\n<!-- - **Neighbors:** The number of neighbors that the node is connected to. All nodes can have a maximum of 8 neighbors. Each node chooses 4 neighbors to connect to and accepts incoming connections from 4 other neighbors that chose it. -->\n- **Known peers：**ネットワーク内のノードの総数．現時点では，**neighbor** ノードの数は **total** ノードの数と同じです．ネットワークがシャーディングを許可すると，**neighbor** ノードはシャード内にあるノードになります．\n<!-- - **Known peers:** The total number of nodes in the network. At the moment, the number of **neighborhood** nodes is the same as the number of **total** nodes. When the network allows sharding, the **neighborhood** nodes will be those that are in the node's shard. -->\n- **Uptime：**ノードが稼働していた合計時間．\n<!-- - **Uptime:** The total amount of time during which the node has been running -->\n\n:::info:\n受け入れた隣接ノードがない場合は，`autopeering` TCP/UDP ポート（14626）をデバイスに転送していることを確認します．\n:::\n<!-- :::info: -->\n<!-- If you don't have any accepted neighbors, make sure that you've forwarded your `autopeering` TCP/UDP port (14626) to your device. -->\n<!-- ::: -->\n\n## 次のステップ\n<!-- ## Next steps -->\n\nノードが稼働しているので，[ノードにスパムトランザクションを送信し](../how-to-guides/send-spam.md)，ノードが毎秒何トランザクションを処理できるかテストすることができます．\n<!-- Now that your node is running, you can [send it spam transactions](../how-to-guides/send-spam.md) to test how many transactions per second your node can process. -->\n\nGoShimmer ネットワークのタングルでトランザクションを確認するには、Web ブラウザで `http://127.0.0.1:8082` にアクセスしてビジュアライザーを開きます。\n<!-- To see the transactions in the GoShimmer network's Tangle, open the visualizer by going to `http://127.0.0.1:8082` in a web browser. -->\n\n![GoShimmer visualizer](/assets/docs/node-software/0.1/goshimmer/images/visualizer.png)\n","title":"GoShimmer ノードを実行する | ハウツーガイド | GoShimmer | ノードソフトウェア"}}
