{"path":"docs/iri/0.1/how-to-guides/run-an-iri-node-on-linux","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# Run an IRI node on a Linux server\n\n**When you run the IRI on a Linux server, it becomes a node that gives you direct access to an IOTA network. By running a node, you help the IOTA network to become more distributed by adding to the number of ledgers and validating your neighbors' transactions.**\n\n## Prerequisites\n\n* To run the IRI, your server must meet the following minimum requirements:\n    * 4GB RAM\n    * 64-bit processor\n    * A [public IP address](/docs/general/0.1/how-to-guides/expose-your-local-device) that's either static or connected to a dynamic DNS service such as [duckdns.org](https://www.duckdns.org)\n\n* By default, the IRI uses the following ports. If you're running a Linux server on your local network, you must [forward these ports to your computer's public IP address](/docs/general/0.1/how-to-guides/expose-your-local-device).\n\n    * **UDP neighbor peering port:** 14600\n    * **TCP neighbor peering port:** 14600\n    * **TCP API port:** 14265\n    \n---\n\n:::info:\nIf your server has limited resources such as less than 4 GB of RAM, we recommend running the cIRI instead of the IRI.\n:::\n\nThe IRI is Java software, so it must be run in a Java runtime environment (JRE).\n\nYou have two options for downloading the latest IRI software:\n* Download the pre-built Java file from GitHub (quickest option)\n* Build the Java file from the source code on GitHub \n\n### Download the pre-built IRI Java file\n\nThe pre-built IRI Java file is available on the [IOTA GitHub repository](https://github.com/iotaledger/iri/releases). Downloading this file is the quickest and simplest way to install the IRI.\n\n1. Install the latest security patches for your system\n\n    ```bash\n    sudo apt-get update\n    sudo apt-get upgrade -y\n    ```\n\n2. Make a directory in which to download the IRI Java file. Change `jake` to your Linux username.\n\n    ```bash\n    mkdir /home/jake/node\n    ```\n    :::info:\n    If you see 'mkdir: cannot create directory...' in the output, you probably copied and pasted the command without changing `jake` to your Linux username.\n    :::\n\n3. Download and install the Java 8 OpenJDK\n\n    ```bash\n    sudo add-apt-repository universe\n    sudo apt-get install -y software-properties-common --no-install-recommends\n    sudo apt-get install openjdk-8-jdk\n    sudo apt-get update\n    ```\n\n    :::info:\n    To check that Java is installed, do `java -version`. You should see a version number in the output.\n    :::\n\n\n4. Download the latest IRI Java file into your `node` directory. Change `jake` to your Linux username and replace the `${VERSION}` variable with the [latest version](https://github.com/iotaledger/iri/releases) of the IRI. \n\n    ```bash\n    sudo wget -O /home/jake/node/iri-${VERSION}.jar https://github.com/iotaledger/iri/releases/download/v${VERSION}/iri-${VERSION}.jar\n    ```\n\n    :::info:\n    Make sure that you include the whole version, for example 1.6.0-RELEASE.\n    :::\n\nThe download may take some time. You should see something like the following in the output if everything went well:\n\n```\nHTTP request sent, awaiting response ... 200 OK\n'/home/jake/node/iri-1.6.0-RELEASE.jar' saved [175441686/175441686]\n```\n\n:::info:Is this your first node?\nIf you are starting a node from scratch, you need to download the `spent-addresses-db` directory from [our website](https://dbfiles.iota.org/?prefix=mainnet/spent-addresses/), [the IOTA Partners website](https://iota.partners/#database), or the [IOTA Playbook](https://iri-playbook.readthedocs.io/en/master/faq.html#where-can-i-get-a-fully-synced-database-to-help-kick-start-my-node).\n\nAfter you've downloaded the directory, extract it into the same directory as your IRI Java file from step 4. For this example, the file is in the `/home/jake/node/` directory.\n:::\n\n\nNow that the IRI Java file and the `spent-addresses-db` directory are saved on your server, [configure the IRI](#configure-the-iri) before running it.\n\n### Build the IRI Java file from the source code\n\nInstead of downloading the pre-built IRI Java file, you may want to build the file from the source code the any of the following reasons:\n* You want to be sure that the code you run is the same as the source code\n* You want to modify the code before you run it\n\n1. Download and install the Java 8 OpenJDK\n\n    ```bash\n    sudo apt-get install -y software-properties-common --no-install-recommends\n    sudo apt-get install openjdk-8-jdk\n    sudo apt-get update\n    ```\n\n2. Install the [Maven](https://maven.apache.org/what-is-maven.html) build tool. Change the `USER_HOME_DIR` variable to your chosen path.\n\n    ```bash\n    export MAVEN_VERSION=3.5.4\n    export USER_HOME_DIR=\"/root\"\n    export SHA=ce50b1c91364cb77efe3776f756a6d92b76d9038b0a0782f7d53acf1e997a14d\n    export BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries\n    sudo apt-get update && apt-get install -y --no-install-recommends curl\n    sudo mkdir -p /usr/share/maven /usr/share/maven/ref\n    sudo curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz\n\n    # Check the sha256 checksum, the output should read 'OK' if the checksum is correct\n\n    echo \"${SHA} /tmp/apache-maven.tar.gz\" | sha256sum -c -\n    sudo tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1\n    sudo rm -f /tmp/apache-maven.tar.gz\n    export MAVEN_HOME=/usr/share/maven\n    export MAVEN_CONFIG=\"${USER_HOME_DIR}/.m2\"\n    ```\n\n    :::info:\n    The SHA256 checksum is also available on the [Apache website](https://archive.apache.org/dist/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz.sha256).\n    :::\n\n3. Install Git\n\n    ```bash\n    sudo apt-get update && apt-get install -y --no-install-recommends git\n    ```\n\n4. Clone and check out the IRI GitHub repository\n\n    ```bash\n    git clone https://github.com/iotaledger/iri.git\n    cd iri\n\n    # Checkout the latest tag\n\n    export TAG=$(git describe --tags $(git rev-list --tags --max-count=1))\n    git checkout ${TAG}\n    ```\n\n5. Build the IRI Java file\n\n    ```bash\n    /usr/share/maven/bin/mvn clean package\n    ```\n    :::info:\n    The IRI Java file is built in a directory called `target`.\n    :::\n\n## Configure the IRI\n\nThe IRI runs in a Java virtual machine. Therefore, before you run the IRI, you need to set up some Java variables.\n\n1. Create the Java variables that'll be used to run the IRI in the Java virtual machine\n\n    ```bash\n    export JAVA_OPTIONS=\"-XX:+UnlockExperimentalVMOptions -XX:+DisableAttachMechanism -XX:InitiatingHeapOccupancyPercent=60 -XX:G1MaxNewSizePercent=75 -XX:MaxGCPauseMillis=10000 -XX:+UseG1GC\"\n    export JAVA_MIN_MEMORY=2G\n    export JAVA_MAX_MEMORY=4G\n    ```\n\n    **JAVA_OPTIONS:** Commands that optimise the Java virtual machine\n\n    **JAVA_MIN_MEMORY:** The initial memory allocation for the Java virtual machine\n    \n    **JAVA_MAX_MEMORY:** the maximum memory allocation for the Java virtual machine\n    \n2. Create an IRI configuration file in the same directory as your IRI Java file. Change `jake` to your Linux username.\n\n    ```bash\n    nano /home/jake/node/config.ini\n    ```\n\n    Leave the file empty for now. The default [IRI configuration options](../references/iri-configuration-options.md) are fine for this setup. If you want to change the configuration options, edit the config.ini file and add the configuration options that you want to change.\n\n### Configure a permanode\n\nIf you want to run a permanode (keep all transactions in the ledger), set the [`LOCAL_SNAPSHOTS_PRUNING_ENABLED` configuration parameter](../references/iri-configuration-options.md#local-snapshots-enabled) to `false`.\n\n### Configure a Devnet node\n\nIf you want to run a Devnet node, you must set the `TESTNET` configuration option to `true`, and add other Devnet nodes to the [`NEIGHBORS`](../references/iri-configuration-options.md#neighbors) configuration parameter.\n\nThe following Devnet nodes have auto-peering enabled, so they will automatically add you as neighbors:\n\n* udp://p101.testnet.iota.cafe:14666\n\n* udp://p102.testnet.iota.cafe:14666\n\n* udp://p103.testnet.iota.cafe:14666\n\n* udp://p104.testnet.iota.cafe:14666\n\n### Configure a Spamnet node\n\nIf you want to run a Spamnet node, you must include only the following configuration parameters in your configuration file:\n\n```\n[IRI]\nZMQ_ENABLED = TRUE\nTESTNET = TRUE\nDB_PATH = spamnetdb\nDB_LOG_PATH = spamnetdb.log\nMWM = 7\nSNAPSHOT_FILE = spamnet.txt\nCOORDINATOR = H9FXUMSYAWNZPVFINVTXOTYKFZXR9OBKA9KSTVWXTWHIZZRISFYZMXIMOQFXDXXQHNAJXAZFP9IHSFXRH\nNUMBER_OF_KEYS_IN_A_MILESTONE = 20\nSNAPSHOT_TIME = 1535760000\nMILESTONE_START_INDEX = 2\nDONT_VALIDATE_TESTNET_MILESTONE_SIG = true\nNEIGHBORS = udp://p101.spamnet.iota.cafe:14600 udp://p102.spamnet.iota.cafe:14600\n```\n\nYou must also create a snapshot file to define an address that contains the entire supply of tokens on the Spamnet. The location of this file must be set in the `SNAPSHOT_FILE` configuration parameter.\n\n```\nWYF9OOFCQJRTLTRMREDWPOBQ9KNDMFVZSROZVXACAWKUMXAIYTFQCPAYZHNGKIWZZGKCSHSSTRDHDAJCW;2779530283277761\n```\n\n## Run the IRI\n\nWhen you've downloaded, and configured the IRI, it's time to run it.\n\n1. Make a directory to keep the database and the IXI (IOTA exchange interface folders). Change `jake` to your Linux username.\n\n    ```bash\n    mkdir -p /home/jake/node/data\n    cd /home/jake/node/data\n    ```\n\n2. Run the IRI. Change `jake` to your Linux username and `$VERSION` to the version of the IRI that you downloaded.\n\n    ```bash\n    java ${JAVA_OPTIONS} -Xms${JAVA_MIN_MEMORY} -Xmx${JAVA_MAX_MEMORY} -Djava.net.preferIPv4Stack=true -jar /home/jake/node/iri-${VERSION}.jar\n    ```\n    The IRI should start to log its activity to the output.\n\n    To make the IRI read your `config.ini` file, add the path to it after the `-c` flag. For example:\n\n    ```bash\n    java ${JAVA_OPTIONS} -Xms${JAVA_MIN_MEMORY} -Xmx${JAVA_MAX_MEMORY} -Djava.net.preferIPv4Stack=true -jar /home/jake/node/iri-${VERSION}.jar -c /home/jake/node/config.ini\n    ```\n\n    :::success:Congratulations :tada:\n    You're now running an IRI node!\n    :::\n\n3. Open a new terminal window on your Linux server, and install Curl and JQ. Curl is used to send REST API requests to your IRI node. JQ is a command-line processor that displays JSON data in an easy-to-read format.\n\n    ```bash\n    sudo apt install curl jq\n    ```\n\n4. Call the [`getNodeInfo`](../references/api-reference.md#getNodeInfo) API endpoint to request general information about the IRI node\n\n    ```bash\n    curl -s http://localhost:14265 -X POST -H 'X-IOTA-API-Version: 1' -H 'Content-Type: application/json' -d '{\"command\": \"getNodeInfo\"}' | jq\n    ```\n\n    You should see something like the following in the output:\n\n    ```json\n     {\n    \"appName\": \"IRI\",\n    \"appVersion\": \"1.7.0-RELEASE\",\n    \"jreAvailableProcessors\": 8,\n    \"jreFreeMemory\": 2115085674,\n    \"jreVersion\": \"1.8.0_191\",\n    \"jreMaxMemory\": 20997734400,\n    \"jreTotalMemory\": 4860129502,\n    \"latestMilestone\": \"CUOENIPTRCNECMVOXSWKOONGZJICAPH9FIG9F9KYXF9VYXFUKTNDCCLLWRZNUHZIGLJZFWPOVCIZA9999\",\n    \"latestMilestoneIndex\": 1050373,\n    \"latestSolidSubtangleMilestone\": \"CUOENIPTRCNECMVOXSWKOONGZJICAPH9FIG9F9KYXF9VYXFUKTNDCCLLWRZNUHZIGLJZFWPOVCIZA9999\",\n    \"latestSolidSubtangleMilestoneIndex\": 1050373,\n    \"milestoneStartIndex\": -1,\n    \"lastSnapshottedMilestoneIndex\": 1039138,\n    \"neighbors\":0,\n    \"packetsQueueSize\":0,\n    \"time\":1548407444641,\n    \"tips\":0,\n    \"transactionsToRequest\":0,\n    \"features\":[\"snapshotPruning\",\"dnsRefresher\",\"tipSolidification\"],\n    \"coordinatorAddress\": \"EQSAUZXULTTYZCLNJNTXQTQHOMOFZERHTCGTXOLTVAHKSA9OGAZDEKECURBRIXIJWNPFCQIOVFVVXJVD9\",\n    \"duration\": 0\n    }\n    ```\n    \n    You'll notice in the output that the value of the `neighbors` field is 0. The IRI node is not yet connected to an IOTA network. To do so, you need to connect to [neighbor IRI nodes](../concepts/neighbor-iri-node.md).\n\n5. [Find neighbors](../how-to-guides/find-neighbor-iri-nodes.md) and add their URL or IP addresses to your config.ini file\n\n    :::info:\n    We recommend [setting up a reverse proxy](../how-to-guides/set-up-a-reverse-proxy.md) for your IRI node so that you can have more control over the requests that are made to it.\n    :::\n\nNow that your node is up and running, it'll start to [synchronize its ledger with the network](../concepts/the-ledger.md#ledger-synchronization). Give your node some time to synchronize, or read our troubleshooting guide if your IRI node isn't synchronizing.\n\n## Check that the IRI is synchronized\n\nThe IRI is considered synchronized when the `latestMilestoneIndex` field is equal to the `latestSolidSubtangleMilestoneIndex` field.\n\nThe `latestMilestoneIndex` field is the index of the latest milestone that the IRI has received from its neighbors.\n\nThe `latestSolidSubtangleMilestoneIndex` field is the index of the latest milestone for which the IRI node's ledger has all the transactions that the milestone directly and indirectly references.\n\nThe `latestMilestoneIndex` and `latestSolidSubtangleMilestoneIndex` fields are accurate only when the IRI node is connected to synchronized neighbors.\n\n1. To check the actual `latestMilestoneIndex` field, go to our [Discord](https://discordapp.com/invite/fNGZXvh) and enter **!milestone** in one of the channels\n\n    ![Entering !milestone on Discord](/assets/docs/iri/0.1/images/discord-milestone-check.PNG)\n\n2. To check these fields for your IRI node, call the `getNodeInfo` API endpoint\n\n    ```bash\n    sudo apt install curl jq\n    curl -s http://localhost:14265 -X POST -H 'X-IOTA-API-Version: 1' -H 'Content-Type: application/json' -d '{\"command\": \"getNodeInfo\"}' | jq\n    ```\n\n:::info:\nIt may take some time for the IRI to synchronize. For help with any issues, read our [troubleshooting guide](../references/troubleshooting.md).\n:::\n\n## Next steps\n\n* [Subscribe to events in an IRI node](../how-to-guides/subscribe-to-events-in-an-iri-node.md)\n","title":"Run an IRI node on a Linux server | How-to Guides | IRI"}}
