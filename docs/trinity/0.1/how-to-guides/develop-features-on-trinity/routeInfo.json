{"path":"docs/trinity/0.1/how-to-guides/develop-features-on-trinity","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# Develop features on Trinity\n\n**As well as an application, Trinity is an open-source platform on which you can develop new features.**\n\nTo get started with Trinity development, do the following:\n\n1. Install the shared dependencies\n2. Install the desktop development environment or the mobile development environment\n3. Contribute to the code\n4. Submit a pull request\n\nTrinity desktop is written in React and built on Electron, whereas Trinity mobile is written in React Native.\n\nDevelopers are encouraged to contribute to the [GitHub issues](https://github.com/iotaledger/trinity-wallet/issues).\n\n## Prerequisites\n\nTo develop on Trinity, your computer must have the following:\n* [An LTS version of Node.js](https://nodejs.org/en/) (we recommend version 10.15.3)\n* [Yarn](https://yarnpkg.com/lang/en/docs/install/)\n* [Git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git)\n\n:::info:\nRestart your computer after installing these programs.\n:::\n\n## Install the shared dependencies\n\n1. Clone the Trinity repository\n\n    ```bash\n    git clone https://github.com/iotaledger/trinity-wallet.git\n    ```\n\n2. Change into the `trinity-wallet` directory\n\n    ```bash\n    cd trinity-wallet\n    ```\n\n3. Install the shared dependencies\n\n    ```bash\n    yarn deps:shared\n    ```\n\nNow, you can install either the desktop or the mobile development environment.\n\n## Install the desktop development environment\n\nIf you're using a Windows or Linux operating system, you need to install some extra build tools or packages.\n\n--------------------\n### Linux\n```\nsudo apt install build-essential libudev-dev libusb-1.0-0 libusb-1.0-0-dev\nsudo apt install gcc-4.8 g++-4.8 && export CXX=g++-4.8\n```\n---\n### Fedora\n```\nyum install build-essential libudev-dev libusb-1.0-0 libusb-1.0-0-dev libusbx-devel gcc-4.8 g++-4.8 && export CXX=g++-4.8\n```\n---\n### Windows Vista and Windows 7\n1. [Install the .NET Framework 4.5.1](https://www.microsoft.com/en-us/download/details.aspx?id=4077)\n\n2. Install Visual C++ build tools and Python 2.7\n\n    ```\n    npm install --global windows-build-tools\n    ```\n\n3. Install OpenSSL VC++ Static 64bit Library\n\n    ```\n    git clone https://github.com/Microsoft/vcpkg C:\\src\\vcpkg\n    cd C:\\src\\vcpkg\n    .\\bootstrap-vcpkg.bat\n    .\\vcpkg install openssl:x64-windows-static\n    ```\n---\n### Other Windows versions\n1. Install Visual C++ Build Tools and Python 2.7\n\n    ```\n    npm install --global windows-build-tools\n    ```\n\n2. Install OpenSSL VC++ Static 64bit Library\n\n    ```\n    git clone https://github.com/Microsoft/vcpkg C:\\src\\vcpkg\n    cd C:\\src\\vcpkg\n    .\\bootstrap-vcpkg.bat\n    .\\vcpkg install openssl:x64-windows-static\n    ```\n--------------------\n\n1. Install the desktop dependencies\n\n    ```bash\n    npm run deps:desktop\n    ```\n\n2. Change into the `desktop` directory\n\n    ```bash  \n    cd src/desktop\n    ```\n\n3. Build Trinity desktop\n\n    ```bash\n    npm run build\n    ```\n\n4. Now, you can either compile an executable file, or run Trinity in development mode\n\n* If you want an executable file, compile Trinity\n\n    ```bash\n    npm run compile:mac\n    ```\n\n    :::info:\n    Change `mac` to your operating system: `mac`, `win`, or `linux`.\n    :::\n\n    When Trinity is compiled, the executable file and the installation files will be located in the `src/desktop/out/` directory.\n\n* If you want to run Trinity in development mode, start the app\n\n    ```bash\n    npm start\n    ```\n\n    Trinity will open when the build is ready.\n\n## Install the mobile development environment\n\n1. [Install the React Native dependencies](https://facebook.github.io/react-native/docs/getting-started.html#installing-dependencies-2)\n\n    :::info:\n    If you are targeting iOS and are using Xcode 10+, enable the legacy build system.\n    :::\n\n2. If you are targeting the iOS operating system, [install CocoaPods](https://cocoapods.org/#install).\n\n3. Install the mobile dependencies\n    ```bash\n    yarn deps:mobile\n    ```\n\n4. Change into the `mobile` directory\n    ```bash\n    cd src/mobile\n    ```\n\nNow, you can run Trinity and the logger.\n\n--------------------\n### iOS\n1. Install the additional dependencies with CocoaPods\n\n    ```bash\n    cd ios && pod install && cd ..\n    ```\n\n2. Run Trinity\n    ```bash\n    yarn ios:dev\n    ```\n\n3. Run the logger\n    ```bash\n    yarn log:ios\n    ```\n---\n### Android\n1. Run the application\n    ```bash\n    yarn android:dev\n    ```\n\n2. Run the logger\n    ```bash\n    yarn log:android\n    ```\n--------------------\n\n## Contribute to the code\n\n1. Create a new Git branch from the `develop` branch\n\n    ```bash\n    git checkout -b feature/my-awesome-new-feature\n    ```\n\n:::info:\nUse a prefix to name your branches (for example, `feature/my-awesome-new-feature` or `bugfix/something-not-working`).\n:::\n\nMake all your changes to this branch.\n\n### Create a new theme\n\nA theme consists of a color scheme used by the UI of the mobile and desktop wallets. All themes are located in separate JavaScript files in the `/src/shared/themes/` directory.\n\n1. In the `themes` directory, create a new JavaScript file and copy the contents of the Classic.js file into it\n\n2. Change the color values to suit your theme and save the file\n\n3. In the `themes.js` file, import your theme and add it to the `themes` constant\n\n4. Go to `src/shared/locales/en/translation.json`, and add the name of your theme to the `themes` object. If you miss this step, the name of your theme will not be correct in Trinity.\n\n### Localize new strings\n\nIf you are making a contribution that includes adding or changing text, follow these localization instructions.\n\n1. Import the `translate` higher order component (HOC)\n    ```javascript\n    import { withNamespaces } from ‘react-i18next’;\n    ```\n\n2. Create a `t` constant, and set it to the `props` object\n    ```javascript\n    const { t } = this.props;\n    ```\n\n3. Tell i18next to get the translations for your keys (give the key an appropriate name).\n    ```javascript\n    <Text>{t(‘helloWorld’)}</Text>\n    ```\n\n4. Wrap the component\n    ```javascript\n    export withNamespaces(‘myContainer’)(MyContainer);\n    ```\n\n5. Add the translations for your keys to the translation.json file in the `src/shared/locales/en/` directory\n    ```json\n    \"myContainer\":{\n        \"helloWorld\": \"Hello world!\"\n    }\n    ```\n\nYour strings will be shown on [Crowdin](https://crowdin.com/project/iota-trinity-wallet) when we merge your pull request into the `develop` branch. The community can contribute to Trinity by translating your strings on Crowdin.\n\n### Submit a pull request\n\nAfter you've made your changes, create a new pull request on GitHub.\n\nUse your branch as the source branch and use the `develop` branch as the target branch.\n\n## Troubleshooting\n\nYou may find some of these issues while running Trinity in development mode.\n\n### Trinity does not start after a version update\n\n1. Sometimes, we update the dependencies and change the configurations. Try to reinstall the dependencies by doing `npm install` in the `trinity-wallet` directory. Then, build the wallet again by doing `npm run build`\n\n2. The development environment does not clear the user configuration files when you switch between different versions of Trinity. If you have run a different version of Trinity before, remove the configuration files, then try and run Trinity again\n\n--------------------\n### macOS\n```bash\nrm -rf ~/Library/Application Support/Electron\n```\n---\n### Windows\n```bash\nRemove-Item –path %APPDATA%/Electron –recurse\n```\n---\n### Linux\n```bash\nrm -rf ~/.config/Electron\n```\n--------------------\n\n### Trinity opens with a blank screen\n\n1. Reload Trinity by pressing **Ctrl**+ **R** (**cmd**+**R** on macOS) while the Developer tools window is open and in focus.\n\n2. Check the Developer tools console for any errors. Try to fix them or report them as an [issue](https://github.com/iotaledger/trinity-wallet/issues) on GitHub.\n","title":"Develop features on Trinity | How-to Guides | ウォレット"}}
