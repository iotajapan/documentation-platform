{"path":"docs/wallets/0.1/hub/references/api-reference","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# APIリファレンス\n<!-- # API reference -->\n\n**タングルとハブデータベースへの接続を簡単にするために、ハブにはgRPC APIがあります。このAPIリファレンスを使用してメソッドを見つけ、メソッドが行うことを学んでください。**\n<!-- **To simplify connections to the Tangle and the Hub database, Hub has a gRPC API. Use this API reference to find methods and learn what they do.** -->\n\n<a name=\"hub.proto\"></a>\n\n## hub.proto\n\n<a name=\"hub.rpc.Hub\"></a>\n\n### Hub\n\n| メソッド名 | リクエストタイプ | レスポンスタイプ | 説明 |\n| ---------- | ---------------- | ---------------- | ---- |\n| CreateUser | [CreateUserRequest](#hub.rpc.CreateUserRequest) | [CreateUserReply](#hub.rpc.CreateUserRequest) | ハブに新しいユーザーを作成します。 |\n| GetBalance | [GetBalanceRequest](#hub.rpc.GetBalanceRequest) | [GetBalanceReply](#hub.rpc.GetBalanceRequest) | ユーザーの利用可能残高を返します。 |\n| GetDepositAddress | [GetDepositAddressRequest](#hub.rpc.GetDepositAddressRequest) | [GetDepositAddressReply](#hub.rpc.GetDepositAddressRequest) | ユーザーの新しい預け入れアドレスを作成します。 |\n| UserWithdraw | [UserWithdrawRequest](#hub.rpc.UserWithdrawRequest) | [UserWithdrawReply](#hub.rpc.UserWithdrawRequest) | ユーザーに取り出しリクエストを送信します。 |\n| UserWithdrawCancel | [UserWithdrawCancelRequest](#hub.rpc.UserWithdrawCancelRequest) | [UserWithdrawCancelReply](#hub.rpc.UserWithdrawCancelRequest) | ユーザーの取り出しリクエストの取り消しを試みます。スウィープがまだ始まっていない限り可能です。 |\n| GetUserHistory | [GetUserHistoryRequest](#hub.rpc.GetUserHistoryRequest) | [GetUserHistoryReply](#hub.rpc.GetUserHistoryRequest) | ハブに記録されているユーザーの全残高の変更履歴を返します。 |\n| ProcessTransferBatch | [ProcessTransferBatchRequest](#hub.rpc.ProcessTransferBatchRequest) | [ProcessTransferBatchReply](#hub.rpc.ProcessTransferBatchRequest) | 取引所からの買い/売りのバッチを処理します。このバッチの金額の合計は0でなければならないことに注意してください！ |\n| BalanceSubscription | [BalanceSubscriptionRequest](#hub.rpc.BalanceSubscriptionRequest) | [BalanceEvent](#hub.rpc.BalanceSubscriptionRequest) | 提供されたタイムスタンプ以降に表示されるすべての残高変更のストリームを生成します。 |\n| GetStats | [StatsRequest](#hub.rpc.StatsRequest) | [StatsReply](#hub.rpc.StatsRequest) | ハブに関する統計を提供します。 |\n| SweepSubscription | [SweepSubscriptionRequest](#hub.rpc.SweepSubscriptionRequest) | [SweepEvent](#hub.rpc.SweepSubscriptionRequest) | 指定されたタイムスタンプ以降のすべてのスウィープのストリームを生成します。 |\n| GetAddressInfo | [GetAddressInfoRequest](#hub.rpc.GetAddressInfoRequest) | [GetAddressInfoReply](#hub.rpc.GetAddressInfoRequest) | ハブによって所有されている場合、そのアドレスに関する情報を提供します。 |\n| SweepInfo | [SweepInfoRequest](#hub.rpc.SweepInfoRequest) | [SweepEvent](#hub.rpc.SweepInfoRequest) | 特定の取り出しまたはバンドルハッシュのスウィープに関する情報を提供します。 |\n| SignBundle | [SignBundleRequest](#hub.rpc.SignBundleRequest) | [SignBundleReply](#hub.rpc.SignBundleRequest) | バンドルハッシュの署名を提供します。 |\n| SweepDetail | [SweepDetailRequest](#hub.rpc.SweepDetailRequest) | [SweepDetailReply](#hub.rpc.SweepDetailRequest) | バンドルハッシュのスウィープに関する詳細情報を提供します。 |\n\n<a name=\"messages.proto\"></a>\n\n## messages.proto\n\n<a name=\"hub.rpc.BalanceEvent\"></a>\n\n### BalanceEvent\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| userAccountEvent | [UserAccountBalanceEvent](#hub.rpc.UserAccountBalanceEvent) |       |      |\n| userAddressEvent | [UserAddressBalanceEvent](#hub.rpc.UserAddressBalanceEvent) |       |      |\n| hubAddressEvent  | [HubAddressBalanceEvent](#hub.rpc.HubAddressBalanceEvent)   |       |      |\n\n<a name=\"hub.rpc.BalanceSubscriptionRequest\"></a>\n\n### BalanceSubscriptionRequest\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| newerThan | [uint64](#uint64) |       | 今回より新しい残高（エポック以降のMS）が取得されます。 |\n\n<a name=\"hub.rpc.CreateUserReply\"></a>\n\n### CreateUserReply\n\n新しいユーザーを作成するために返信します。\n<!-- Reply for creating a new user. -->\n\n現在は未使用です。\n<!-- Currently unused. -->\n\n<a name=\"hub.rpc.CreateUserRequest\"></a>\n\n### CreateUserRequest\n\n新しいユーザーを作成するように要求します。\n<!-- Request for creating a new user. -->\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| userId | [string](#string) |       |             |\n\n<a name=\"hub.rpc.Error\"></a>\n\n### Error\n\nエラーコードを返すために使用される一般的なError。例：Status::CANCELLED\n<!-- Thr generic Error that will be used to return an error code on, e.g. Status::CANCELLED. -->\n\nエラーはシリアル化され、ステータスの詳細フィールドに保存されます。\n<!-- The error will be serialized and stored in the Status' detail field. -->\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| code  | [ErrorCode](#hub.rpc.ErrorCode) |       |             |\n\n\n<a name=\"hub.rpc.GetAddressInfoReply\"></a>\n\n### GetAddressInfoReply\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| userId | [string](#string) |       | アドレスを所有するユーザーID |\n\n<a name=\"hub.rpc.GetAddressInfoRequest\"></a>\n\n### GetAddressInfoRequest\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| address | [string](#string) |       | 調べるアドレス |\n\n<a name=\"hub.rpc.GetBalanceReply\"></a>\n\n### GetBalanceReply\n\nユーザーの現在利用可能な残高を含む返信。\n<!-- Reply containing a user's currently available balance -->\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| available | [int64](#int64) |       | 取り出し/トレードに現在利用可能なユーザー残高 |\n\n<a name=\"hub.rpc.GetBalanceRequest\"></a>\n\n### GetBalanceRequest\n\nユーザーの現在利用可能な残高をリクエストするためのリクエスト。\n<!-- Request for requesting a user's currently available balance. -->\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| userId | [string](#string) |       |             |\n\n<a name=\"hub.rpc.GetDepositAddressReply\"></a>\n\n### GetDepositAddressReply\n\n新しい預け入れアドレスを含む返信。\n<!-- Reply containing the new deposit address. -->\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| address | [string](#string) |       | 新しく作成された預け入れアドレス |\n\n<a name=\"hub.rpc.GetDepositAddressRequest\"></a>\n\n### GetDepositAddressRequest\n\nユーザーの新しい預け入れアドレスを作成するためのリクエスト。\n<!-- Request for creating a new deposit address for a user. -->\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| userId          | [string](#string) |       |             |\n| includeChecksum | [bool](#bool)     |       |             |\n\n<a name=\"hub.rpc.GetUserHistoryReply\"></a>\n\n### GetUserHistoryReply\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| events | [UserAccountBalanceEvent](#hub.rpc.UserAccountBalanceEvent) | repeated | 特定のユーザーのすべてのユーザー残高イベントの一覧 |\n\n<a name=\"hub.rpc.GetUserHistoryRequest\"></a>\n\n### GetUserHistoryRequest\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| userId    | [string](#string) |       | ユーザーID |\n| newerThan | [uint64](#uint64) |       | 今回より新しいレコード（エポック以降のMS）が取得されます。 |\n\n<a name=\"hub.rpc.HubAddressBalanceEvent\"></a>\n\n### HubAddressBalanceEvent\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| hubAddress      | [string](#string)                                           |       |             |\n| amount          | [int64](#int64)                                             |       |             |\n| reason          | [HubAddressBalanceReason](#hub.rpc.HubAddressBalanceReason) |       |             |\n| sweepBundleHash | [string](#string)                                           |       |             |\n| timestamp       | [uint64](#uint64)                                           |       |             |\n\n<a name=\"hub.rpc.ProcessTransferBatchReply\"></a>\n\n### ProcessTransferBatchReply\n\n<a name=\"hub.rpc.ProcessTransferBatchRequest\"></a>\n\n### ProcessTransferBatchRequest\n\nこのリクエストには、ネット転送バッチが含まれています。ユーザーIDは一意である必要があります。\n<!-- This request contains a netted transfer batch. -->\n<!-- UserIds must be unique. -->\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| transfers | [ProcessTransferBatchRequest.Transfer](#hub.rpc.ProcessTransferBatchRequest.Transfer) | repeated |             |\n\n<a name=\"hub.rpc.ProcessTransferBatchRequest.Transfer\"></a>\n\n### ProcessTransferBatchRequest.Transfer\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| userId | [string](#string) |       |             |\n| amount | [int64](#int64)   |       |             |\n\n<a name=\"hub.rpc.SignBundleReply\"></a>\n\n### SignBundleReply\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| signature | [string](#string) |       | 署名の結果 |\n\n<a name=\"hub.rpc.SignBundleRequest\"></a>\n\n### SignBundleRequest\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| address          | [string](#string) |       | 署名する必要があるハブ所有のIOTAアドレス（チェックサムなし）。 |\n| bundleHash       | [string](#string) |       | 署名する必要があるバンドルハッシュ。 |\n| authentication   | [string](#string) |       | 認証トークン（使用されている場合） |\n| validateChecksum | [bool](#bool)     |       | 署名者がアドレスを検証する必要があるかどうか |\n\n<a name=\"hub.rpc.StatsReply\"></a>\n\n### StatsReply\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| totalBalance | [uint64](#uint64) |       | 現在ハブによって管理されている合計残高。 |\n\n<a name=\"hub.rpc.StatsRequest\"></a>\n\n### StatsRequest\n\n<a name=\"hub.rpc.SweepDetailReply\"></a>\n\n### SweepDetailReply\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| confirmed | [bool](#bool)     |          | スウィープの確定ステータス |\n| trytes    | [string](#string) | repeated | スウィープのトランザクショントライト |\n| tailHash  | [string](#string) | repeated | スウィープの末尾ハッシュ（バンドルごとに複数の再添付） |\n\n<a name=\"hub.rpc.SweepDetailRequest\"></a>\n\n### SweepDetailRequest\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| bundleHash | [string](#string) |       | スウィープのバンドルハッシュ |\n\n<a name=\"hub.rpc.SweepEvent\"></a>\n\n### SweepEvent\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| bundleHash     | [string](#string) |          |             |\n| timestamp      | [uint64](#uint64) |          |             |\n| withdrawalUUID | [string](#string) | repeated |             |\n\n<a name=\"hub.rpc.SweepInfoRequest\"></a>\n\n### SweepInfoRequest\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| withdrawalUUID | [string](#string) |       | 調べる取り出しUUID |\n| bundleHash     | [string](#string) |       | スウィープのバンドルハッシュ |\n\n<a name=\"hub.rpc.SweepSubscriptionRequest\"></a>\n\n### SweepSubscriptionRequest\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| newerThan | [uint64](#uint64) |       | 今回より新しいスウィープ（エポック以降のMS）が取得されます。 |\n\n<a name=\"hub.rpc.UserAccountBalanceEvent\"></a>\n\n### UserAccountBalanceEvent\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| userId          | [string](#string) |       |                                          |\n| timestamp       | [uint64](#uint64) |       | MSで残高変更が発生した時点からの経過時間 |\n| type            | [UserAccountBalanceEventType](#hub.rpc.UserAccountBalanceEventType) |       |                                                |\n| amount          | [int64](#int64)   |       |                                          |\n| sweepBundleHash | [string](#string) |       | 預け入れ時にはスウィープバンドルハッシュが含まれます。取り出しまたは取り出しキャンセル時には取り出しuuidが含まれます。 |\n| withdrawalUUID  | [string](#string) |       |                                          |\n\n<a name=\"hub.rpc.UserAddressBalanceEvent\"></a>\n\n### UserAddressBalanceEvent\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| userId      | [string](#string) |       |           |\n| userAddress | [string](#string) |       |           |\n| amount      | [int64](#int64)   |       |           |\n| reason      | [UserAddressBalanceReason](#hub.rpc.UserAddressBalanceReason) |       |   |\n| hash        | [string](#string) |       | 預け入れているバンドルの末尾（reason == DEPOSITの場合）スイープのバンドルハッシュ（reason == SWEEPの場合） |\n| timestamp   | [uint64](#uint64) |       |           |\n\n<a name=\"hub.rpc.UserWithdrawCancelReply\"></a>\n\n### UserWithdrawCancelReply\n\n取り出しキャンセルの返信。\n<!-- Reply for withdrawal cancellation. -->\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| success | [bool](#bool) |       | 取り出しを取り消すことができれば`true` |\n\n\n<a name=\"hub.rpc.UserWithdrawCancelRequest\"></a>\n\n### UserWithdrawCancelRequest\n\n既に提出された取り出しをキャンセルするようにリクエストします。\n<!-- Request to cancel an already submitted withdrawal. -->\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| uuid  | [string](#string) |       | キャンセルされる取り出しUUID |\n\n<a name=\"hub.rpc.UserWithdrawReply\"></a>\n\n### UserWithdrawReply\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| uuid  | [string](#string) |       | 取り出しのUUID |\n\n<a name=\"hub.rpc.UserWithdrawRequest\"></a>\n\n### UserWithdrawRequest\n\nユーザーが送信した取り出しをリクエストします。\n<!-- Requests a user-submitted withdrawal. -->\n\n利用可能な残高が十分にない場合、これは失敗します。\n<!-- This will fail if the user does not have sufficient balance available. -->\n\n| **フィールド** | **タイプ** | **ラベル** | **説明** |\n| -------------- | ---------- | ---------- | -------- |\n| userId           | [string](#string) |       |                                                              |\n| payoutAddress    | [string](#string) |       | ユーザーが支払いをリクエストしたアドレス。チェックサムなしであるべきです。 |\n| amount           | [uint64](#uint64) |       | リクエストした取り出し額 |\n| tag              | [string](#string) |       | 取り出し用のタグ |\n| validateChecksum | [bool](#bool)     |       | アドレス検証コマンドを実行する必要があります。 |\n\n<a name=\"hub.rpc.ErrorCode\"></a>\n\n### ErrorCode\n\nハブから返される可能性があるエラーコード。\n<!-- Error codes that can be returned by the hub. -->\n\n| 名前      | 番号 | 説明         |\n| :------------------------------ | :----- | :------------------------------------------------------------ |\n| EC_UNKNOWN                      | 0      | 未使用 |\n| USER_EXISTS                     | 1      | ユーザーIDは既に存在します。 |\n| USER_DOES_NOT_EXIST             | 2      | ユーザーIDは存在しません。 |\n| INSUFFICIENT_BALANCE            | 3      | この操作に対してユーザーの残高が不足しています。 |\n| BATCH_INVALID                   | 4      | バッチが無効です（合計が0になっていないか、ユーザーIDが一意ではありません）。 |\n| BATCH_INCONSISTENT              | 5      | バッチが矛盾しています（十分な残高がないままユーザーのアカウントから資金を削除しようとしています）。 |\n| BATCH_AMOUNT_ZERO               | 6      | 取引に関連する金額が無効です（0より大きくまたは小さくなければなりません）。 |\n| UNKNOWN_ADDRESS                 | 7      | アドレスがハブに認識されていません。 |\n| WITHDRAWAL_CAN_NOT_BE_CANCELLED | 8      | 取り出しはすでにスウィープされたか取り消されました。 |\n| INELIGIBLE_ADDRESS              | 9      | アドレスがリクエストされた操作に適格ではありません。 |\n| INVALID_AUTHENTICATION          | 10     | 提供された認証トークンが無効です。 |\n| CHECKSUM_INVALID                | 11     | 提供されたアドレスに無効なチェックサムが含まれています。 |\n| SIGNING_FAILED                  | 12     | rpc signing_serverの呼び出しに失敗しました（GetSignatureForUUID）。 |\n| GET_ADDRESS_FAILED              | 13     | rpc signing_serverの呼び出しに失敗しました（GetAddressForUUID）。 |\n| GET_SECURITY_LEVEL_FAILED       | 14     | rpc signing_serverの呼び出しに失敗しました（GetSecurityLevel）。 |\n\n<a name=\"hub.rpc.HubAddressBalanceReason\"></a>\n\n### HubAddressBalanceReason\n\n| 名前        | 番号 | 説明                               |\n| ----------- | ---- | ---------------------------------- |\n| HUB_UNKNOWN | 0    |                                           |\n| INBOUND     | 1    | スウィープインバウンド（残余アドレスとして使用） |\n| OUTBOUND    | 2    | スウィープアウトバウンド（入力として使用） |\n\n<a name=\"hub.rpc.UserAccountBalanceEventType\"></a>\n\n### UserAccountBalanceEventType\n\n| 名前                | 番号 | 説明       |\n| :------------------ | :--- | :--------- |\n| UAB_UNKNOWN         | 0    | 未使用                                                       |\n| DEPOSIT             | 1    | ユーザーアカウントへの預け入れ（正の量） |\n| BUY                 | 2    | ユーザーが取引バッチの一部として購入したトークン（正の量） |\n| WITHDRAWAL          | 3    | ユーザーの取り出しリクエスト（負の量） |\n| WITHDRAWAL_CANCELED | 4    | キャンセルしたユーザーの取り出しリクエスト（負の量） |\n| SELL                | 5    | ユーザーが取引バッチの一部として売却したトークン（負の量） |\n\n<a name=\"hub.rpc.UserAddressBalanceReason\"></a>\n\n### UserAddressBalanceReason\n\n| 名前                | 番号 | 説明       |\n| :------------------ | :--- | :--------- |\n| UADD_UNKNOWN | 0      |                          |\n| UA_DEPOSIT   | 1      | 追跡された新規ユーザーの預け入れ |\n| UA_SWEEP     | 2      | ハブスウィープ |\n\n## Scalar Value Types\n\n| .protoタイプ                    | メモ                                                        | C++での型 | Javaでの型 | Pythonでの型 |\n| ------------------------------ | ------------------------------------------------------------ | -------- | ---------- | ----------- |\n| <a name=\"double\" /> double     |                                                              | double   | double     | float       |\n| <a name=\"float\" /> float       |                                                              | float    | float      | float       |\n| <a name=\"int32\" /> int32       | 可変長符号化を使用します。負の数をエンコードするのは非効率的です - あなたのフィールドが負の値を持つ可能性が高い場合は、代わりにsint32を使用してください。 | int32    | int        | int         |\n| <a name=\"int64\" /> int64       | 可変長符号化を使用します。負の数をエンコードするのは非効率的です - あなたのフィールドが負の値を持つ可能性が高い場合は、代わりにsint64を使用してください。 | int64    | long       | int/long    |\n| <a name=\"uint32\" /> uint32     | 可変長符号化を使用します。 | uint32   | int        | int/long    |\n| <a name=\"uint64\" /> uint64     | 可変長符号化を使用します。 | uint64   | long       | int/long    |\n| <a name=\"sint32\" /> sint32     | 可変長符号化を使用します。符号付きint値。これらは通常のint32よりも効率的に負の数をエンコードします。 | int32    | int        | int         |\n| <a name=\"sint64\" /> sint64     | 可変長符号化を使用します。符号付きint値。これらは通常のint64よりも効率的に負の数をエンコードします。 | int64    | long       | int/long    |\n| <a name=\"fixed32\" /> fixed32   | 常に4バイト。値がよく2<sup>28</sup>より大きくなる場合は、uint32より効率的です。 | uint32   | int        | int         |\n| <a name=\"fixed64\" /> fixed64   | 常に8バイト。値がよく2<sup>56</sup>より大きくなる場合は、uint64より効率的です。 | uint64   | long       | int/long    |\n| <a name=\"sfixed32\" /> sfixed32 | 常に4バイト。 | int32    | int        | int         |\n| <a name=\"sfixed64\" /> sfixed64 | 常に8バイト。 | int64    | long       | int/long    |\n| <a name=\"bool\" /> bool         |                                                              | bool     | boolean    | boolean     |\n| <a name=\"string\" /> string     | 文字列には常にUTF-8エンコードまたは7ビットASCIIテキストを含める必要があります。 | string   | String     | str/Unicode |\n| <a name=\"bytes\" /> bytes       | 任意のバイトシーケンスを含めることができます。 | string   | ByteString | str         |\n","title":"API reference | References | Hub | ウォレット"}}
