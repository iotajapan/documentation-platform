{"path":"docs/iota-java/0.1/README","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# IOTA Java client library\n\nThis is the **official** Java client library, which allows you to do the following:\n- Create, import, export, and manage accounts\n- Send transactions\n- Promote and reattach pending transactions\n- Request deposits into conditional deposit addresses (CDA)\n- Listen to events\n- Extend the library functionality with plug-ins\n- Interact with an IRI node\n\nTo learn more about how the library works:\n\n- See how you can [work with accounts](/docs/iota-java/0.1/how-to-guides/create-account).\n- See how you can [send and receive](/docs/iota-java/0.1/how-to-guides/create-and-manage-cda) transactions.\n\nGet the library at the [IOTA Java GitHub repository](https://github.com/iotaledger/iota-java).\n\n:::warning:Beta software\nThe client libraries are currently in beta. Their use in production is not supported.\n:::\n\nPlease report any issues in our [issue tracker](https://github.com/iotaledger/iota-java/issues/new-issue).\n\n## Audience\n\nThis documentation is designed for people who are familiar with the Java programming language and object-oriented programming concepts. You should also be familiar with basic IOTA concepts such as [address reuse](/docs/iota-basics/0.1/concepts/addresses-and-signatures#address-reuse), [bundles, and transactions](/docs/iota-basics/0.1/concepts/bundles-and-transactions).\n\nThis guide is designed to let you quickly start exploring and developing applications with IOTA.\n\n## Prerequisites\n\nTo use the IOTA Java client library, your computer must have the following minimum requirement:\n\n* Java 6 (or higher)\n\n## Download the library\n\nThe IOTA Java client library is available on [JitPack][https://jitpack.io/].\n\n### Dependencies\n\nThe IOTA Java client library uses the following third-party libraries:\n\n* [Retrofit 2](https://square.github.io/retrofit/) type-safe HTTP client: `2.3.0`\n* [Simple Logging Facade for Java](http://www.slf4j.org/): `1.7.25`\n* [Apache Commons Lang](http://commons.apache.org/proper/commons-lang/): `3.6`\n* [Apache Commons IO](http://commons.apache.org/proper/commons-io/): `2.5`\n* [Legion of the Bouncy Castle](https://www.bouncycastle.org/java.html) Java cryptography APIs: `1.58`\n\nTo download the IOTA Java client library and its dependencies, you can use one of the following options:\n\n* Download the library with Gradle\n* Download the library with Maven\n* Download the library manually\n\n### Download the library with Gradle\n\n 1. Add the JitPack repository to your root `build.gradle` file\n\n    ```gradle\n    allprojects {\n        repositories {\n            maven { url 'https://jitpack.io' }\n        }\n    }\n    ```\n\n1. Add the iotaledger dependency to your module `build.gradle` file\n\n    ```gradle\n    dependencies {\n        compile 'com.github.iotaledger:iota-java:1.0.0-beta3'\n    }\n    ```\n    \n### Download the library with Maven\n\n1. Add the JitPack repository to your root `pom.xml` file\n    ```xml\n    <repositories>\n        <repository>\n            <id>jitpack.io</id>\n            <url>https://jitpack.io</url>\n        </repository>\n    </repositories>\n    ```\n\n2. Add the iotaledger dependency to your module `pom.xml` file\n    ```xml\n    <dependency>\n        <groupId>com.github.iotaledger.iota-java</groupId>\n        <artifactId>jota</artifactId>\n        <classifier>jar-with-dependencies</classifier>\n        <version>[VERSION_INFORMATION]</version>\n    </dependency>\n    ```\n    \n3. Change the value of the `<version>` tag to either a release number or the first 10 characters of a Git commit hash:\n`<version>a98de8ea50</version>` or `<version>1.0.0-beta3</version>`\n\n**Note:** Find the latest version on the [JitPack](https://jitpack.io/#iotaledger/iota-java) page.\n\n### Download the library manually\n\n1. Clone or download the [GitHub repository](https://github.com/iotaledger/iota-java)\n\n    Inside the project, you'll have the following directories:\n    * jota\n    * jota-parent\n\n2. Reference the jota directory in your project\n\n3. In the jota directory, run the following command:\n\n    `mvn clean install`\n\nYou'll have a .jar file called `jota-[VERSION]-jar-with-dependencies.jar`, depending on your version of the library.\n\n## Get Started\n\nAfter you've downloaded the library, you can connect to an IRI node to send transactions to it and interact with the ledger.\n\nTo connect to a local IRI node, do the following:\n\n```java\nIotaAPI api = new IotaAPI.Builder().build();\nGetNodeInfoResponse response = api.getNodeInfo();\n```\n\nTo connect to a remote IRI node, do the following:\n\n```java\nIotaAPI api = new IotaAPI.Builder()\n        .protocol(\"http\")\n        .host(\"URL OF THE REMOTE IRI NODE\")\n        .port(\"14265\")\n        .build();\nGetNodeInfoResponse response = api.getNodeInfo();\n```\n\n**Note:** To separate your IRI node configuration from the implementation, you can also specify your IRI node configuration in a [**Java `.properties` file**](https://en.wikipedia.org/wiki/.properties) or as command line flags. These options are useful if you develop an open-source app which is deployed on a CI and don't want contributors to see the internal IRI node configuration.\n\n**Example .properties files**\n\n```java\niota.node.protocol=http\niota.node.host=127.0.0.1\niota.node.port=14265\n```\n\nMost API calls are **synchronous**. Therefore, we recommend that you call the API from a background thread or a worker thread to stop the API from blocking other threads such as the UI or the main thread.\n\n## API reference\n\nFor a full list of API commands for the IOTA Java client library, go to the [GitHub page](https://iotaledger.github.io/iota-java/javadoc/jota/IotaAPICommands.html#enum.constant.summary).\n\nHere are some of the most commonly used API functions:\n\n- [`getTransactionsObjects`](https://iotaledger.github.io/iota-java/javadoc/jota/IotaAPI.html#getTransactionsObjects-java.lang.String:A-)\n- [`findTransactionObjects`](https://iotaledger.github.io/iota-java/javadoc/jota/IotaAPI.html#findTransactionObjects-java.lang.String:A-)\n- [`getTransactionsObjects`](https://iotaledger.github.io/iota-java/javadoc/jota/IotaAPI.html#getTransactionsObjects-java.lang.String:A-)\n- [`getLatestInclusion`](https://iotaledger.github.io/iota-java/javadoc/jota/IotaAPI.html#getLatestInclusion-java.lang.String:A-)\n- [`broadcastAndStore`](https://iotaledger.github.io/iota-java/javadoc/jota/IotaAPI.html#broadcastAndStore-java.lang.String...-)\n- [`getNewAddress`](https://iotaledger.github.io/iota-java/javadoc/jota/IotaAPI.html#getNewAddress-java.lang.String-int-int-boolean-int-boolean-)\n- [`getInputs`](https://iotaledger.github.io/iota-java/javadoc/jota/IotaAPI.html#getInputs-java.lang.String-int-int-int-long-)\n- [`prepareTransfers`](https://iotaledger.github.io/iota-java/javadoc/jota/IotaAPI.html#prepareTransfers-java.lang.String-int-java.util.List-java.lang.String-java.util.List-boolean-)\n- [`sendTrytes`](https://iotaledger.github.io/iota-java/javadoc/jota/IotaAPI.html#sendTrytes-java.lang.String:A-int-int-)\n- [`sendTransfer`](https://iotaledger.github.io/iota-java/javadoc/jota/IotaAPI.html#sendTransfer-java.lang.String-int-int-int-java.util.List-jota.model.Input:A-java.lang.String-)\n- [`replayBundle`](https://iotaledger.github.io/iota-java/javadoc/jota/IotaAPI.html#replayBundle-java.lang.String-int-int-)\n- [`getBundle`](https://iotaledger.github.io/iota-java/javadoc/jota/IotaAPI.html#getBundle-java.lang.String-)\n- [`getTransfers`](https://iotaledger.github.io/iota-java/javadoc/jota/IotaAPI.html#getTransfers-java.lang.String-int-java.lang.Integer-java.lang.Integer-java.lang.Boolean-)\n- [`initiateTransfer`](https://iotaledger.github.io/iota-java/javadoc/jota/IotaAPI.html#initiateTransfer-int-java.lang.String-java.lang.String-java.util.List-boolean-)\n- [`getAccountData`](https://iotaledger.github.io/iota-java/javadoc/jota/IotaAPI.html#getAccountData-java.lang.String-int-int-boolean-int-boolean-int-int-boolean-long-)\n\n## Examples\n\nWe have a list of test cases on the [`src/test/java` directory][tests] that you can use as a reference when developing apps with IOTA.\nA good starter is the [`IotaAPITest` case](https://github.com/iotaledger/iota-java/blob/master/jota/src/test/java/jota/IotaAPITest.java).\n\n## Change logs:\n- Changes in [**1.0.0-beta3**](https://github.com/iotaledger/iota-java/compare/1.0.0-beta2...1.0.0-beta3)\n- Changes in [**1.0.0-beta2**](https://github.com/iotaledger/iota-java/compare/1.0.0-beta1...1.0.0-beta2)\n- Changes in [**1.0.0-beta1**](https://github.com/iotaledger/iota-java/compare/0.9.10...1.0.0-beta1)\n- Changes in [**v0.9.10**](https://github.com/iotaledger/iota-java/compare/v0.9.6...0.9.10)\n- Changes in [**v0.9.6**](https://github.com/iotaledger/iota-java/compare/v0.9.5...v0.9.6)\n- Changes in [**v0.9.5**](https://github.com/iotaledger/iota-java/compare/v0.9.4...v0.9.5)\n- Changes in [**v0.9.4**](https://github.com/iotaledger/iota-java/compare/v0.9.3...v0.9.4)\n- Changes in [**v0.9.3**](https://github.com/iotaledger/iota-java/compare/v0.9.2...v0.9.3)\n- Changes in [**v0.9.2**](https://github.com/iotaledger/iota-java/compare/v0.9.1...v0.9.2)\n- Changes in [**v0.9.1**](https://github.com/iotaledger/iota-java/commits/v0.9.1)\n\n## Support the project\n\nIf the IOTA Java client library has been useful to you and you feel like contributing, consider posting a [bug report](https://github.com/iotaledger/iota-java/issues/new-issue), feature request or a [pull request](https://github.com/iotaledger/iota-java/pulls/).  \nWe have some [basic contribution guidelines](https://github.com/iotaledger/iota-java/blob/dev/CONTRIBUTING.md) to keep our code base stable and consistent.\n\n## Join the Discussion\n\nIf you want to get involved in the community, need help with getting setup, have any issues related with the library or just want to discuss blockchain, distributed ledgers, and IoT with other people, feel free to join our [Discord](https://discordapp.com/invite/fNGZXvh).  \n\n## License\n\nThe Apache 2.0 license can be found [here](https://github.com/iotaledger/iota-java/blob/dev/LICENSE).","title":"IOTA Java | Libraries | Client Libraries"}}
