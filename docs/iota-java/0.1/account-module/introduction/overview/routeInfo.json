{"path":"docs/iota-java/0.1/account-module/introduction/overview","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# アカウントモジュール入門\n<!-- # Get started with the account module -->\n\n**アカウントは、トランザクションの送受信を容易にするオブジェクトです。アカウントは、アドレスやペンディング中のバンドルハッシュなどのデータをローカルデータベースに保存します。このデータにより、使用済みアドレスからの取り出しやペンディング中のトランザクションの促進と再添付を心配することなく、IOTAネットワークと対話できます。**\n<!-- **An account is an object that makes it easier to send and receive transactions. Accounts store data such as addresses and pending bundle hashes in a local database. This data allows you to interact with an IOTA network without worrying about withdrawing from spent addresses or promoting and reattaching pending transactions.** -->\n\nアカウントはIOTAプロトコルの複雑さを抽象化し、支払いに集中できるようにします。アカウントでは、支払いは次の2つのタイプのいずれかになります。\n<!-- Accounts abstract the complexity of the IOTA protocol and allow you to focus on making payments. In accounts, a payment can be one of two types: -->\n\n* **入金：**アカウントにIOTAトークンを預け入れるバンドル\n* **支払：**アカウントからIOTAトークンを取り出すバンドル\n<!-- * **Incoming payment:** A bundle that deposits IOTA tokens into an account -->\n<!-- * **Outgoing payment:** A bundle that withdraws IOTA tokens from an account -->\n\n:::warning:ベータソフトウェアです！\nクライアントライブラリは2019年現在ベータ版であり、運用環境では使用しないでください。\n:::\n<!-- :::warning:Beta software -->\n<!-- The client libraries are currently in beta and you should not use them in production environments. -->\n<!-- ::: -->\n\n## 対象読者\n<!-- ## Audience -->\n\nこのドキュメントは、Javaプログラミング言語とオブジェクト指向プログラミングの概念に精通している開発者向けに設計されています。 また、[アドレスの再利用](/docs/dev-essentials/0.1/concepts/addresses-and-signatures#address-reuse)、[バンドル、トランザクション](/docs/dev-essentials/0.1/concepts/bundles-and-transactions)などのIOTAの基本的な概念にも精通している必要があります。\n<!-- This documentation is designed for developers who are familiar with the Java programming language and object-oriented programming concepts. You should also be familiar with basic IOTA concepts such as [address reuse](/docs/dev-essentials/0.1/concepts/addresses-and-signatures#address-reuse), [bundles, and transactions](/docs/dev-essentials/0.1/concepts/bundles-and-transactions). -->\n\n## 前提条件\n<!-- ## Prerequisites -->\n\nこのライブラリを使用するには、Java 6（以上）が必要です。\n<!-- To use this library, you must have Java 6 (or later). -->\n\n## ライブラリをインストールする\n<!-- ## Install the library -->\n\nIOTA Javaクライアントライブラリは[JitPack](https://jitpack.io/)で入手できます。\n<!-- The IOTA Java client library is available on [JitPack][https://jitpack.io/]. -->\n\n### 依存関係\n<!-- ### Dependencies -->\n\nJavaライブラリは、次のサードパーティライブラリを使用します。\n<!-- The Java library uses the following third-party libraries: -->\n\n* [Retrofit 2](https://square.github.io/retrofit/) type-safe HTTP client: `2.3.0`\n* [Simple Logging Facade for Java](http://www.slf4j.org/): `1.7.25`\n* [Apache Commons Lang](http://commons.apache.org/proper/commons-lang/): `3.6`\n* [Apache Commons IO](http://commons.apache.org/proper/commons-io/): `2.5`\n* [Legion of the Bouncy Castle](https://www.bouncycastle.org/java.html) Java cryptography APIs: `1.58`\n\nIOTA Javaクライアントライブラリとその依存関係をダウンロードするには、次のオプションのいずれかを使用できます。\n<!-- To download the IOTA Java client library and its dependencies, you can use one of the following options: -->\n\n* [Gradleでライブラリをダウンロードする](#install-the-library-with-gradle)\n<!-- * Download the library with Gradle -->\n* [Mavenでライブラリをダウンロードする](#install-the-library-with-maven)\n<!-- * Download the library with Maven -->\n* [ライブラリを手動でダウンロードする](#install-the-library-manually)\n<!-- * Download the library manually -->\n\n<a name=\"install-the-library-with-gradle\"></a>\n### Gradleでライブラリをダウンロードする\n<!-- ### Install the library with Gradle -->\n\n1. JitPackリポジトリをルートの`build.gradle`ファイルに追加します。\n  <!-- 1. Add the JitPack repository to your root `build.gradle` file -->\n\n    ```gradle\n    allprojects {\n        repositories {\n            maven { url 'https://jitpack.io' }\n        }\n    }\n    ```\n\n2. iotaledger依存関係をモジュールの`build.gradle`ファイルに追加します。\n  <!-- 2. Add the iotaledger dependency to your module `build.gradle` file -->\n\n    ```gradle\n    dependencies {\n        compile 'com.github.iotaledger:iota-java:1.0.0-beta3'\n    }\n    ```\n\n<a name=\"install-the-library-with-maven\"></a>\n### Mavenでライブラリをダウンロードする\n<!-- ### Install the library with Maven -->\n\n1. JitPackリポジトリをルートの`pom.xml`ファイルに追加します。\n  <!-- 1. Add the JitPack repository to your root `pom.xml` file -->\n\n    ```xml\n    <repositories>\n        <repository>\n            <id>jitpack.io</id>\n            <url>https://jitpack.io</url>\n        </repository>\n    </repositories>\n    ```\n\n2. iotaledger依存関係をモジュールの`pom.xml`ファイルに追加します。\n  <!-- 2. Add the iotaledger dependency to your module `pom.xml` file -->\n\n    ```xml\n    <dependency>\n        <groupId>com.github.iotaledger.iota-java</groupId>\n        <artifactId>jota</artifactId>\n        <classifier>jar-with-dependencies</classifier>\n        <version>[VERSION_INFORMATION]</version>\n    </dependency>\n    ```\n\n3. `<version>`タグの値をリリース番号またはGitコミットハッシュの最初の10文字に変更します：`<version>a98de8ea50</version>`または`<version>1.0.0-beta3</version>`\n  <!-- 3. Change the value of the `<version>` tag to either a release number or the first 10 characters of a Git commit hash: `<version>a98de8ea50</version>` or `<version>1.0.0-beta3</version>` -->\n\n:::info:\n[JitPack](https://jitpack.io/#iotaledger/iota-java)ページで最新バージョンを見つけます。\n:::\n<!-- :::info: -->\n<!-- Find the latest version on the [JitPack](https://jitpack.io/#iotaledger/iota-java) page. -->\n<!-- ::: -->\n\n<a name=\"install-the-library-manually\"></a>\n### ライブラリを手動でダウンロードする\n<!-- ### Install the library manually -->\n\n1. [GitHubリポジトリ](https://github.com/iotaledger/iota-java)をクローンするかダウンロードします。\n  <!-- 1. Clone or download the [GitHub repository](https://github.com/iotaledger/iota-java) -->\n\n    プロジェクト内には、次のディレクトリがあります。\n    <!-- Inside the project, you'll have the following directories: -->\n    * jota\n    * jota-parent\n\n2. プロジェクトのjotaディレクトリを参照します。\n  <!-- 2. Reference the jota directory in your project -->\n\n3. `jota`ディレクトリに依存関係をインストールします。\n  <!-- 3. In the `jota` directory, install the dependencies -->\n\n    ```bash\n    mvn clean install\n    ```\n\nこれで、ライブラリのバージョンに応じて、`jota-[VERSION]-jar-with-dependencies.jar`ファイルが作成されました。\n<!-- Now, you have a `jota-[VERSION]-jar-with-dependencies.jar` file, depending on your version of the library. -->\n\n## 始める\n<!-- ## Get started -->\n\nライブラリをインストールしたら、[新しいアカウントを作成](../how-to-guides/create-account.md)できます。\n<!-- After you've installed the library, you can [create a new account](../how-to-guides/create-account.md). -->\n\nほとんどのAPI呼び出しは**同期**です。そのため、APIをバックグラウンドスレッドまたはワーカースレッドから呼び出して、APIがUIやメインスレッドなどの他のスレッドをブロックしないようにすることをお勧めします。\n<!-- Most API calls are **synchronous**. As a result, we recommend that you call the API from a background thread or a worker thread to stop the API from blocking other threads such as the UI or the main thread. -->\n\n## APIリファレンス\n<!-- ## API reference -->\n\nJavaライブラリのAPIコマンドの完全なリストについては、[iotaledgerのGitHubページ](https://github.com/iotaledger/iota-java/tree/dev/jota/src/main/java/org/iota/jota/account)にアクセスしてください。\n<!-- For a full list of API commands for the Java library, go to the [iotaledger GitHub page](https://github.com/iotaledger/iota-java/tree/dev/jota/src/main/java/org/iota/jota/account). -->\n\n## プロジェクトをサポートする\n<!-- ## Support the project -->\n\nJavaライブラリが役に立ち、貢献したいと思う場合は、[バグレポート](https://github.com/iotaledger/iota-java/issues/new-issue)、機能要求、または[プルリクエスト](https://github.com/iotaledger/iota-java/pulls/)の投稿を検討してください。コードベースの安定性と一貫性を保つために、[基本的な貢献ガイドライン](https://github.com/iotaledger/iota-java/blob/dev/CONTRIBUTING.md)があります。\n<!-- If the Java library has been useful to you and you feel like contributing, consider posting a [bug report](https://github.com/iotaledger/iota-java/issues/new-issue), feature request or a [pull request](https://github.com/iotaledger/iota-java/pulls/). -->\n<!-- We have some [basic contribution guidelines](https://github.com/iotaledger/iota-java/blob/dev/CONTRIBUTING.md) to keep our code base stable and consistent. -->\n\n### ドキュメントを更新する\n<!-- ### Update documentation -->\n\n変更内容がドキュメントに影響する場合は、ドキュメントを更新してください。\n<!-- If your changes affect the documentation, please update it. -->\n\n## ディスカッションに参加する\n<!-- ## Join the discussion -->\n\n[Discord](https://discord.iota.org)に参加して、コミュニティに参加したり、助けを求めたり、技術について話し合ったりしてください。\n<!-- Join our [Discord](https://discord.iota.org) to get involved in the community, ask for help, or to discuss the technology. -->\n","title":"アカウント入門 | 序説 | アカウント | Javaライブラリ"}}
