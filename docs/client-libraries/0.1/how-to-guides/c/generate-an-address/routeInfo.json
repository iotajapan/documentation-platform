{"path":"docs/client-libraries/0.1/how-to-guides/c/generate-an-address","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# Generate an address in C\n\n**In this guide, you learn how to generate a new address for a [seed](/docs/getting-started/0.1/clients/seeds) with a given [security level](/docs/getting-started/0.1/clients/security-levels).**\n\n## IOTA network\n\nIn this guide, we connect to a [node](/docs/getting-started/0.1/network/nodes) on the [Devnet](/docs/getting-started/0.1/network/iota-networks#devnet), and we generate an address with security level 2.\n\nThe network settings are defined in a `config.h` file, which we create in the [getting started guide](../../getting-started/c-quickstart.md).\n\n## Code walkthrough\n\n1. Import the packages\n\n    ```cpp\n    #include \"cclient/api/core/core_api.h\"\n    #include \"cclient/api/extended/extended_api.h\"\n\n    #include \"common/trinary/tryte_ascii.h\"\n    #include \"utils/time.h\"\n    #include <inttypes.h>\n    #include \"iota_client_service/config.h\"\n    #include \"iota_client_service/client_service.h\"\n\n    #include \"iota_client_service/config.h\"\n    ```\n\n2. Define a seed for which to generate an address\n\n    ```cpp\n    static tryte_t const *const SEED =\n        (tryte_t *)\"G9JEMIRJKUXDKUPPAIMEQSGVADYLSJRSBTEIRDWSCTLCVQOJWBM9XESTWTSONOTDDQUXMYCNVAKZWPPYW\";\n    ```\n\n3. Use the [`get_new_address()`](https://github.com/iotaledger/entangled/blob/develop/cclient/api/extended/get_new_address.h) method to generate an unspent address\n\n    ```cpp\n    flex_trit_t seed[FLEX_TRIT_SIZE_243];\n\n    // Convert the seed from trytes to trits\n    // For more information about trits and trytes, see the IOTA documentation portal: https://docs.iota.org/docs/getting-started/0.1/introduction/ternary\n    if (flex_trits_from_trytes(seed, NUM_TRITS_ADDRESS, SEED, NUM_TRYTES_ADDRESS, NUM_TRYTES_ADDRESS) == 0) {\n        printf(\"Failed to convert trytes to trits\\n\");\n        return ret;\n    }\n\n    // Set the options to get one new address\n    address_opt_t opt = {.security = SECURITY_LEVEL, .start = 0, .total = 0};\n\n    // Get the new address and print it to the console\n    if ((ret = iota_client_get_new_address(s, seed, opt, &addresses)) == RC_OK) {\n        printf(\"Your new address is: \");\n        flex_trit_print(addresses->prev->hash, NUM_TRITS_ADDRESS);\n        printf(\"\\n\");\n    } else {\n        printf(\"Failed to get a new address: Error code %s\\n\", error_2_string(ret));\n    }\n    // Free the object\n    hash243_queue_free(&addresses);\n\n    return ret;\n    ```\n\nStarting from the given `start` index, the connected node checks if the address is spent by doing the following:\n\n- Search its view of the Tangle for input transactions that withdraw from the address\n- Search for the address in the list of spent addresses\n\nIf an address with the given index is spent, the index is incremented until the node finds one that isn't spent.\n\n:::warning:\nThis way of generating addresses replies on the node to return valid data about your addresses. To have more control over your addresses, we recommend keeping track of spent addresses in your own local database.\n:::\n\nIn the console, you should see an address.\n\n```\nYour address is: WKJDF9LVQCVKEIVHFAOMHISHXJSGXWBJFYEQPOQKSVGZZFLTUUPBACNQZTAKXR9TFVKBGYSNSPHRNKKHA\n```\n\n:::success:Congratulations :tada:\nYou've just generated a new unspent address. You can share this address with anyone who wants to send you a transaction.\n:::\n\n## Run the code\n\nThese code samples are hosted on [GitHub](https://github.com/JakeSCahill/c-iota-workshop).\n\nTo get started you need [Git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git) installed on your device.\n\nYou also need a C development environment. If this is your first time using the C client library, complete our [getting started guide](../../getting-started/c-quickstart.md).\n\nIn the command-line, do the following:\n\n```bash\ngit clone https://github.com/iota-community/c-iota-workshop.git\ncd c-iota-workshop\nbazel run -c opt examples:generate_address\n```\n\nIn the console, you should see an address.\n\n```\nYour address is: WKJDF9LVQCVKEIVHFAOMHISHXJSGXWBJFYEQPOQKSVGZZFLTUUPBACNQZTAKXR9TFVKBGYSNSPHRNKKHA\n```\n\n## Next steps\n\n[Send test IOTA tokens to your new address](../c/transfer-iota-tokens.md).\n","title":"新しいアドレスを生成する | C | ハウツーガイド | CLライブラリ"}}
