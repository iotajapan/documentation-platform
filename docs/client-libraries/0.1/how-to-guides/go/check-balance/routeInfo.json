{"path":"docs/client-libraries/0.1/how-to-guides/go/check-balance","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# Go でアドレスの残高を確認する\n<!-- # Check the balance of an address in Java -->\n\n**このガイドでは，[ノード](/docs/getting-started/0.1/network/nodes)から[アドレス](/docs/getting-started/0.1/clients/addresses)の [IOTA トークン](/docs/getting-started/0.1/clients/token)の残高をリクエストします．**\n<!-- **In this guide, you request the balance of [IOTA tokens](/docs/getting-started/0.1/clients/token) on [addresses](/docs/getting-started/0.1/clients/addresses) from a [node](/docs/getting-started/0.1/network/nodes).** -->\n\n## パッケージ\n<!-- ## Packages -->\n\nこのガイドを完了するには，以下のパッケージをインストールする必要があります（Go モジュールを使用している場合は，以下のパッケージを参照するだけです）．\n<!-- To complete this guide, you need to install the following packages (if you're using Go modules, you just need to reference them): -->\n\n```bash\ngo get github.com/iotaledger/iota.go/api\ngo get github.com/iotaledger/iota.go/trinary\n```\n\n## IOTA ネットワーク\n<!-- ## IOTA network -->\n\nこのガイドでは，[デブネット](/docs/getting-started/0.1/network/iota-networks#devnet)の[ノード](/docs/getting-started/0.1/network/nodes)に接続します．\n<!-- In this guide, we connect to a node on the [Devnet](/docs/getting-started/0.1/network/iota-networks#devnet). -->\n\n## コードウォークスルー\n<!-- ## Code walkthrough -->\n\n1. パッケージをインポートします．\n  <!-- 1. Import the packages -->\n\n    ```go\n    package main\n\n    import (\n        . \"github.com/iotaledger/iota.go/api\"\n        \"github.com/iotaledger/iota.go/trinary\"\n        \"fmt\"\n    )\n    ```\n\n2. ノードに接続します．\n  <!-- 2. Connect to a node -->\n\n    ```go\n    var node = \"https://nodes.devnet.thetangle.org\"\n    api, err := ComposeAPI(HTTPClientSettings{URI: node})\n    must(err)\n    ```\n\n3. 残高を確認するアドレスを定義します．\n  <!-- 3. Define the address whose balance you want to check -->\n\n    ```go\n    const address = trinary.Trytes(\"MBYBBFONQZPYZYZHSEZJ9EBEBAFHAZKUFSPBM9YOXJUUAMBUCQQABOWFNPEAGXIGMAVWWFZWDCZJGUTBBZYDSALMPA\")\n    ```\n\n4. [`GetBalances()`](https://github.com/iotaledger/iota.go/blob/master/.docs/iota.go/reference/api_get_balances.md) メソッドを使用して，ノードにアドレスの現在の残高を尋ねます．\n  <!-- 4. Use the [`GetBalances()`](https://github.com/iotaledger/iota.go/blob/master/.docs/iota.go/reference/api_get_balances.md) method to ask the node for the current balance of the address -->\n\n    ```go\n    balances, err := api.GetBalances(trinary.Hashes{address}, 100)\n    must(err)\n    fmt.Println(\"\\nBalance: \", balances.Balances[0])\n    ```\n\n    コンソールに，IOTAトークンの残高が表示されます．\n    <!-- In the console, you should see a balance of IOTA tokens: -->\n\n    ```bash\n    Balance: 500\n    ```\n\n:::success:おめでとうございます:tada:\nアドレスの残高を確認しました．\n:::\n<!-- :::success:Congratulations :tada: -->\n<!-- You've just checked the balance of an address. -->\n<!-- ::: -->\n\n## コードを実行する\n<!-- ## Run the code -->\n\n[REPL.it ツール](https://repl.it)を使用して，ブラウザーでサンプルコードを実行できます．\n<!-- We use the [REPL.it tool](https://repl.it) to allow you to run sample code in the browser. -->\n\n緑色のボタンをクリックして，このガイドのサンプルコードを実行し，ウィンドウで結果を確認できます．\n<!-- Click the green button to run the sample code in this guide and see the results in the window. -->\n\n<iframe height=\"600px\" width=\"100%\" src=\"https://repl.it/@jake91/Check-the-balance-of-an-address-Go?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n\n## 次のステップ\n<!-- ## Next steps -->\n\n[タングル上のライブトランザクションをリッスンする](../go/listen-for-transactions.md)．\n<!-- [Listen for live transactions on the Tangle](../go/listen-for-transactions.md). -->\n\n[タングルエクスプローラー](https://utils.iota.org)などのユーティリティを使用して，アドレスの残高を確認することもできます．\n<!-- You can also check the balance of an address, using a utility such as the [Tangle explorer](https://utils.iota.org). -->\n","title":"アドレスの残高を確認する | Go | ハウツーガイド | クライアントライブラリ"}}
