{"path":"docs/client-libraries/0.1/how-to-guides/go/generate-an-address","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# Go でアドレスを生成する\n<!-- # Generate an address in Go -->\n\n**このガイドでは、[セキュリティレベル](/docs/getting-started/0.1/clients/security-levels)を指定して[シード](/docs/getting-started/0.1/clients/seeds)の新しいアドレスを生成する方法を学習します。**\n<!-- **In this guide, you learn how to generate a new address for a [seed](/docs/getting-started/0.1/clients/seeds) with a given [security level](/docs/getting-started/0.1/clients/security-levels).** -->\n\n## パッケージ\n<!-- ## Packages -->\n\nこのガイドを完了するには、以下のパッケージをインストールする必要があります（Go モジュールを使用している場合は、以下のパッケージを参照するだけです）。\n<!-- To complete this guide, you need to install the following packages (if you're using Go modules, you just need to reference them): -->\n\n```bash\ngo get github.com/iotaledger/iota.go/api\ngo get github.com/iotaledger/iota.go/trinary\n```\n\n## IOTA ネットワーク\n<!-- ## IOTA network -->\n\nこのガイドでは、[デブネット](/docs/getting-started/0.1/network/iota-networks#devnet)の[ノード](/docs/getting-started/0.1/network/nodes)に接続します。\n<!-- In this guide, we connect to a [node](/docs/getting-started/0.1/network/nodes) on the [Devnet](/docs/getting-started/0.1/network/iota-networks#devnet). -->\n\n## コードウォークスルー\n<!-- ## Code walkthrough -->\n\n1. パッケージをインポートします。\n  <!-- 1. Import the packages -->\n\n    ```go\n    package main\n\n    import (\n        . \"github.com/iotaledger/iota.go/api\"\n        \"github.com/iotaledger/iota.go/trinary\"\n        \"fmt\"\n    )\n    ```\n\n2. ノードに接続します。\n  <!-- 2. Connect to a node -->\n\n    ```go\n    var node = \"https://nodes.devnet.thetangle.org\"\n    api, err := ComposeAPI(HTTPClientSettings{URI: node})\n    must(err)\n    ```\n\n3. アドレスに使用するセキュリティレベルを定義します。\n  <!-- 3. Define the security level that you want to use for your address -->\n\n    ```go\n    const securityLevel = 2;\n    ```\n\n4. 生成するアドレスのシードを定義します。\n  <!-- 4. Define a seed for which to generate an address -->\n\n    ```go\n    const seed = trinary.Trytes(\"PUETPSEITFEVEWCWBTSIZM9NKRGJEIMXTULBACGFRQK9IMGICLBKW9TTEVSDQMGWKBXPVCBMMCXWMNPDX\")\n    ```\n\n5. [`GetNewAddress()`](https://github.com/iotaledger/iota.go/blob/master/.docs/iota.go/reference/api_get_new_address.md) メソッドを使用して、未使用のアドレスを生成します。\n  <!-- 5. Use the [`GetNewAddress()`](https://github.com/iotaledger/iota.go/blob/master/.docs/iota.go/reference/api_get_new_address.md) method to generate an unspent address -->\n\n    ```go\n    addresses, err := api.GetNewAddress(seed, GetNewAddressOptions{Security:securityLevel})\n    must(err)\n\n    fmt.Println(\"\\nYour address is: \", addresses[0])\n    ```\n\n接続されたノードは、指定されたインデックスから開始して、次の操作を実行してアドレスが使用されているかどうかを確認します。\n<!-- Starting from the given index, the connected node checks if the address is spent by doing the following: -->\n\n- アドレスから IOTA トークンを取り出す入力トランザクションがタングルの概観内にあるかどうかを検索する。\n<!-- - Search its view of the Tangle for input transactions that withdraw from the address -->\n- 使用済みアドレスのリスト内にアドレスがあるかどうかを検索する。\n<!-- - Search for the address in the list of spent addresses -->\n\n指定されたインデックスのアドレスが使用されていると、ノードは使用されていないアドレスを見つけるまでインデックスを増分します。\n<!-- If an address with the given index is spent, the index is incremented until the node finds one that isn't spent. -->\n\n:::warning:\nノードでアドレス応答を生成するこの方法は、アドレスに関する有効なデータを返します。アドレスをより細かく制御するには、[アカウントモジュール](../../account-module/introduction/overview.md)を使用して、ローカルデータベース内に保存した使用済みアドレスを追跡することをお勧めします。\n:::\n<!-- :::warning: -->\n<!-- This way of generating addresses replies on the node to return valid data about your addresses. To have more control over your addresses, we recommend using the [account module](../../account-module/introduction/overview.md) to keep track of spent addresses in your own local database. -->\n<!-- ::: -->\n\nコンソールにアドレスが表示されます。\n<!-- In the console, you should see an address. -->\n\n```bash\nYour address is: WKJDF9LVQCVKEIVHFAOMHISHXJSGXWBJFYEQPOQKSVGZZFLTUUPBACNQZTAKXR9TFVKBGYSNSPHRNKKHA\n```\n\n:::success:おめでとうございます:tada:\n新しい未使用のアドレスが生成されました。このアドレスは、トランザクションを送信したい人と共有可能です。\n:::\n<!-- :::success:Congratulations :tada: -->\n<!-- You've just generated a new unspent address. You can share this address with anyone who wants to send you a transaction. -->\n<!-- ::: -->\n\n## コードを実行する\n<!-- ## Run the code -->\n\n[REPL.it ツール](https://repl.it)を使用して、ブラウザーでサンプルコードを実行できます。\n<!-- We use the [REPL.it tool](https://repl.it) to allow you to run sample code in the browser. -->\n\n緑色のボタンをクリックして、このガイドのサンプルコードを実行し、ウィンドウで結果を確認できます。\n<!-- Click the green button to run the sample code in this guide and see the results in the window. -->\n\n<iframe height=\"600px\" width=\"100%\" src=\"https://repl.it/@jake91/Generate-an-address-Go?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n\n## 次のステップ\n<!-- ## Next steps -->\n\n[新しいアドレスにテスト IOTA トークンを送信する](../go/transfer-iota-tokens.md)。\n<!-- [Send test IOTA tokens to your new address](../go/transfer-iota-tokens.md). -->\n","title":"新しいアドレスを生成する | Go | ハウツーガイド | CL ライブラリ"}}
