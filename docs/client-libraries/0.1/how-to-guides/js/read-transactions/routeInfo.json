{"path":"docs/client-libraries/0.1/how-to-guides/js/read-transactions","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# Node.js でタングル上のトランザクションを読む\n<!-- # Read transactions on the Tangle in Node.js -->\n\n**このガイドでは、[ノード](/docs/getting-started/0.1/network/nodes)に接続し、特定のバンドルハッシュを持つトランザクションのみを返すように要求することで、タングル上の \"hello world\" [トランザクション](/docs/getting-started/0.1/transactions/transactions)を読みます。**\n<!-- **In this guide, you read your \"hello world\" [transaction](/docs/getting-started/0.1/transactions/transactions) on the Tangle by connecting to a [node](/docs/getting-started/0.1/network/nodes) and asking it to return only transactions with a given bundle hash.** -->\n\n## パッケージ\n<!-- ## Packages -->\n\nこのガイドを完了するには、次のパッケージをインストールする必要があります。\n<!-- To complete this guide, you need to install the following packages: -->\n\n--------------------\n### npm\n```bash\nnpm install @iota/core @iota/extract-json\n```\n---\n### Yarn\n```bash\nyarn add @iota/core @iota/extract-json\n```\n--------------------\n\n## IOTA ネットワーク\n<!-- ## IOTA network -->\n\nこのガイドでは、[デブネット](/docs/getting-started/0.1/network/iota-networks#devnet)の[ノード](/docs/getting-started/0.1/network/nodes)に接続します。\n<!-- In this guide, we connect to a node on the [Devnet](/docs/getting-started/0.1/network/iota-networks#devnet). -->\n\n## コードウォークスルー\n<!-- ## Code walkthrough -->\n\n1. パッケージをリクワイアします。\n  <!-- 1. Require the packages -->\n\n    ```js\n    const Iota = require('@iota/core');\n    const Extract = require('@iota/extract-json');\n    ```\n\n2. ノードに接続します。\n  <!-- 2. Connect to a node -->\n\n    ```js\n    const iota = Iota.composeAPI({\n    provider: 'https://nodes.devnet.iota.org:443'\n    });\n    ```\n\n3. トランザクションのフィルタリングに使用するバンドルハッシュを定義します。\n  <!-- 3. Define the bundle hash that you want to use to filter transactions -->\n\n    ```js\n    const bundle =\n    'SIHQISXRUHFGZBCHOQLRYFXYTQBIERIJZHCHUUJZPAZC9YEQQVXAJFZNZKEBKPILI9GHYX9QCPAYGFWDD';\n    ```\n\n4. [`findTransactionObjects()`](https://github.com/iotaledger/iota.js/blob/next/api_reference.md#module_core.findTransactionObjects) メソッドを使用して、`bundle` フィールドの値でトランザクションを取得します。次に、[`extractJSON()`](https://github.com/iotaledger/iota.js/tree/next/packages/extract-json) メソッドを使用して、トランザクションの `signatureMessageFragment` フィールドの JSON メッセージをデコードし、コンソールに出力します。\n  <!-- 4. Use the [`findTransactionObjects()`](https://github.com/iotaledger/iota.js/blob/next/api_reference.md#module_core.findTransactionObjects) method to get transactions by the value of their `bundle` field. Then, use the [`extractJSON()`](https://github.com/iotaledger/iota.js/tree/next/packages/extract-json) method to try to decode the JSON message in the `signatureMessageFragment` fields of the transactions and print it to the console -->\n\n    ```js\n    iota.findTransactionObjects({ bundles: [bundle] })\n    .then(bundle => {\n        console.log(JSON.parse(Extract.extractJson(bundle)));\n    })\n    .catch(err => {\n        console.error(err);\n    });\n    ```\n\n    コンソールに、JSON メッセージが表示されます。\n    In the console, you should see your JSON message:\n\n    ```json\n    {\"message\": \"Hello world\"}\n    ```\n\n:::success:おめでとうございます:tada:\nタングル上のトランザクションを見つけて読み取りました。\n:::\n<!-- :::success:Congratulations :tada: -->\n<!-- You've just found and read a transaction on the Tangle. -->\n<!-- ::: -->\n\n## コードを実行する\n<!-- ## Run the code -->\n\n[REPL.it ツール](https://repl.it)を使用して、ブラウザーでサンプルコードを実行できます。\n<!-- We use the [REPL.it tool](https://repl.it) to allow you to run sample code in the browser. -->\n\nこのガイドのサンプルコードを実行してウィンドウに結果を表示するには、緑色のボタンをクリックします。\n<!-- Click the green button to run the sample code in this guide and see the results in the window. -->\n\n<iframe height=\"600px\" width=\"100%\" src=\"https://repl.it/@jake91/Read-a-transaction-on-the-Tangle?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n\n## 次のステップ\n<!-- ## Next steps -->\n\n[新しいアドレスを生成する](../js/generate-an-address.md)。\n<!-- [Generate a new address](../js/generate-an-address.md). -->\n","title":"タングル上のトランザクションを読む | JavaScript | ハウツーガイド | CLライブラリ"}}
