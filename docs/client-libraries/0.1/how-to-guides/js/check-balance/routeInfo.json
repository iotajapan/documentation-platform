{"path":"docs/client-libraries/0.1/how-to-guides/js/check-balance","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# Node.js でアドレスの残高を確認する\n<!-- # Check the balance of an address in Node.js -->\n\n**このガイドでは、[ノード](/docs/getting-started/0.1/network/nodes)から[アドレス](/docs/getting-started/0.1/clients/addresses)の [IOTA トークン](/docs/getting-started/0.1/clients/token)の残高をリクエストします。**\n<!-- **In this guide, you request the balance of [IOTA tokens](/docs/getting-started/0.1/clients/token) on [addresses](/docs/getting-started/0.1/clients/addresses) from a [node](/docs/getting-started/0.1/network/nodes).** -->\n\n## パッケージ\n<!-- ## Packages -->\n\nこのガイドを完了するには、次のパッケージをインストールする必要があります。\n<!-- To complete this guide, you need to install the following package: -->\n\n--------------------\n### npm\n```bash\nnpm install @iota/core\n```\n---\n### Yarn\n```bash\nyarn add @iota/core\n```\n--------------------\n\n## IOTA ネットワーク\n<!-- ## IOTA network -->\n\nこのガイドでは、[デブネット](/docs/getting-started/0.1/network/iota-networks#devnet)の[ノード](/docs/getting-started/0.1/network/nodes)に接続します。\n<!-- In this guide, we connect to a node on the [Devnet](/docs/getting-started/0.1/network/iota-networks#devnet). -->\n\n## コードウォークスルー\n<!-- ## Code walkthrough -->\n\n1. パッケージをリクワイアします。\n  <!-- 1. Require the packages -->\n\n    ```js\n    const Iota = require('@iota/core');\n    ```\n\n2. ノードに接続します。\n  <!-- 2. Connect to a node -->\n\n    ```js\n    const iota = Iota.composeAPI({\n    provider: 'https://nodes.devnet.iota.org:443'\n    });\n    ```\n\n3. 残高を確認するアドレスを定義します。\n  <!-- 3. Define the address whose balance you want to check -->\n\n    ```js\n    const address =\n    'NBZLOBCWG9BAQTODDKNF9LYYTBOUWSQSGCWFQVZZR9QXCOAIBRYDTZOEGBGMZKJYZOPPGRGFFWTXUKUKW';\n    ```\n\n4. [`getBalances()`](https://github.com/iotaledger/iota.js/blob/next/api_reference.md#module_core.getBalances) メソッドを使用して、ノードにアドレスの現在の残高を尋ねます。\n  <!-- 4. Use the [`getBalances()`](https://github.com/iotaledger/iota.js/blob/next/api_reference.md#module_core.getBalances) method to ask the node for the current balance of the address -->\n\n    ```js\n    iota.getBalances([address], 100)\n      .then(({ balances }) => {\n      console.log(balances)\n      })\n      .catch(err => {\n      console.error(err)\n      });\n    ```\n\n    コンソールに、IOTA トークンの残高が表示されます。\n    <!-- In the console, you should see a balance of IOTA tokens: -->\n\n    ```bash\n    [500]\n    ```\n\n:::success:おめでとうございます:tada:\nアドレスの残高を確認しました。\n:::\n<!-- :::success:Congratulations :tada: -->\n<!-- You've just checked the balance of an address. -->\n<!-- ::: -->\n\n## コードを実行する\n<!-- ## Run the code -->\n\n[REPL.it ツール](https://repl.it)を使用して、ブラウザーでサンプルコードを実行できます。\n<!-- We use the [REPL.it tool](https://repl.it) to allow you to run sample code in the browser. -->\n\n緑色のボタンをクリックして、このガイドのサンプルコードを実行し、ウィンドウで結果を確認できます。\n<!-- Click the green button to run the sample code in this guide and see the results in the window. -->\n\n<iframe height=\"600px\" width=\"100%\" src=\"https://repl.it/@jake91/Check-the-balance-of-an-address?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n\n## 次のステップ\n<!-- ## Next steps -->\n\n[タングル上のライブトランザクションをリッスンする](../js/listen-for-transactions.md)。\n<!-- [Listen for live transactions on the Tangle](../js/listen-for-transactions.md). -->\n\n[タングルエクスプローラー](https://utils.iota.org)などのユーティリティを使用して、アドレスの残高を確認することもできます。\n<!-- You can also check the balance of an address, using a utility such as the [Tangle explorer](https://utils.iota.org). -->\n","title":"アドレスの残高を確認する | JavaScript | ハウツーガイド | CL ライブラリ"}}
