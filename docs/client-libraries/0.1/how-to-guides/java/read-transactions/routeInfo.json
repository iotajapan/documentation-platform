{"path":"docs/client-libraries/0.1/how-to-guides/java/read-transactions","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# Read transactions on the Tangle in Java\n\n**In this guide, you get [transactions](/docs/getting-started/0.1/transactions/transactions) from the Tangle by connecting to a [node](/docs/getting-started/0.1/network/nodes) and asking it to filter them by their bundle hash. Then, you decode the message in the transaction and print it to the console.**\n\n## IOTA network\n\nIn this guide, we connect to a node on the [Devnet](/docs/getting-started/0.1/network/iota-networks#devnet).\n\n## Code walkthrough\n\n1. Import the classes\n\n    ```java\n    import java.io.IOException;\n    import java.util.List;\n\n    import com.fasterxml.jackson.core.JsonParseException;\n    import com.fasterxml.jackson.databind.JsonMappingException;\n\n    import org.iota.jota.IotaAPI;\n    import org.iota.jota.error.ArgumentException;\n    import org.iota.jota.model.Transaction;\n    import org.iota.jota.utils.TrytesConverter;\n    ```\n2. Connect to a node\n\n    ```java\n    IotaAPI api = new IotaAPI.Builder()\n            .protocol(\"https\")\n            .host(\"nodes.devnet.thetangle.org\")\n            .port(443)\n            .build();\n    ```\n\n3. Define the bundle hash that you want to use to filter transactions \n\n    ```java\n    String bundleHash = \"HGRGBSAQSKSBCDCX9IFUKDWYTJDKEMHAKWH9LJ9JCBL9EWHLSZQZYQXDZKVICNZKWKKUNTD9OSLVVEGFA\";\n    ```\n\n4. Use the `findTransactionObjectsByBundle()` method to get transactions by the value of their `bundle` field. Then, get the message in the first transaction's `signatureMessageFragment` field, decode it, and print it to the console\n\n    ```java\n    try { \n        List<Transaction> response = api.findTransactionObjectsByBundle(bundleHash);\n        System.out.println(TrytesConverter.trytesToAscii(response.get(0).getSignatureFragments().substring(0,2186)));\n    } catch (ArgumentException e) { \n        // Handle error\n        e.printStackTrace(); \n    }\n    ```\n\n    In the console, you should see your message:\n\n    ```json\n    \"Hello world\"\n    ```\n\n:::success:Congratulations :tada:\nYou've just found and read a transaction on the Tangle.\n:::\n\n## Run the code\n\nTo get started you need [Git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git) installed on your device.\n\nYou also need a Java development environment that uses the [Maven](https://maven.apache.org/download.cgi) build tool. If this is your first time using the Java client library, complete our [getting started guide](../../getting-started/java-quickstart.md), and follow the instructions for installing the library with Maven.\n\nIn the command-line, do the following:\n\n--------------------\n### Linux and macOS\n```bash\ngit clone https://github.com/JakeSCahill/java-iota-workshop.git\ncd java-iota-workshop\nmvn clean install\nmvn exec:java -Dexec.mainClass=\"com.iota.ReadData\"\n```\n---\n### Windows\n```bash\ngit clone https://github.com/JakeSCahill/java-iota-workshop.git\ncd java-iota-workshop\nmvn clean install\nmvn exec:java -D\"exec.mainClass\"=\"com.iota.ReadData\"\n```\n--------------------\n\nIn the console, you should see your message:\n\n```json\n\"Hello world\"\n```\n\n## Next steps\n\n[Generate a new address](../java/generate-an-address.md).\n\n","title":"タングル上のトランザクションを読む | Java | ハウツーガイド | CLライブラリ"}}
