{"path":"docs/client-libraries/0.1/how-to-guides/python/read-transactions","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# Python でタングルからトランザクションを読み取る\n<!-- # Read transactions from the Tangle in Python -->\n\n**このガイドでは、[ノード](/docs/getting-started/0.1/network/nodes)に末尾トランザクションハッシュを与えることで、タングルから \"hello world\" [トランザクション](/docs/getting-started/0.1/transactions/transactions)を読み取ります。**\n<!-- **In this guide, you read your \"hello world\" [transaction](/docs/getting-started/0.1/transactions/transactions) from the Tangle by giving a [node](/docs/getting-started/0.1/network/nodes) your tail transaction hash.** -->\n\n## パッケージ\n<!-- ## Packages -->\n\nこのガイドを完了するには、次のパッケージをインストールする必要があります。\n<!-- To complete this guide, you need to install the following package: -->\n\n```bash\npip install pyota\n```\n\n## IOTA ネットワーク\n<!-- ## IOTA network -->\n\nこのガイドでは、[デブネット](/docs/getting-started/0.1/network/iota-networks#devnet)の[ノード](/docs/getting-started/0.1/network/nodes)に接続します。\n<!-- In this guide, we connect to a node on the [Devnet](/docs/getting-started/0.1/network/iota-networks#devnet). -->\n\n## コードウォークスルー\n<!-- ## Code walkthrough -->\n\n1. パッケージをインポートします。\n  <!-- 1. Import the packages -->\n\n    ```python\n    from iota import Iota\n    ```\n\n2. ノードに接続します。\n  <!-- 2. Connect to a node -->\n\n    ```python\n    api = Iota('https://nodes.devnet.iota.org:443', testnet = True)\n    ```\n\n3. バンドルの末尾トランザクションハッシュを定義します。\n  <!-- 3. Define the tail transaction hash of the bundle -->\n\n    ```python\n    tail_transaction_hash = 'ZFICKFQXASUESAWLSFFIWHVOAJCSJHJNXMRC9AJSIOTNGNKEWOFLECHPULLJSNRCNJPYNZEC9VGOSV999'\n    ```\n\n    :::info:\n    `signatureMessageFragment` フィールドはハッシュの一部であるため、テールトランザクションハッシュを使用します。したがって、トランザクション内のメッセージはイミュータブルです。\n\n    バンドルハッシュを使用する場合、誰でもテールトランザクションのメッセージを変更し、バンドルのコピーをタングルにアタッチできるため、別のメッセージが表示される場合があります。\n    :::\n\n    <!-- :::info: -->\n    <!-- We use the tail transaction hash because the `signatureMessageFragment` field is part of the hash. Therefore, the message in the transaction is immutable. -->\n\n    <!-- If you were to use the bundle hash, you may see a different message because anyone can change the message in the tail transaction and attach a copy of the bundle to the Tangle. -->\n    <!-- ::: -->\n\n4. [`get_bundles()`](https://pyota.readthedocs.io/en/latest/extended_api.html?highlight=getbundles#get-bundles) メソッドを使用して、末尾トランザクションのバンドル内のすべてのトランザクションを取得します。\n  <!-- 4. Use the [`get_bundles()`](https://pyota.readthedocs.io/en/latest/extended_api.html?highlight=getbundles#get-bundles) method to get all transactions in the tail transaction's bundle -->\n\n    ```python\n    bundle = api.get_bundles(tail_transaction_hash)\n    ```\n\n5. バンドルの最初のトランザクションのメッセージを ASCII 文字に変換し、コンソールに出力します。\n  <!-- 5. Convert the message in the bundle's first transaction to ASCII characters and print it to the console -->\n\n    ```python\n    message = bundle['bundles'][0].tail_transaction.signature_message_fragment\n    print(message.decode())\n    ```\n\n    コンソールにメッセージが表示されます。\n    <!-- In the console, you should see your message: -->\n\n    ```bash\n    Hello world\n    ```\n\n:::success:おめでとうございます:tada:\nタングルからトランザクションを見つけて読み取りました。\n:::\n<!-- :::success:Congratulations :tada: -->\n<!-- You've just found and read a transaction from the Tangle. -->\n<!-- ::: -->\n\n## コードを実行する\n<!-- ## Run the code -->\n\n[REPL.it ツール](https://repl.it)を使用して、ブラウザーでサンプルコードを実行できます。\n<!-- We use the [REPL.it tool](https://repl.it) to allow you to run sample code in the browser. -->\n\n緑色のボタンをクリックして、このガイドのサンプルコードを実行し、ウィンドウで結果を確認できます。\n<!-- Click the green button to run the sample code in this guide and see the results in the window. -->\n\n<iframe height=\"600px\" width=\"100%\" src=\"https://repl.it/@jake91/Read-a-transaction-from-the-Tangle-Python?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n\n## 次のステップ\n<!-- ## Next steps -->\n\n[新しいアドレスを生成する](../python/generate-an-address.md)。\n<!-- [Generate a new address](../python/generate-an-address.md). -->\n","title":"タングルからトランザクションを読み取る | Python | ハウツーガイド | CL ライブラリ"}}
