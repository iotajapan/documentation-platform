{"path":"docs/client-libraries/0.1/how-to-guides/python/read-transactions","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# Python でタングル上のトランザクションを読む\n<!-- # Read transactions on the Tangle in Python -->\n\n**このガイドでは、[ノード](/docs/getting-started/0.1/network/nodes)に接続し、バンドルハッシュでフィルタリングするように要求することで、[トランザクション](/docs/getting-started/0.1/transactions/transactions)をタングルから取得します。次に、トランザクション内のメッセージをデコードして、コンソールに出力します。**\n<!-- **In this guide, you get [transactions](/docs/getting-started/0.1/transactions/transactions) from the Tangle by connecting to a [node](/docs/getting-started/0.1/network/nodes) and asking it to filter them by their bundle hash. Then, you decode the message in the transaction and print it to the console.** -->\n\n## パッケージ\n<!-- ## Packages -->\n\nこのガイドを完了するには、次のパッケージをインストールする必要があります。\n<!-- To complete this guide, you need to install the following package: -->\n\n```bash\npip install pyota\n```\n\n## IOTA ネットワーク\n<!-- ## IOTA network -->\n\nこのガイドでは、[デブネット](/docs/getting-started/0.1/network/iota-networks#devnet)の[ノード](/docs/getting-started/0.1/network/nodes)に接続します。\n<!-- In this guide, we connect to a node on the [Devnet](/docs/getting-started/0.1/network/iota-networks#devnet). -->\n\n## コードウォークスルー\n<!-- ## Code walkthrough -->\n\n1. パッケージをインポートします。\n  <!-- 1. Import the packages -->\n\n    ```python\n    from iota import Iota\n    from iota import Transaction\n    ```\n\n2. ノードに接続します。\n  <!-- 2. Connect to a node -->\n\n    ```python\n    api = Iota('https://nodes.devnet.iota.org:443', testnet = True)\n    ```\n\n3. トランザクションのフィルタリングに使用するバンドルハッシュを定義します。\n  <!-- 3. Define the bundle hash that you want to use to filter transactions -->\n\n    ```python\n    bundle = 'IYPHGPIAO99XFAIBRXB9BEQLTZBCXTAGHUXL9UUXGGHHNKEBVEANQIBOALKSO9KLHTEEZXXPB9IOBK9RB'\n    ```\n\n4. [`find_transaction_objects()`](https://pyota.readthedocs.io/en/latest/api.html#find-transaction-objects) メソッドを使用して、 `bundle` フィールドの値によってトランザクションを取得します。\n  <!-- 4. Use the [`find_transaction_objects()`](https://pyota.readthedocs.io/en/latest/api.html#find-transaction-objects) method to get transactions by the value of their `bundle` field -->\n\n    ```python\n    transactions = api.find_transaction_objects(bundles=[bundle])\n    ```\n\n5. バンドルの最初のトランザクションのメッセージを ASCII 文字に変換し、コンソールに出力します。\n  <!-- 5. Convert the message in the bundle's first transaction to ASCII characters and print it to the console -->\n\n    ```python\n    # python api は 'transactions' を含む python 辞書を返すことに注意してください\n    # キーとその値としてのトランザクションオブジェクトのリストです\n    message = transactions['transactions'][0].signature_message_fragment\n    print(message.decode())\n    ```\n\n    コンソールにメッセージが表示されます。\n    <!-- In the console, you should see your message: -->\n\n    ```bash\n    Hello world\n    ```\n\n:::success:おめでとうございます:tada:\nタングルでトランザクションを見つけて読み取りました。\n:::\n<!-- :::success:Congratulations :tada: -->\n<!-- You've just found and read a transaction on the Tangle. -->\n<!-- ::: -->\n\n## コードを実行する\n<!-- ## Run the code -->\n\n[REPL.it ツール](https://repl.it)を使用して、ブラウザーでサンプルコードを実行できます。\n<!-- We use the [REPL.it tool](https://repl.it) to allow you to run sample code in the browser. -->\n\n緑色のボタンをクリックして、このガイドのサンプルコードを実行し、ウィンドウで結果を確認できます。\n<!-- Click the green button to run the sample code in this guide and see the results in the window. -->\n\n<iframe height=\"600px\" width=\"100%\" src=\"https://repl.it/@jake91/Read-a-transaction-on-the-Tangle-Python?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n\n## 次のステップ\n<!-- ## Next steps -->\n\n[新しいアドレスを生成する](../python/generate-an-address.md)。\n<!-- [Generate a new address](../python/generate-an-address.md). -->\n","title":"タングル上のトランザクションを読む | Python | ハウツーガイド | CLライブラリ"}}
