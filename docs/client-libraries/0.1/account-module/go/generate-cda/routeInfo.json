{"path":"docs/client-libraries/0.1/account-module/go/generate-cda","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# Generate a conditional deposit address\n\n**In this guide, you generate a conditional deposit address, serialize it into a magnet link, and send test IOTA tokens to it.**\n\n## Packages\n\nTo complete this guide, you need the following packages (if you're using Go modules, you just need to reference these packages):\n\n```bash\ngo get github.com/iotaledger/iota.go/account/builder\ngo get github.com/iotaledger/iota.go/account/deposit\ngo get github.com/iotaledger/iota.go/account/store/badger\ngo get github.com/iotaledger/iota.go/account/timesrc\ngo get github.com/iotaledger/iota.go/api\ngo get github.com/iotaledger/iota.go/trinary\n```\n\n## IOTA network\n\nIn this guide, we connect to a node on the [Devnet](/docs/getting-started/0.1/network/iota-networks#devnet).\n\n## Code walkthrough\n\n1. [Plan the conditions](../introduction/overview.md#advice-for-creating-cdas) you would like your conditional deposit address to have\n\n2. Create a new CDA. This one expires tomorrow.\n\n    ```go\n    // Get the current time\n\tnow, err := timesource.Time()\n\thandleErr(err)\n\n\t// Define the same time tomorrow\n\tnow = now.Add(time.Duration(24) * time.Hour)\n\n\t// Specify the conditions\n\tconditions := &deposit.Conditions{TimeoutAt: &now, MultiUse: true}\n\n\t// Generate the CDA\n\tcda, err := account.AllocateDepositAddress(conditions)\n\thandleErr(err)\n\n\tfmt.Println(cda.AsMagnetLink())\n    ```\n\n3. Use the `AsMagnetLink()` method to serialize the CDA into a magnet link and print it to the console\n\n    ```go\n    fmt.Println(cda.AsMagnetLink())\n    ```\n\n    :::info:\n    The last 9 trytes of a CDA are the checksum, which is a hash of the address and all of its conditions.\n    :::\n\n4. Copy and paste your address into the [Devnet faucet](https://faucet.devnet.iota.org), then wait for the tokens to be transferred to your address\n\n    :::info:\n    Make sure to remove the checksum before requesting IOTA tokens from the Devnet faucet.\n    :::\n\n    For example:\n\n    ```bash\n    DL9CSYICJVKQRUTWBFUCZJQZ9WNBSRJOA9MGOISQZGGHOCZTXVSKDIZN9HBORNGDWRBBAFTKXGEJIAHKD\n    ```\n\n## Run the code\n\nTo get started you need [Git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git) installed on your device.\n\nIf you don't have a Go development environment, or if this is your first time using the Go client library, complete our [getting started guide](../../getting-started/go-quickstart.md).\n\nIn the command-line, do the following:\n\n```bash\ngit clone https://github.com/JakeSCahill/getting-started-go-accounts.git\ncd getting-started-go-accounts\ngo mod download\ngo run generate-cda/generate-cda.go\n```\nYou should see the magnet link in the console.\n\n```bash\niota://DL9CSYICJVKQRUTWBFUCZJQZ9WNBSRJOA9MGOISQZGGHOCZTXVSKDIZN9HBORNGDWRBBAFTKXGEJIAHKDJUYJJCFHC/?timeout_at=1574514007&multi_use=1&expected_amount=0\n```\n\nYou can copy this magnet link and send it to someone else so they can deposit IOTA tokens into it.\n\n## Next steps\n\n[Start making payments with your account](../go/make-payment.md).","title":"CDAを生成する | Go | アカウントモジュール | CLライブラリ"}}
