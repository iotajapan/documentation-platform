{"path":"docs/client-libraries/0.1/account-module/go/generate-cda","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# Go で条件付きデポジットアドレスを生成する\n<!-- # Generate a conditional deposit address in Go -->\n\n**このガイドでは、条件付きデポジットアドレスを生成し、マグネットリンクにシリアル化し、テスト IOTA トークンを送信します。**\n<!-- **In this guide, you generate a conditional deposit address, serialize it into a magnet link, and send test IOTA tokens to it.** -->\n\n## パッケージ\n<!-- ## Packages -->\n\nこのガイドを完了するには、次のパッケージが必要です（Go モジュールを使用している場合は、これらのパッケージを参照するだけです）。\n<!-- To complete this guide, you need the following packages (if you're using Go modules, you just need to reference these packages): -->\n\n```bash\ngo get github.com/iotaledger/iota.go/account/builder\ngo get github.com/iotaledger/iota.go/account/deposit\ngo get github.com/iotaledger/iota.go/account/store/badger\ngo get github.com/iotaledger/iota.go/account/timesrc\ngo get github.com/iotaledger/iota.go/api\ngo get github.com/iotaledger/iota.go/trinary\n```\n\n## IOTA ネットワーク\n<!-- ## IOTA network -->\n\nこのガイドでは、[デブネット](/docs/getting-started/0.1/network/iota-networks#devnet)の[ノード](/docs/getting-started/0.1/network/nodes)に接続します。\n<!-- In this guide, we connect to a node on the [Devnet](/docs/getting-started/0.1/network/iota-networks#devnet). -->\n\n## コードウォークスルー\n<!-- ## Code walkthrough -->\n\n1. 持ちたい条件付きデポジットアドレスの[条件を計画します](../introduction/overview.md#advice-for-creating-cdas)。\n<!-- 1. [Plan the conditions](../introduction/overview.md#advice-for-creating-cdas) that you would like your conditional deposit address to have -->\n\n2. 新しい CDA を作成します。この CDA は翌日に期限切れになります。\n  <!-- 2. Create a new CDA. This one expires tomorrow. -->\n\n    ```go\n    // 現在のじこくを取得します\n    now, err := timesource.Time()\n    handleErr(err)\n\n    // 翌日の同じ時間を定義します\n    now = now.Add(time.Duration(24) * time.Hour)\n\n    // 条件を指定します\n    conditions := &deposit.Conditions{TimeoutAt: &now, MultiUse: true}\n\n    // CDA を生成します\n    cda, err := account.AllocateDepositAddress(conditions)\n    handleErr(err)\n    ```\n\n    :::info:\n    デフォルトでは、この方法はアカウントのセキュリティレベル設定を使用して CDA を生成します。異なるセキュリティレベルで CDA を生成するには、アカウント設定を更新する必要があります。\n    :::\n    <!-- :::info: -->\n    <!-- By default, this method generates a CDA, using your account's security level settings. To generate a CDA with a different security level, you need to update your account settings. -->\n    <!-- ::: -->\n\n3. `AsMagnetLink()` メソッドを使用して CDA をマグネットリンクにシリアル化し、コンソールに出力します。\n  <!-- 3. Use the `AsMagnetLink()` method to serialize the CDA into a magnet link and print it to the console -->\n\n    ```go\n    fmt.Println(cda.AsMagnetLink())\n    ```\n\n    :::info:\n    CDA の最後の9つのトライトはチェックサムであり、これはアドレスとそのアドレスのすべての条件のハッシュです。\n    :::\n    <!-- :::info: -->\n    <!-- The last 9 trytes of a CDA are the checksum, which is a hash of the address and all of its conditions. -->\n    <!-- ::: -->\n\n4. アドレスをコピーして[デブネット蛇口](https://faucet.devnet.iota.org)にペーストし、トークンがアドレスに転送されるのを待ちます。\n  <!-- 4. Copy and paste your address into the [Devnet faucet](https://faucet.devnet.iota.org), then wait for the tokens to be transferred to your address -->\n\n    :::info:\n    デブネット蛇口から IOTA トークンをリクエストする前に、チェックサムを必ず削除してください。\n    :::\n    <!-- :::info: -->\n    <!-- Make sure to remove the checksum before requesting IOTA tokens from the Devnet faucet. -->\n    <!-- ::: -->\n\n    アドレスの例\n    <!-- For example: -->\n\n    ```bash\n    DL9CSYICJVKQRUTWBFUCZJQZ9WNBSRJOA9MGOISQZGGHOCZTXVSKDIZN9HBORNGDWRBBAFTKXGEJIAHKD\n    ```\n\n:::success:\nこれで IOTA トークンを含む CDA ができたので、支払いを行うことができます。\n:::\n<!-- :::success: -->\n<!-- Now you have a CDA that contains IOTA tokens, you can make payments to it. -->\n<!-- ::: -->\n\n## コードを実行する\n<!-- ## Run the code -->\n\n開始するには、デバイスに [Git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git) がインストールされている必要があります。\n<!-- To get started you need [Git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git) installed on your device. -->\n\nGo 開発環境がない場合、または Go クライアントライブラリを初めて使用する場合は、[スタートガイド](../../getting-started/go-quickstart.md)を完了してください。\n<!-- If you don't have a Go development environment, or if this is your first time using the Go client library, complete our [getting started guide](../../getting-started/go-quickstart.md). -->\n\nコマンドラインで、次を実行します。\n<!-- In the command-line, do the following: -->\n\n```bash\ngit clone https://github.com/JakeSCahill/iota-samples.git\ncd iota-samples/go/account-module\ngo mod download\ngo run generate-cda/generate-cda.go\n```\n\nコンソールにマグネットリンクが表示されます。\n<!-- You should see the magnet link in the console. -->\n\n```bash\niota://DL9CSYICJVKQRUTWBFUCZJQZ9WNBSRJOA9MGOISQZGGHOCZTXVSKDIZN9HBORNGDWRBBAFTKXGEJIAHKDJUYJJCFHC/?timeout_at=1574514007&multi_use=1&expected_amount=0\n```\n\nこのマグネットリンクをコピーして他の人に送信すると、送信者はマグネットリンクに含まれているアドレスに IOTA トークンをデポジットすることができます。\n<!-- You can copy this magnet link and send it to someone else so they can deposit IOTA tokens into it. -->\n\n## 次のステップ\n<!-- ## Next steps -->\n\n[アカウントで支払いを行う](../go/make-payment.md)。\n<!-- [Start making payments with your account](../go/make-payment.md). -->\n","title":"CDA を生成する | Go | アカウントモジュール | CLライブラリ"}}
