{"path":"docs/client-libraries/0.1/account-module/java/export-seed-state","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# Import/export an existing seed state in Java\n\n**When you use your account to make payments, your account updates your seed state. In this guide, you learn how to export your account's seed state so that you can import it on another device or simply back it up.**\n\n## IOTA network\n\nIn this guide, we connect to a node on the [Devnet](/docs/getting-started/0.1/network/iota-networks#devnet).\n\n## Code walkthrough\n\n1. Export your seed state by passing your account's ID to the `exportAccount()` method\n\n    ```java\n    ExportedAccountState state = store.exportAccount(account.getId());\n    ```\n\n2. Create a JSON file to which to save your seed state\n\n    ```java\n    BufferedWriter writer = new BufferedWriter(new FileWriter(\"exported-seed-state-database.json\"));\n    ```\n\n3. Serialize your seed state and save it to a file\n\n    ```java\n    ObjectMapper mapper = new ObjectMapper();\n        try {\n        String json = mapper.writeValueAsString(state);\n        System.out.println(\"ResultingJSONstring = \" + json);\n        writer.write(json);\n        writer.close();\n        } catch (JsonProcessingException e) {\n            e.printStackTrace();\n            account.shutdown();\n    }\n    ```\n\n    :::info:\n    It's best practice to back up your seed state at regular intervals.\n    :::\n\n4. Read your exported seed state, deserialize it, and import it into your account\n\n    ```java\n    mapper = new ObjectMapper();\n    // Ignore new fields\n    mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n    \n    try {\n\n        FileReader readState = new FileReader(\"exported-seed-state-database.json\");\n\n        state = mapper.readValue(readState, ExportedAccountState.class);\n\n        store.importAccount(state);\n\n        System.out.println(\"Seed state imported\");\n    } catch (JsonProcessingException e) {\n        e.printStackTrace();\n    }\n    ```\n\n    :::warning:\n    When you import a seed state, you overwrite any existing seed state in your account's database.\n    :::\n\n:::success:Congratulations! :tada:\nYou've learned how to export and import your seed state.\n:::\n\n## Run the code\n\nTo get started you need [Git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git) installed on your device.\n\nYou also need a Java development environment that uses the [Maven](https://maven.apache.org/download.cgi) build tool. If this is your first time using the Java client library, complete our [getting started guide](../../getting-started/java-quickstart.md), and follow the instructions for installing the library with Maven.\n\nIn the command-line, do the following:\n\n--------------------\n### Linux and macOS\n```bash\ngit clone https://github.com/JakeSCahill/iota-samples.git\ncd iota-samples/java/account-module\nmvn clean install\nmvn exec:java -Dexec.mainClass=\"com.iota.ExportAccount\"\n```\n---\n### Windows\n```bash\ngit clone https://github.com/JakeSCahill/iota-samples.git\ncd iota-samples/java/account-module\nmvn clean install\nmvn exec:java -D\"exec.mainClass\"=\"com.iota.ExportAccount\"\n```\n--------------------\n\nYou should have an `exported-seed-state.json` file that contains your seed state. You can use this file to import your seed state on another device.\n\n## Next steps\n\nTake a look at the [source code](https://github.com/iotaledger/iota-java/tree/dev/jota/src/main/java/org/iota/jota) to continue learning about the account module.","title":"シードステートをエクスポートする | Java | アカウントモジュール | CLライブラリ"}}
