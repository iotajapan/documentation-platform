{"path":"docs/client-libraries/0.1/account-module/java/generate-cda","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# Generate a conditional deposit address in Java\n\n**In this guide, you generate a conditional deposit address, serialize it into a magnet link, and send test IOTA tokens to it.**\n\n## IOTA network\n\nIn this guide, we connect to a node on the [Devnet](/docs/getting-started/0.1/network/iota-networks#devnet).\n\n## Code walkthrough\n\n1. [Plan the conditions](../introduction/overview.md#advice-for-creating-cdas) that you would like your conditional deposit address to have\n\n2. Create a new CDA. This one expires tomorrow.\n\n    ```java\n\t// Define the same time tomorrow\n\tDate timeoutAt = new Date(System.currentTimeMillis() + 24000 * 60 * 60);\n\n\t// Generate the CDA\n    ConditionalDepositAddress cda = account.newDepositAddress(timeoutAt, false,0).get();\n    ```\n\n    :::info:\n    By default, this method generates a CDA, using your account's security level settings. To generate a CDA with a different security level, you need to update your account settings.\n    :::\n\n3. Serialize the CDA into a magnet link and print it to the console\n\n    ```java\n    String magnet = (String) DepositFactory.get().build(cda, MagnetMethod.class);\n    \n    System.out.println(magnet);\n    ```\n\n    :::info:\n    The last 9 trytes of a CDA are the checksum, which is a hash of the address and all of its conditions.\n    :::\n\n4. Copy and paste your address into the [Devnet faucet](https://faucet.devnet.iota.org), then wait for the tokens to be transferred to your address\n\n    :::info:\n    Make sure to remove the checksum before requesting IOTA tokens from the Devnet faucet.\n    :::\n\n    For example:\n\n    ```bash\n    DL9CSYICJVKQRUTWBFUCZJQZ9WNBSRJOA9MGOISQZGGHOCZTXVSKDIZN9HBORNGDWRBBAFTKXGEJIAHKD\n    ```\n\n:::success:\nNow you have a CDA that contains IOTA tokens, you can make payments to it.\n:::\n\n## Run the code\n\nTo get started you need [Git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git) installed on your device.\n\nYou also need a Java development environment that uses the [Maven](https://maven.apache.org/download.cgi) build tool. If this is your first time using the Java client library, complete our [getting started guide](../../getting-started/java-quickstart.md), and follow the instructions for installing the library with Maven.\n\nIn the command-line, do the following:\n\n--------------------\n### Linux and macOS\n```bash\ngit clone https://github.com/JakeSCahill/iota-samples.git\ncd iota-samples/java/account-module\nmvn clean install\nmvn exec:java -Dexec.mainClass=\"com.iota.GenerateCDA\"\n```\n---\n### Windows\n```bash\ngit clone https://github.com/JakeSCahill/iota-samples.git\ncd iota-samples/java/account-module\nmvn clean install\nmvn exec:java -D\"exec.mainClass\"=\"com.iota.GenerateCDA\"\n```\n--------------------\n\nYou should see the magnet link in the console.\n\n```bash\niota://DL9CSYICJVKQRUTWBFUCZJQZ9WNBSRJOA9MGOISQZGGHOCZTXVSKDIZN9HBORNGDWRBBAFTKXGEJIAHKDJUYJJCFHC/?timeout_at=1574514007&multi_use=false&expected_amount=0\n```\n\nYou can copy this magnet link and send it to someone else so they can deposit IOTA tokens into it.\n\n## Next steps\n\n[Start making payments with your account](../java/make-payment.md).","title":"CDA を作成する | Java | アカウントモジュール | CLライブラリ"}}
