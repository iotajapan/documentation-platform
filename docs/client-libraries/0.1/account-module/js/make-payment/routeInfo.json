{"path":"docs/client-libraries/0.1/account-module/js/make-payment","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# Make payments with your account in JavaScript\n\n**In this guide, you use your account to deposit IOTA tokens into a pre-defined CDA.**\n\n## Packages\n\nTo complete this guide, you need to install the following packages:\n\n--------------------\n### npm\n```bash\nnpm install @iota/account @iota/cda @iota/transaction-converter ntp-client\n```\n---\n### Yarn\n```bash\nyarn add @iota/account @iota/cda @iota/transaction-converter ntp-client\n```\n--------------------\n\n## IOTA network\n\nIn this guide, we connect to a node on the [Devnet](/docs/getting-started/0.1/network/iota-networks#devnet).\n\n## Code walkthrough\n\nTo make a payment, your account needs to have one or more CDAs that contains IOTA tokens.\n\n1. If you dont have a CDA that contains IOTA tokens, follow this guide to [generate a CDA](../js/generate-cda.md) and send test IOTA tokens to it\n\n2. Use the `parseCDAMagnet()` method to deserialize the magnet link into a CDA\n\n    ```js\n    const magnetLink = \"iota://BWNYWGULIIAVRYOOFWZTSDFXFPRCFF9YEHGVBOORLGCPCJSKTHU9OKESUGZGWZXZZDLESFPPTGEHVKTTXG9BQLSIGP/?timeout_at=5174418337&multi_use=1&expected_amount=0\";\n\n    const cda = CDA.parseCDAMagnet(\n        magnetLink\n    );\n    ```\n\n    :::info:\n    The given magent link is for an example CDA that expires in over 100 years.\n    If you want to make a payment to a different CDA, use that one instead.\n    :::\n\n3. Make sure that the CDA is still active\n\n    ```js\n    // Get the current time to use to compare to the CDA's timeout\n    ntpClient.getNetworkTime(\"time.google.com\", 123, function(err, date) {\n        if(err) {\n            console.error(err);\n            return;\n        } else if (!(CDA.isAlive(date, cda))) {\n            isActive = false\n        }\n    });\n    ```\n\n3. Send a deposit to the CDA\n\n    ```js\n    // Send the payment only if the CDA is active\n    if (isActive) {\n        account.sendToCDA({\n            ...cda,\n            value: 1000\n        })\n        .then((trytes) => {\n            // Get the tail transaction and convert it to an object\n            let bundle = TransactionConverter.asTransactionObject(trytes[trytes.length - 1]);\n            let bundleHash = bundle.bundle;\n            let address = bundle.address\n            let value = bundle.value;\n            console.log(`Sent ${value} IOTA tokens to ${address} in bundle:  ${bundleHash}`);\n        })\n        .catch(error => {\n            console.log(error);\n            // Close the database and stop any ongoing reattachments\n            account.stop();\n        });\n\n    } else {\n        console.log('CDA is expired. Use an active CDA.');\n        // Close the database and stop any ongoing reattachments\n        account.stop();\n        return;\n    }\n    ```\n\n    You should see that how many IOTA tokens were sent to your address as well as the bundle hash:\n\n    ```\n    Sent 1000 to TIZJIRDCZPRJMMVKSGROPKE9VGIQKOLOUSX9MCUTOEQBBHPMLYBVKBPCXJKY9SDWX9FVMOZTWNMVVEYKX in bundle:  RXIA9CBEOASNY9IRIARZFGDLK9YNGW9ZHJGJLUXOUKVGCZLPNDKALFHZWHZKQQXFTIHEIJJPN9EURO9K9\n    ```\n\nYour account will reattach and promote your bundle until it's confirmed.\n\nYou can stop the reattachment routine by calling the `stopAttaching()` method.\n\nTo restart the reattachment routine, call the `startAttaching()` method with your network settings.\n\n```js\naccount.stopAttaching();\n\naccount.startAttaching({\n    depth: 3,\n    minWeightMagnitude: 9,\n    delay: 30 * 1000\n    maxDepth: 6\n});\n```\n\n## Run the code\n\nTo get started you need [Git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git) installed on your device.\n\nIf you don't have a JavaScript development environment, or if this is your first time using the JavaScript client library, complete our [getting started guide](../../getting-started/js-quickstart.md).\n\nIn the command-line, do the following:\n\n```bash\ngit clone https://github.com/JakeSCahill/iota-samples.git\ncd iota-samples/js/account-module\nnpm i\nnode make-payment/make-payment.js\n```\n\nYou should see that the deposit was sent.\n\nYour seed state will contain this pending bundle until it is confirmed.\n\n## Next steps\n\n[Try exporting your seed state so you back it up or import it onto another device](../js/export-seed-state.md).\n","title":"支払いを作成する | JavaScript | アカウントモジュール | CLライブラリ"}}
