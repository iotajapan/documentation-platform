{"path":"docs/blueprints/0.1/data-marketplace/architecture","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# Application architecture\n\n**The Data Marketplace application uses sensors, a cloud backend, and the IOTA Tangle to publish data to MAM channels.**\n\n:::warning:Disclaimer\nRunning an open source project, like any human endeavor, involves uncertainty and trade-offs. We hope the architecture described below helps you to deploy similar systems, but it may include mistakes, and can’t address every situation. If you have any questions about your project, we encourage you to do your own research, seek out experts, and discuss them with the IOTA community.\n:::\n\nThe architecture of our PoC (shown in the image below) follows a pattern, where the sensor or any other device, cloud backend, and distributed ledger (DLT) are interconnected.\n\n![Data Marketplace architecture](/assets/docs/blueprints/0.1/images/data-marketplace-architecture.png)\n\nSubmitting sensor data to the Data Marketplace is intended to be a lightweight operation that can be done by embedded devices. To submit sensor data, a device needs to perform Tangle operations, such as producing and consuming MAM channels, and communicating with web APIs. The data consuming part of the application is more complex and needs the ability to transfer IOTA tokens in exchange for access to the device's data streams. Therefore, an access-rights management add-on is implemented.\n\nThis table displays a list of all the main components of the application:\n\n**Component**|**Description**\n:-----|:------|\nUser authentication | OAuth with Google account, other types of authentication, like email/password can be enabled. Provides a unique API token and userID that are used for API communication and user identification.|\nDatabase | NoSQL cloud database, provides a permanent storage mechanism. \nCloud functions | Cloud functions (Lambda functions in AWS), that are triggered by an event or API call. Perform IOTA Tangle-related operations such as walled funding, token transfer for device stream purchase. Also perform Database-related operations such as creating used or device, managing device stream purchases. \nHosting | Cloud hosting for the Web portal. \nError logging | Provides access to error logs including request and response details to simplify issue investigations. \nWeb portal | A web UI that allows easy device management and data stream fetching. \nAPI | Set of APIs to perform all main functionality from a script or console. \nData submission template | Small NodeJS project with pre-filled device ID and API interface to Cloud backend. Provides examples for sensor data submission using different techniques. \n\nThe cloud part of the application is centralized. It runs on Google Cloud Platform, and can optionally run on Amazon AWS or Microsoft Azure.\n \nThe centralized cloud backend consists of the following components:\n\n- User authentication (OAuth with Google account)\n- User management\n- Access rights management\n- Device management (create/read/delete)\n- Wallet management (wallet funding, tokens transfer)\n- Device stream purchase tracking\n- Error tracking and reporting \n\nWallet funding and token transfer operations are completed only after the node confirms that the transaction was attached to the Tangle.\n\nCloud functions can be configured to change the default values of the following:\n\n* `depth` and [`minWeightMagnitude`](/docs/iota-basics/0.1/concepts/minimum-weight-magnitude) fields, which are typically different for IOTA Devnet and Mainnet nodes \n* Whitelist page, where administrator users with predefined email addresses are allowed to administer devices\n\n## Sensors and data\n\nThe Data Marketplace is agnostic to the sensors and the data that you connect to it. Any sensor that has the ability to transmit data and has an easy way to get regular data readings, such as through an API, can be used with the Data Marketplace. In order to submit the data to the Marketplace, all you have to do is execute a script to submit data to the IOTA Tangle.\n \n### Example sensors\n\n* [Netatmo Weather Station](https://www.netatmo.com/en-us/weather)\n* [Bosch XDK](https://xdk.bosch-connectivity.com/) \n* [Nordic Semiconductor Thingy:52](https://www.nordicsemi.com/Software-and-Tools/Development-Kits/Nordic-Thingy-52)\n* [Raspberry Pi with a sensor kit](https://www.adafruit.com/product/2733) \n\n### Data fields\n\nFor each of your sensors, you have to define the correct data fields, which will be stored on the Tangle, and displayed on the Data Marketplace web portal for the purchaser. In general, just be descriptive with the data that you want to store and sell.\n","title":"アーキテクチャ | データマーケットプレイス | アプリ設計図"}}
