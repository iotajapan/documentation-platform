{"path":"docs/getting-started/0.1/transactions/masked-authenticated-messaging","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# マスクされた認証済みメッセージング\n<!-- # Masked Authenticated Messaging -->\n\n**マスクされた認証済みメッセージング（Masked Authenticated Messaging, MAM）は、[タングル](../network/the-tangle.md)上のトランザクションで、チャネルと呼ばれる暗号化されたデータストリームを公開できるデータ通信プロトコルです。**\n<!-- **Masked Authenticated Messaging (MAM) is a data communication protocol that allows you to publish encrypted data streams, called channels, in transactions on the [Tangle](../network/the-tangle.md).** -->\n\n## MAMの仕組み\n<!-- ## How MAM works -->\n\nタングルにゼロトークントランザクションを添付できますが、ゼロトークントランザクションはノードによって署名またはチェックされず、真正性を確認できません。\n<!-- The Tangle allows you to attach zero-value transactions to it, but these transactions are not signed or checked by nodes to verify their authenticity. -->\n\nMAMでは、すべてのメッセージはシードの所有者によって署名されます。これにより、チャネルにアクセスできる人は署名を検証し、メッセージを復号化できます。\n<!-- With MAM, all messages are signed by the owner of a seed. This way, those with access to a channel can validate the signature and decrypt the messages. -->\n\n[データマーケットプレイス](/docs/blueprints/0.1/data-marketplace/overview)などの多くのユースケースでは、MAMを使用して、ユーザーがチャネルへのアクセス料金を支払い、メッセージを復号化できるようにします。\n<!-- Many use cases such as the [Data Marketplace](/docs/blueprints/0.1/data-marketplace/overview) use MAM to allow users to pay for access to channels and decrypt the messages. -->\n\n[このブログ投稿](https://medium.com/coinmonks/iota-mam-eloquently-explained-d7505863b413)でMAMの詳細をご覧ください。\n<!-- You can [learn more about the details of MAM](https://medium.com/coinmonks/iota-mam-eloquently-explained-d7505863b413) in this blog post. -->\n\n## チャネル\n<!-- ## Channels -->\n\nすべてのMAMメッセージはMAMチャネルに発行されます。MAMチャネルは、シードによって認証される暗号化されたデータストリームです。シードの所有者のみがメッセージをチャネルに公開できます。その結果、MAMチャネルは、特定の人またはデバイスによってメッセージが発行されたことを認証する便利な方法です。\n<!-- All MAM messages are published to MAM channels, which are encrypted data streams that are authenticated by a seed. Only the seed owner can publish messages to a channel. As a result, MAM channels are a useful way of authenticating that messages were published by a certain person or device. -->\n\nMAMメッセージは、ゼロトークントランザクションの`signatureMessageFragment`フィールドに送信されます。\n<!-- MAM messages are sent in the `signatureMessageFragment` field of zero-value transactions. -->\n\nメッセージをチャネルに公開すると、チャネルIDを受け取ります。チャネルIDは、他の人がそのチャネルを購読してメッセージを取得できるようにする識別子です。**チャネルIDは、MAMメッセージを含むトランザクションのアドレスです**。\n<!-- When you publish messages to any channel, you receive a channel ID, which is the identifier that allows others to subscribe to it and fetch your messages. **A Channel ID is the address of the transaction that contains the MAM message**. -->\n\n### チャネルの生成方法\n<!-- ### How channels are generated -->\n\nすべてのMAMチャネルはマークル木から生成され、すべてのメッセージはリーフの中の1つの秘密鍵で署名されます。\n<!-- All MAM channels are generated from a Merkle tree, where all messages are signed with one of the private keys in the leaves. -->\n\n単一のツリーは短期間しか存続しないため、各メッセージには次のマークル木のルートが含まれるため、購読者はメッセージの取得を継続できます。\n<!-- Because a single tree lasts for only a short period of time, each message contains the root of the next Merkle tree to allow the subscriber to continue fetching messages. -->\n\n購読者がMAMストリームからメッセージを取得すると、署名を検証し、署名がマークル木のリーフの1つに属していることを確認することにより、メッセージが最初に認証されます。署名の検証が失敗した場合、メッセージ全体が無効と見なされます。\n<!-- When a subscriber fetches messages from a MAM stream, the message is first authenticated by validating the signature and verifying that the signature belongs to one of the Merkle tree's leaves. If the signature verification fails, the entire message is considered invalid. -->\n\n### チャンネルタイプ\n<!-- ### Channel types -->\n\n次のチャネルモードのいずれかにメッセージを公開できます。\n<!-- You can publish messages to any of the following channel modes: -->\n\n- パブリック\n<!-- - Public -->\n- プライベート\n<!-- - Private -->\n- 制限付き\n<!-- - Restricted -->\n\n#### パブリックチャネル\n<!-- #### Public channels -->\n\nパブリックチャネルは、MAMメッセージ（チャネルID）を含むトランザクションのアドレスとしてルートを使用します。その結果、誰でもアドレスを使用してパブリックチャネルのメッセージを復号化できます。\n<!-- Public channels use the root as the address of the transaction that contains the MAM message (channel ID). As a result, anyone can decrypt messages in a public channel by using the address. -->\n\nこのモードは、公示や組み込みの認証機能を備えたイミュータブルなソーシャルメディアアプリケーションにも使用できます。\n<!-- This mode could be used for public announcements or even a immutable social media application with built-in authentication. -->\n\n#### プライベートチャネル\n<!-- #### Private channels -->\n\nプライベートチャネルは、MAMメッセージ（チャネルID）を含むトランザクションのアドレスとしてルートのハッシュを使用します。その結果、元のルートを持つユーザーのみがプライベートチャネルのメッセージを復号化できます。\n<!-- Private channels use the hash of the root as the address of the transaction that contains the MAM message (channel ID). As a result, only those with the original root can decrypt the messages in a private channel. -->\n\nこのモードは、互いにプライベートに通信したいデバイスに役立ちます。\n<!-- This mode is useful for devices that want to communicate in private among each other. -->\n\n#### 制限付きチャネル\n<!-- #### Restricted channels -->\n\n制限付きチャネルは、サイドキーと呼ばれる認証キーをプライベートモードに追加します。MAMメッセージ（チャネルID）を含むトランザクションのアドレスは、サイドキーとルートのハッシュ値です。その結果、元のルートとサイドキーを持つユーザーのみがプライベートチャネル内のメッセージを復号化できます。\n<!-- Restricted channels adds an authorization key, called the side key, to private mode. The address of the transaction that contains the MAM message (channel ID) is the hash of the side key and the root. As a result, only those with the original root and the side key can decrypt messages in a private channel. -->\n\nこのモードは、サイドキーを変更してチャンネルへのアクセスを取り消すことができるのに便利です。サイドキーを変更するときは、チャンネルの残りをフォローすることが許可されている関係者に変更するサイドキーを配布するだけです。\n<!-- This mode is useful for being able to revoke access to the channel by changing the side key. When you change a side key, you just need to distribute it to the parties that are allowed to follow the rest of the channel. -->\n","title":"マスクされた認証済みメッセージング | トランザクション | IOTA入門"}}
