{"path":"docs/getting-started/0.1/clients/checksums","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# チェックサム\n<!-- # Checksums -->\n\n**チェックサムは、アドレスまたはシードの末尾に追加される[トライト](../introduction/ternary.md)に付けられた名前です。多くの場合、ユーザーインターフェイスのアドレスとシードにチェックサムが追加され、タイプミスを検出しやすくなります。**\n<!-- **A checksum is the name given to the [trytes](../introduction/ternary.md) that are appended to the end of an address or a seed. Checksums are often appended to addresses and seeds in user interfaces to help you to detect typos.** -->\n\n## チェックサムの形式\n<!-- ## Checksum format -->\n\nチェックサムの長さは、アドレス用かシード用かによって異なります。アドレスチェックサムは9トライト長ですが、シードチェックサムは3トライト長です。この違いの理由は、アドレスの入力ミスにより IOTA トークンが間違ったアドレスに送信される可能性があるため、チェックサムは[衝突](https://en.wikipedia.org/wiki/Collision_(computer_science))に対してより耐性がなければならないためです。\n<!-- The length of a checksum depends on whether it's for an address or a seed. Address checksums are 9 trytes long, whereas seed checksums are 3 trytes long. The reason for this difference is that mistyping an address can lead to sending IOTA tokens to the wrong address, so the checksum must be more resistant to [collisions](https://en.wikipedia.org/wiki/Collision_(computer_science)). -->\n\n|             |**チェックサム無し**|**チェックサム有り**|\n|-------------|:----------------------------------------------------------------------------------|:-----------------------------------------------------------------------------------------------|:\n| **シード**    | PUEOTSEITFEVEWCWBTSIZM9NKRGJEIMXTULBACGFRQK9IMGICLBKW9TTEVSDQMGWKBXPVCBMMCXWMNPDX | PUEOTSEITFEVEWCWBTSIZM9NKRGJEIMXTULBACGFRQK9IMGICLBKW9TTEVSDQMGWKBXPVCBMMCXWMNPDX**XTY**       |\n| **アドレス** | GWQQYWCUFLDR9LIWDITVHTPYYO9BAMOADFLNBIHYLIFDTORUCFCOGRQFK9IXEHVEMDVZH9RYOXAFIVUOA | GWQQYWCUFLDR9LIWDITVHTPYYO9BAMOADFLNBIHYLIFDTORUCFCOGRQFK9IXEHVEMDVZH9RYOXAFIVUOA**DAYDSMFZW** |\n\n:::info:\nセキュリティ上の予防措置として、[トリニティ](/docs/wallets/0.1/trinity/introduction/overview)などの一部のアプリケーションでは、チェックサムを含むアドレスのみを入力します。\n:::\n<!-- :::info: -->\n<!-- As a security precaution, some applications such as [Trinity](/docs/wallets/0.1/trinity/introduction/overview) allow you to enter only addresses that include a checksum. -->\n<!-- ::: -->\n\n## チェックサムの生成方法\n<!-- ## How checksums are generated -->\n\n最初に、[Kerl](https://github.com/iotaledger/kerl) [ハッシュ関数](https://en.wikipedia.org/wiki/Hash_function)を使用して、アドレスまたはシードがトリットに変換され、ハッシュされます。\n<!-- First, the address or the seed is converted to trits and hashed, using the [Kerl](https://github.com/iotaledger/kerl) [hash function](https://en.wikipedia.org/wiki/Hash_function). -->\n\n次に、そのハッシュ結果の最後の9または3のトライトがアドレスまたはシードの最後に追加されます。\n<!-- Then, the last 9 or 3 trytes of the resulting hash are appended to the end of the address or seed. -->\n\n## 関連ガイド\n<!-- ## Related guides -->\n\n[JavaScript でアドレスを生成する](/docs/client-libraries/0.1/how-to-guides/js/generate-an-address)。\n<!-- [Generate an address in JavaScript](/docs/client-libraries/0.1/how-to-guides/js/generate-an-address). -->\n","title":"チェックサム | クライアント | IOTA 入門"}}
