{"path":"docs/iota-js/0.1/account-module/introduction/overview","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# アカウントモジュール入門\n<!-- # Get started with the account module -->\n\n**アカウントは、トランザクションの送受信を容易にするオブジェクトです。アカウントは、アドレスやペンディング中のバンドルハッシュなどのデータをローカルデータベースに保存します。このデータにより、使用済みアドレスからの取り出しやペンディング中のトランザクションの促進と再添付を心配することなく、IOTAネットワークと対話できます。**\n<!-- **An account is an object that makes it easier to send and receive transactions. Accounts store data such as addresses and pending bundle hashes in a local database. This data allows you to interact with an IOTA network without worrying about withdrawing from spent addresses or promoting and reattaching pending transactions.** -->\n\nアカウントはIOTAプロトコルの複雑さを抽象化し、支払いに集中できるようにします。アカウントでは、支払いは次の2つのタイプのいずれかになります。\n<!-- Accounts abstract the complexity of the IOTA protocol and allow you to focus on making payments. In accounts, a payment can be one of two types: -->\n\n* **入金：**アカウントにIOTAトークンを預け入れるバンドル\n* **支払：**アカウントからIOTAトークンを取り出すバンドル\n<!-- * **Incoming payment:** A bundle that deposits IOTA tokens into an account -->\n<!-- * **Outgoing payment:** A bundle that withdraws IOTA tokens from an account -->\n\n:::warning:ベータソフトウェアです！\nクライアントライブラリは2019年現在ベータ版であり、運用環境では使用しないでください。\n:::\n<!-- :::warning:Beta software -->\n<!-- The client libraries are currently in beta and you should not use them in production environments. -->\n<!-- ::: -->\n\n## 対象読者\n<!-- ## Audience -->\n\nこのドキュメントは、JavaScriptプログラミング言語とオブジェクト指向プログラミングの概念に精通している開発者向けです。また、[バンドル、トランザクション](/docs/dev-essentials/0.1/concepts/bundles-and-transactions)、[アドレスから一度だけIOTAトークンを取り出す理由](/docs/dev-essentials/0.1/concepts/addresses-and-signatures#address-reuse)などのIOTAの基本概念にも精通している必要があります。\n<!-- This documentation is for developers who are familiar with the JavaScript programming language and object-oriented programming concepts. You should also be familiar with basic IOTA concepts such as [bundles, transactions](/docs/dev-essentials/0.1/concepts/bundles-and-transactions), and [why you should withdraw from addresses only once](/docs/dev-essentials/0.1/concepts/addresses-and-signatures#address-reuse). -->\n\n## 前提条件\n<!-- ## Prerequisites -->\n\nこのライブラリを使用するには、[サポートされている](https://github.com/iotaledger/iota.js/blob/next/.travis.yml#L5)バージョンの[Node.js](https://nodejs.org)のいずれかが必要です。\n<!-- To use this library, you must have one of the following [supported](https://github.com/iotaledger/iota.js/blob/next/.travis.yml#L5) versions of [Node.js](https://nodejs.org): -->\n\n- Node.js 10以上。推奨バージョンは[最新LTS](https://nodejs.org/en/download/)です。\n<!-- - Node.js 10 or higher. Recommended version is [latest LTS](https://nodejs.org/en/download/). -->\n- Node.js 8\n\n[ライブラリパッケージ](https://www.npmjs.com/org/iota)をインストールするには、次のいずれかのパッケージマネージャーが必要です。\n<!-- To install [library packages](https://www.npmjs.com/org/iota), you must have one of the following package managers: -->\n\n- [npm](https://www.npmjs.com/) (Node.js [ダウンロード](https://nodejs.org/en/download/)に含まれています)\n<!-- - [npm](https://www.npmjs.com/) (Included in Node.js [downloads](https://nodejs.org/en/download/)) -->\n- [Yarn](https://yarnpkg.com/)\n\n## パッケージをインストールする\n<!-- ## Install the packages -->\n\nJavaScriptアカウントモジュールパッケージとその依存関係をインストールするには、次のオプションのいずれかを使用できます。\n<!-- To install the JavaScript account module packages and their dependencies, you can use one of the following options: -->\n\n- npmでパッケージをインストールする\n  <!-- - Install the packages with npm -->\n    ```bash\n    npm install @iota/account @iota/cda @iota/persistence-adapter-level\n    ```\n- Yarnでパッケージをインストールする\n  <!-- - Install the packages with Yarn -->\n    ```bash\n    yarn add @iota/account @iota/cda @iota/persistence-adapter-level\n    ```\n\n## 始める\n<!-- ## Get started -->\n\n緑色のボタンをクリックして、新しいアカウントを作成し、利用可能な残高を確認するサンプルコードを実行します。\n<!-- Click the green button to run the sample code that creates a new account and checks its available balance. -->\n\n<iframe height=\"600px\" width=\"100%\" src=\"https://repl.it/@jake91/Create-account?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n\n[ガイド](../how-to-guides/create-account.md)を参照して、独自のアカウントを作成する方法を確認してください。\n<!-- [Follow our guide](../how-to-guides/create-account.md) to find out how to create your own account. -->\n\n## APIリファレンス\n<!-- ## API reference -->\n\n利用可能なすべてのAPIメソッドの詳細については、[ソースコード](https://github.com/iotaledger/iota.js/tree/next/packages/account)を参照してください。\n<!-- For details on all available API methods, see the [source code](https://github.com/iotaledger/iota.js/tree/next/packages/account). -->\n\n## プロジェクトをサポートする\n<!-- ## Support the project -->\n\nJavaScriptライブラリが役に立ち、貢献したいと思う場合は、[バグレポート](https://github.com/iotaledger/iota.js/issues/new)、機能要求、または[プルリクエスト](https://github.com/iotaledger/iota.js/pulls/)の投稿を検討してください。\n<!-- If the IOTA JavaScript client library has been useful to you and you feel like contributing, consider posting a [bug report](https://github.com/iotaledger/iota.js/issues/new), [feature request](https://github.com/iotaledger/iota.js/issues/new), or a [pull request](https://github.com/iotaledger/iota.js/pulls/). -->\n\n### GitHubのリポジトリを複製してブートストラップする\n<!-- ### Clone and bootstrap the repository on GitHub -->\n\nパッケージのローカルコピーに変更を加える予定がある場合は、ソースからパッケージをビルドできます。\n<!-- You may want to build the package from source if you plan on making changes to your local copy of it. -->\n\n1. [iotaledgerのGitHubリポジトリ](https://github.com/iotaledger/iota.js)にアクセスします。\n  <!-- 1. Go to the [iotaledger GitHub repository](https://github.com/iotaledger/iota.js) -->\n\n2. 右上隅の[**Fork**]ボタンをクリックします。\n  <!-- 2. Click the **Fork** button in the top-right corner -->\n\n3. フォークされたリポジトリのクローンを作成し、そのディレクトリに移動します。\n  <!-- 3. Clone your forked repository and change into its directory -->\n\n    ```bash\n    cd iota.js\n    ```\n\n4. 環境を初期化します。\n  <!-- 4. Initialize your environment -->\n\n    ```bash\n    npm run init\n    ```\n\nこのステップでは、すべての依存関係をダウンロードしてビルドし、パッケージをリンクします。\n<!-- This step will download all dependencies, build them, then link the packages together. -->\n\nJavaScriptクライアントライブラリは、[Lerna](https://lerna.js.org/)を使用して複数のパッケージを管理します。したがって、`lerna bootstrap`コマンドを使用して、いつでも環境を初期化できます。\n<!-- The JavaScript client libraries use [Lerna](https://lerna.js.org/) to manage multiple packages. So, you can initialize your environment again at any point with the `lerna bootstrap` command. -->\n\n### テストを実行する\n<!-- ### Run tests -->\n\n単一のパッケージまたは複数のパッケージに変更を加え、ルートディレクトリから次のコマンドを実行してテストします。\n<!-- Make your changes on a single package or across multiple packages and test the them by running the following command from the root directory: -->\n\n```bash\nnpm run test\n```\n\n特定のパッケージのテストを実行するには、パッケージのディレクトリに移動して、`npm run test`コマンドを実行します。\n<!-- To run tests for a specific package, change into the package's directory and run the `npm run test` command. -->\n\n### ドキュメントを更新する\n<!-- ### Update documentation -->\n\n変更がドキュメントに影響する場合は、[`JSDoc`](http://usejsdoc.org)アノテーションを編集し、ルートディレクトリから`npm run docs`を実行してドキュメントを更新してください。\n<!-- If your changes affect the documentation, please update it by editing the [`JSDoc`](http://usejsdoc.org) annotations and running `npm run docs` from the root directory. -->\n\n## ディスカッションに参加する\n<!-- ## Join the discussion -->\n\n[Discord](https://discord.iota.org)に参加して、コミュニティに参加したり、助けを求めたり、技術について話し合ったりしてください。\n<!-- Join our [Discord](https://discord.iota.org) to get involved in the community, ask for help, or to discuss the technology. -->\n","title":"アカウント入門 | 序説 | アカウント | JSライブラリ"}}
