{"path":"docs/iot/0.1/cryptocore/introduction/get-started","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# Get started with the CryptoCore\n\n**The CryptoCore is IOTA hardware designed for applications that need fast, dedicated proof of work and a secure memory. The device consists of an IOTA CryptoCore FPGA (ICCFPGA) module and a development board that doubles as a Raspberry Pi HAT, making it perfect for standalone applications and/or quick prototyping. In this guide, you learn how to get started with the CryptoCore on the Raspberry Pi 3/4.**\n\n:::info:\nThe CryptoCore is in limited supply and currently available only to partners. If you're interested in receiving one, please get in touch with your representative at the IOTA Foundation.\n:::\n\n![CryptoCore](/assets/docs/iot/0.1/cryptocore/images/cryptocore.jpg)\n\n## Hardware\n\nTo complete this guide, you need the following:\n\n- A PC with an SSH client installed\n\n- A Raspberry Pi 3/4 with the following:\n  - Raspbian installed\n  - An Internet connection\n  - SSH enabled\n  - The serial interface enabled\n\n  :::info:\n  We recommend these external guides for setting up your Raspberry Pi:\n\n  - [Install Raspian](https://www.raspberrypi.org/documentation/installation/installing-images/README.md)\n  - [Connect to WiFi and enable SSH](https://www.e-tinkers.com/2017/03/boot-raspberry-pi-with-wifi-on-first-boot/)\n  - [Enable the serial interface](https://www.raspberrypi.org/documentation/configuration/raspi-config.md)\n  :::\n\n- A CryptoCore development kit with jumpers J7, J8, and J9 set to `PI`:\n\n![J7 and J8 jumpers](/assets/docs/iot/0.1/cryptocore/images/cryptocore-jumper-j7-j8.jpg)\n\n![J9 jumper](/assets/docs/iot/0.1/cryptocore/images/cryptocore-jumper-j9.jpg)\n\n## Step 1. Set up the CryptoCore development environment\n\nBefore you can start using the CryptoCore, you need to install the necessary tools on your Raspberry Pi.\n\nComplete the following steps in an SSH session between your PC and the Raspberry Pi.\n\n1. Install `git`\n\n  ```bash\n  sudo apt update && sudo apt install git\n  ```\n\n2. Clone the `iccfpga-utils` repository\n\n  ```bash\n  cd ~\n  git clone --recursive https://gitlab.com/iccfpga-rv/iccfpga-utils\n  ```\n\n3. Change into the `iccfpga-utils` directory and start the installer script. This script clones, compiles, and installs all dependencies as well as installing the RISC-V firmware and the CryptoCore program.\n\n  ```bash\n  cd iccfpga-utils\n  ./install_raspberry.sh\n  ``` \n\n  When the script finishes, the Raspberry Pi will be rebooted.\n\n4. Upload the RISC-V firmware and the CryptoCore program to the ICCFPGA\n\n  If you want the CryptoCore program to be available after a reboot, flash it into the QSPI flash memory (takes up to 7 minutes):\n\n  ```bash\n  cd ~/iccfpga-utils/raspberry_scripts\n  ./flash_core.sh\n  ```\n\n  :::info:\n  Make sure to turn the Raspberry Pi off and on again from the socket to allow the FPGA to load the core and firmware files from flash memory.\n  :::\n\n  If you want the CryptoCore program to be available only until the next reboot, upload it to RAM (takes a couple of seconds):\n\n  ```bash\n  cd ~/iccfpga-utils/raspberry_scripts\n  ./upload_core.sh\n  ```\n\nAfter uploading the RISC-V firmware and the CryptoCore program to the ICCFPGA, you should see three red LEDs on it:\n\n- **1:** Power\n- **2:** Indicates that the ICCFPGA has a valid CryptoCore program\n- **3:** Indicates that the CryptoCore firmware is running\n\n![CryptoCore LEDs](/assets/docs/iot/0.1/cryptocore/images/cryptocore-three-led.jpg)\n\n## Step 2. Test the CryptoCore\n\nAfter setting up the CryptoCore with all the necessary software, you can test it by running the 'hello world' program.\n\n1. Open a serial terminal\n\n  ```bash\n  cd ~/iccfpga-utils/raspberry_scripts\n  ./start_serial.sh\n  ```\n\n  You should see the following:\n\n  ```bash\n  picocom v3.1\n\n  port is        : /dev/ttyS0\n  flowcontrol    : none\n  baudrate is    : 115200\n  parity is      : none\n  databits are   : 8\n  stopbits are   : 1\n  escape is      : C-a\n  local echo is  : yes\n  noinit is      : no\n  noreset is     : no\n  hangup is      : no\n  nolock is      : no\n  send_cmd is    : sz -vv\n  receive_cmd is : rz -vv -E\n  imap is        : crcrlf,\n  omap is        :\n  emap is        : crcrlf,delbs,\n  logfile is     : none\n  initstring     : none\n  exit_after is  : not set\n  exit is        : no\n  ```\n\n2. In the serial terminal, enter the following command to request the current version of the CryptoCore program, using the API\n    \n  ```bash\n  {\"command\":\"version\"}\n  ```\n\n  You should see something like the following:\n\n  ```bash\n  {\"version\":\"0.07rv\",\"command\":\"version\",\"duration\":0,\"code\":200}\n  ```\n\n3. Press **Ctrl + a** then **Ctrl + q** to exit the serial terminal\n\n:::success: Congratulations :tada:\nYou've set up the CryptoCore and you're able to send commands to its API.\n:::\n\n## Troubleshooting\n\nThese are known issues that you may find while following this guide and some suggested steps to resolve them.\n\n### No output in the serial terminal\n\nIf you see no messages returned in the serial terminal, make sure that [jumpers J7 and J8](#hardware) are connected to the correct pins.\n\n### json decoding unsuccessful\n\nIf you see this message in the serial terminal, make sure that all three red LEDs are lit on the ICCFPGA.\n\nIf these lights aren't lit, try [uploading the RISC-V firmware and the CryptoCore program](#step-1-set-up-the-cryptocore-development-environment) again.\n\n## TDO mismatch\n\nIf you see this message while trying to upload the RISC-V firmware and the CryptoCore program to the ICCFPGA, make sure that [jumper J9](#hardware) is connected to the correct pins.\n\n## Next steps\n\nTake a look at the [API reference](../references/api-reference.md) to find out what else you can make the CryptoCore do, using the serial terminal.\n\nRead the [CryptoCore manual](https://gitlab.com/iccfpga-rv/iccfpga-manual/blob/master/iccfpga.pdf) for detailed information and guides.\n\n","title":"CryptoCore入門 | 序説 | CryptoCore | IoT プロジェクト"}}
