{"path":"docs/iot/0.1/references/troubleshooting","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# Troubleshooting\n\n**You may find some of these common issues while following these guides.**\n\n## Set up a IPv6 over Bluetooth Low Energy border router\n\n### None already mounted or mount point busy\n\nIf you see this response, ignore it. The file system is probably already mounted.\n\n```bash\nmount: /sys/kernel/debug: none already mounted or mount point busy.\n```\n\n## Set up an nRF52 microcontroller\n\n### Permission denied\n\nIf you see a `permission denied` error while trying to flash your microcontroller, and you're using a DAPLink programmer, create a udev rule by doing the following:\n\n1. Clone the pyOCD repository\n\n  ```bash\n  git clone https://github.com/mbedmicro/pyOCD.git\n  ```\n\n2. Change into the `pyOCD/udev` directory\n\n  ```bash\n  cd pyOCD/udev\n  ```\n\n3. [Follow the pyOCD instructions](https://github.com/mbedmicro/pyOCD/tree/master/udev) for creating a udev rule\n\n### arm-none-eabi-gcc version not supported\n\nIf you see the `arm-none-eabi-gcc version not supported` message, install the latest version of the toolchain by doing the following:\n\n1. Uninstall the old toolchain packages\n\n  ```bash\n  sudo apt remove binutils-arm-none-eabi gcc-arm-none-eabi libnewlib-arm-none-eabi\n  ```\n\n2. [Download the latest toolchain from developer.arm.com](https://developer.arm.com/tools-and-software/open-source-software/developer-tools/gnu-toolchain/gnu-rm/downloads)\n\n3. Untar the toolchain in your `home` directory. Replace the `$FILENAME` placeholder with the name of the file that you downloaded\n\n  ```bash\n  tar -xjvf $FILENAME\n  ```\n\n4. Add the toolchain to your path. Replace the `$PATHTOFILE` placeholder with the path to your untarred toolchain\n\n  ```bash\n  echo \"export PATH=$PATH:/home/$PATHTOFILE/bin/\" >> ~/.bashrc\n  ```\n\n5. Close the terminal window, and open a new one\n\nNow, you should have a supported version of the toolchain\n\n### Recipe for target 'flash' failed\n\nWhen you use a J-Link OB clone for the first time, you may see the following message:\n\n```bash\nrecipe for target 'flash' failed\nmake: *** [flash] Error 1\n```\n\nThis error is caused because the first time you use a J-Link OB clone, it upgrades itself and fails to flash. \n\nTry and flash a second time and it should succeed.\n","title":"Troubleshooting | References | IoTプロジェクト"}}
