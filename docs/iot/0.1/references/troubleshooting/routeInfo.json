{"path":"docs/iot/0.1/references/troubleshooting","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# トラブルシューティング\n<!-- # Troubleshooting -->\n\n**以下のガイドに従いながら、一般的な問題のいくつかを見つけることができます。**\n<!-- **You may find some of these common issues while following these guides.** -->\n\n## IPv6 over Bluetooth Low Energy境界ルーターをセットアップする\n<!-- ## Set up a IPv6 over Bluetooth Low Energy border router -->\n\n<!-- ### まだマウントされていないか、マウントポイントがビジーです -->\n### None already mounted or mount point busy\n\nこのレスポンスが表示された場合、無視してください。ファイルシステムはおそらく既にマウントされています。\n<!-- If you see this response, ignore it. The file system is probably already mounted. -->\n\n```bash\nmount: /sys/kernel/debug: none already mounted or mount point busy.\n```\n\n## nRF52マイクロコントローラーをセットアップする\n<!-- ## Set up an nRF52 microcontroller -->\n\n### Permission denied\n\nマイクロコントローラーをフラッシュしようとしているときに`permission denied`エラーが表示され、DAPLinkプログラマーを使用している場合は、以下を実行してudevルールを作成します。\n<!-- If you see a `permission denied` error while trying to flash your microcontroller, and you're using a DAPLink programmer, create a udev rule by doing the following: -->\n\n1. pyOCDリポジトリをクローンします。\n  <!-- 1. Clone the pyOCD repository -->\n\n  ```bash\n  git clone https://github.com/mbedmicro/pyOCD.git\n  ```\n\n2. `pyOCD/udev`ディレクトリに移動します。\n  <!-- 2. Change into the `pyOCD/udev` directory -->\n\n  ```bash\n  cd pyOCD/udev\n  ```\n\n3. udevルールを作成するための[pyOCDの説明](https://github.com/mbedmicro/pyOCD/tree/master/udev)に従います。\n<!-- 3. [Follow the pyOCD instructions](https://github.com/mbedmicro/pyOCD/tree/master/udev) for creating a udev rule -->\n\n### arm-none-eabi-gcc version not supported\n\n`arm-none-eabi-gcc version not supported`というメッセージが表示された場合は、次の手順を実行してツールチェーンの最新バージョンをインストールします。\n<!-- If you see the `arm-none-eabi-gcc version not supported` message, install the latest version of the toolchain by doing the following: -->\n\n1. 古いツールチェーンパッケージをアンインストールします。\n  <!-- 1. Uninstall the old toolchain packages -->\n\n  ```bash\n  sudo apt remove binutils-arm-none-eabi gcc-arm-none-eabi libnewlib-arm-none-eabi\n  ```\n\n2. [developer.arm.comから最新のツールチェーン](https://developer.arm.com/tools-and-software/open-source-software/developer-tools/gnu-toolchain/gnu-rm/downloads)をダウンロードします。\n<!-- 2. [Download the latest toolchain from developer.arm.com](https://developer.arm.com/tools-and-software/open-source-software/developer-tools/gnu-toolchain/gnu-rm/downloads) -->\n\n3. `home`ディレクトリでツールチェーンを展開します。`$FILENAME`プレースホルダーを、ダウンロードしたファイルの名前に置き換えます。\n  <!-- 3. Untar the toolchain in your `home` directory. Replace the `$FILENAME` placeholder with the name of the file that you downloaded -->\n\n  ```bash\n  tar -xjvf $FILENAME\n  ```\n\n4. ツールチェーンをパスに追加します。`$PATHTOFILE`プレースホルダーを、展開したツールチェーンへのパスに置き換えます。\n  <!-- 4. Add the toolchain to your path. Replace the `$PATHTOFILE` placeholder with the path to your untarred toolchain -->\n\n  ```bash\n  echo \"export PATH=$PATH:/home/$PATHTOFILE/bin/\" >> ~/.bashrc\n  ```\n\n5. ターミナルウィンドウを閉じ、再び新しいターミナルウィンドウを開きます。\n<!-- 5. Close the terminal window, and open a new one -->\n\nこれで、サポートされているバージョンのツールチェーンが必要です。\n<!-- Now, you should have a supported version of the toolchain -->\n\n### Recipe for target 'flash' failed\n\nJ-Link OBクローンを初めて使用すると、次のメッセージが表示される場合があります。\n<!-- When you use a J-Link OB clone for the first time, you may see the following message: -->\n\n```bash\nrecipe for target 'flash' failed\nmake: *** [flash] Error 1\n```\n\nこのエラーは、J-Link OBクローンを初めて使用するときに、それ自体がアップグレードされ、フラッシュに失敗するために発生します。\n<!-- This error is caused because the first time you use a J-Link OB clone, it upgrades itself and fails to flash. -->\n\nもう一度試してフラッシュすると、成功するはずです。\n<!-- Try and flash a second time and it should succeed. -->\n","title":"トラブルシューティング | 参考文献 | IoTプロジェクト"}}
