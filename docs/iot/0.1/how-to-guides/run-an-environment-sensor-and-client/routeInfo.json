{"path":"docs/iot/0.1/how-to-guides/run-an-environment-sensor-and-client","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# センサーサーバーにデータをリクエストする\n<!-- # Request data from the sensor servers -->\n\n**このガイドでは、Bluetoothスターネットワークのセンサーにデータをリクエストします**\n<!-- **In this guide, you request data from the sensors in your Bluetooth star network** -->\n\n## 前提条件\n<!-- ## Prerequisites -->\n\nこのガイドを完了するには、次のものが必要です。\n<!-- To complete this guide, you need the following: -->\n\n- [6LoWPANネットワークを構成する](set-up-a-bluetooth-star-network.md)\n<!-- - [Configure a 6LoWPAN network](set-up-a-bluetooth-star-network.md) -->\n-[シングルボードコンピューター（SBC）またはPCにGoツールチェーンをインストールする](https://golang.org/doc/install)\n<!-- - [Install the Go toolchain on a single-board computer (SBC) or a PC](https://golang.org/doc/install) -->\n\n## アーキテクチャ\n<!-- ## Architecture -->\n\n環境センサーは、クライアントからの着信UDPリクエストを待機するサーバーアプリケーションを実行します。\n<!-- The environment sensor runs a server application that waits for incoming UDP requests from a client. -->\n\nUDPはコネクションレス型プロトコルであるため、サーバーはTCPパケットではなくUDPパケットを受け入れます。これはTCPよりも効率的で回復力があります。\n<!-- The server accepts UDP packets instead of TCP ones because UDP is a connection-less protocol, which is more efficient and more resilient than TCP. -->\n\nレスポンスは、リクエストが送信されたポートと同じポートでクライアントに送り返されます。たとえば、クライアント（SBCまたはPC）がポート90（SBCの発信ポート）でUDPパケットをポート51037（センサーの着信ポート）に送信する場合、センサーは（SBCまたはPCの）ポート90にレスポンスを送信します。\n<!-- Responses are sent back to the client on the same port from which the request was sent. For example, if the client (the SBC or the PC) sends a UDP packet on port 90 (outgoing-port at the SBC) to port 51037 (incoming-port on the sensor), the sensor sends the response to port 90 (on the SBC or PC). -->\n\n## センサーサーバーとクライアントを実行する\n<!-- ## Run the sensor server and client -->\n\n1. マイクロコントローラーでサーバーを起動します。\n  <!-- 1. Start the server on your microcontroller -->\n\n    :::info:\n    マイクロコントローラーのシリアルコンソールで次のコマンドを実行する必要があります。\n\n    マイクロコントローラーのシリアルターミナルは、`make flash term`コマンドを実行したターミナルで開かれます。\n    :::\n    <!-- :::info: -->\n    <!-- You need to execute the following command in the serial console of your microcontroller. -->\n\n    <!-- The serial terminal of your microcontroller is opened in the terminal where you executed the `make flash term` command. -->\n    <!-- ::: -->\n\n    ```bash\n    server start\n    ```\n\n2. Clone the client onto your SBC or PC\n\n    ```bash\n    git clone https://github.com/iota-community/BLE-environment-sensor-client.git $GOPATH/src/github.com/citrullin/udp_client\n    ```\n\n3. In the `client.go` file, replace the `\"fe80::2ca:46ff:fed3:1967\"` IPv6 address with the IPv6 address of your sensor server to allow the client to connect to it\n\n    ```c\n    var seedSensorConfig = SensorNode{\n        Config: SensorConfig{\n            Address: net.UDPAddr{\n                IP: net.ParseIP(\"fe80::2ca:46ff:fed3:1967\"), Port: 51037, Zone: interfaceName,\n            },\n        },\n    }\n    ```\n\n    :::info:\n    To find out the IPv6 address of your sensor server, execute the `ifconfig` command in the serial interface of the microcontroller.\n    :::\n    \n4. Run the client application\n\n    ```bash\n    cd $GOPATH/src/github.com/citrullin/udp_client && go run client.go\n    ```\n\n## Next steps\n\nNow, you're ready to [attach this sensor data to the Tangle](../how-to-guides/run-an-environment-to-tangle-app.md).\n","title":"センサーサーバーとクライアントを実行する | ハウツーガイド | IoTプロジェクト"}}
