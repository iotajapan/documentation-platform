{"path":"docs/iot/0.1/how-to-guides/run-an-environment-to-tangle-app","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# センサーデータをタングルに添付する\n<!-- # Attach sensor data to the Tangle -->\n\n**このガイドでは、環境センサーデータを収集し、マスクされた認証済みメッセージング（Masked Authenticated Messaging, MAM）を使用してタングルに添付するアプリケーションを実行します。**\n<!-- **In this guide, you run an application that collects environment sensor data and attaches it to the Tangle using Masked Authenticated Messaging (MAM).** -->\n\n## 前提条件\n<!-- ## Prerequisites -->\n\nこのガイドを完了するには、次のものが必要です。\n<!-- To complete this guide, you need the following: -->\n\n- [Bluetoothスターネットワークのセットアップする](../how-to-guides/set-up-a-bluetooth-star-network.md)\n<!-- - [Set up a Bluetooth star network](../how-to-guides/set-up-a-bluetooth-star-network.md) -->\n- [シングルボードコンピューター（SBC）またはPCにBazelをインストールする](https://docs.bazel.build/versions/master/install.html)\n<!-- - [Install Bazel on your single-board computer (SBC) or PC](https://docs.bazel.build/versions/master/install.html) -->\n\n## アーキテクチャ\n<!-- ## Architecture -->\n\n境界ルーターはセンサーサーバーに情報をリクエストし、その情報をノードに送信して、タングルに添付できるようにします。\n<!-- The border router asks the sensor server for information, then sends that information to a node so that it can attach it to the Tangle. -->\n\n![MAMv1 environment sensor architecture](/assets/docs/iot/0.1/images/messagetoMAM.png)\n\n## アプリケーションを実行する\n<!-- ## Run the application -->\n\n1. マイクロコントローラーでサーバーを起動します。\n  <!-- 1. Start the server on your microcontroller -->\n\n    :::info:\n    マイクロコントローラーのシリアルコンソールで次のコマンドを実行する必要があります。マイクロコントローラーのシリアルコンソールは、`make flash term`を実行したターミナルで開きます。\n    :::\n    <!-- :::info: -->\n    <!-- You need to execute the following command in the serial console of your microcontroller. -->\n    <!-- The serial console of your microcontroller is opened in the terminal where you executed `make flash term`. -->\n    <!-- ::: -->\n\n    ```bash\n    server start\n    ```\n\n2. 環境センサークライアントとMAMライターをSBCにクローンします。\n  <!-- 2. Clone the environment sensor client and MAM writer onto your SBC -->\n\n    ```bash\n    git clone https://github.com/iota-community/env-sensor-mam-writer.git\n    ```\n\n3. `app/server-client.c`ファイルの設定変数を変更します。\n  <!-- 3. Change the configuration variables in the `app/server-client.c` file -->\n\n    ```bash\n    sudo nano env-sensor-mam-writer/app/server-client.c\n    ```\n\n    | **変数** | **説明** | **メモ** |\n    | :------- | :------- | :------- |\n    | `IOTA_SEED` | MAMメッセージに署名するために使用するシード | このデフォルトのシードは、IOTAトークンを含むアドレスを含まない独自のものに変更する必要があります。 |\n    | `CLIENT_ADDRESS` | 16進配列としてのIPv6クライアントアドレス | たとえば、`fe80::f2d5:bfff:fe10:f1b1`アドレスは`{ 0xfe, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf2, 0xd5, 0xbf, 0xff, 0xfe, 0x10, 0xf1, 0xb1 }`になります。アイオワ大学には、[IPv6アドレス指定の仕組みに関する適切な説明](https://its.uiowa.edu/support/article/1209)があります。 |\n    |`SENSOR_ADDRESS`| センサーノードのIPv6アドレス | センサーノードのシェルでコマンド`ifconfig`を実行して、このアドレスを見つけます。 |\n\n    <!-- |**Variable**|**Description**|**Notes**| -->\n    <!-- |:-------|:----------|:----| -->\n    <!-- |`IOTA_SEED`| The seed that you want to use to sign MAM messages|You should change this default seed to your own, which does not contain any addresses that contain IOTA tokens| -->\n    <!-- |`CLIENT_ADDRESS`| The IPv6 client address as a hex array|For example, the`fe80::f2d5:bfff:fe10:f1b1` address becomes `{ 0xfe, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf2, 0xd5, 0xbf, 0xff, 0xfe, 0x10, 0xf1, 0xb1 }`. The university of Iowa has a [good explanation how the IPv6 addressing works](https://its.uiowa.edu/support/article/1209).| -->\n    <!-- |`SENSOR_ADDRESS`|The IPv6 address of the sensor node|Execute the command `ifconfig` in the shell of your sensor node to find this address| -->\n\n4. MAMライターアプリケーションを実行します。\n  <!-- 4. Run the MAM writer application -->\n\n    ```bash\n    cd env-sensor-mam-writer &&  bazel run -c opt //app\n    ```\n\n    アプリケーションはセンサーから環境データをリクエストし、そのデータをMAMチャネルに発行します。\n    <!-- The application requests the environment data from the sensor, then publishes that data to a MAM channel. -->\n\n    手順6で使用できるように、コンソールにログされるアドレスとバンドルハッシュの両方をメモします。\n    <!-- Make a note of both the address and the bundle hash that are logged to the console so that you can use them in step 6. -->\n\n5. 新しいターミナルウィンドウを開き、MAMリーダーアプリケーションをSBCにクローンします。\n  <!-- 5. Open a new terminal window, and clone the MAM reader application onto your SBC -->\n\n    ```bash\n    git clone https://github.com/iota-community/env-sensor-mam-reader.git\n    ```\n\n6. `app/sensor_receiver.c`ファイルの設定変数を変更します。\n  <!-- 6. Change the configuration variables in the `app/sensor_receiver.c` file -->\n\n    ```bash\n    sudo nano env-sensor-mam-reader/app/sensor_receiver.c\n    ```\n\n    | **変数** | **説明** |\n    | :------- | :------- |\n    | `IOTA_ADDRESS` | ライターアプリケーションによって返されたアドレス |\n    | `IOTA_BUNDLE` | ライターアプリケーションによって返されたバンドルハッシュ |\n\n    <!-- |**Variable**|**Description**| -->\n    <!-- |:-------|:----------| -->\n    <!-- |`IOTA_ADDRESS`|The address that was returned by the writer application| -->\n    <!-- |`IOTA_BUNDLE`|The bundle hash that was returned by the writer application| -->\n\n7. MAMリーダーアプリケーションを実行します。\n  <!-- 7. Run the MAM reader application -->\n\n    ```bash\n    cd env-sensor-mam-reader && bazel run -c opt //app\n    ```\n\nアプリケーションは、タングルのMAMチャネルから読み取った温度データを表示します。\n<!-- The application displays the temperature data it read from the MAM channel on the Tangle. -->\n","title":"センサーデーターをタングルに添付する | ハウツーガイド | IoTプロジェクト"}}
