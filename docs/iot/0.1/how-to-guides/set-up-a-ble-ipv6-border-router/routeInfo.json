{"path":"docs/iot/0.1/how-to-guides/set-up-a-ble-ipv6-border-router","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# 境界ルーターをセットアップする\n<!-- # Set up a border router -->\n\n**スター型ネットワークのセンサーサーバーがインターネットにアクセスできるようにするには、データを渡すことができる境界ルーターが必要です。このガイドでは、Linux デバイスでの境界ルーターのセットアップを使用します。**\n<!-- **To allow the sensor servers in a star network to access the Internet, you need a border router that can pass on their data. In this guide, you use set up a border router on a Linux device.** -->\n\n## 前提条件\n<!-- ## Prerequisites -->\n\nこのガイドを完了するには、次のものが必要です。\n<!-- To complete this guide, you need the following: -->\n\n- Raspberry Pi などのシングルボードコンピューターまたは境界ルーターとして使用する Linux ベースの PC\n<!-- - Either a single-board computer such as a Raspberry Pi or a Linux-based PC to use as the border router -->\n- Ubuntu などの Linux ディストリビューション\n<!-- - A Linux distribution such as Ubuntu -->\n- Bluetooth <= 4.0（USBドングルまたは統合された）\n<!-- - Bluetooth <= 4.0 (USB dongle or integrated) -->\n\n## 手順1. 互換性のある Linux カーネルをインストールする\n<!-- ## Step 1. Install a compatible Linux kernel -->\n\n[RIOT OSのバグ](https://github.com/RIOT-OS/RIOT/issues/11147)により、古いルーター（最大バージョン 4.12）を使用して境界ルーターをセットアップする必要があります。\n<!-- Due to [a bug in RIOT OS](https://github.com/RIOT-OS/RIOT/issues/11147), you need to use an older Linux kernel (maximum version 4.12) to set up a border router. -->\n\n1. デバイスのLinuxカーネルのバージョンを確認します。\n  <!-- 1. Check which version of the Linux kernel your device has -->\n\n    ```bash\n    uname -a\n    ```\n\n    4.12より大きいバージョン番号が表示される場合は、次の2に進みます。それ以外の場合は、これらの手順の残りをスキップして6LoWPAN依存関係をインストールします。\n    <!-- If you see a version number that's greater than 4.12, continue to step 2. Otherwise, skip the rest of these steps and install the 6LoWPAN dependencies. -->\n\n2. アーキテクチャを選択し、[Ubuntu Linux mainline kernel builds](https://kernel.ubuntu.com/~kernel-ppa/mainline/v4.11.12/) から汎用カーネルイメージをダウンロードします。\n<!-- 2. Select your architecture and download the generic kernel image from the [Ubuntu Linux mainline kernel builds](https://kernel.ubuntu.com/~kernel-ppa/mainline/v4.11.12/) -->\n\n3. カーネルをインストールします。\n  <!-- 3. Install the kernel -->\n\n    ```bash\n    sudo dpkg -i linux-image*.deb\n    ```\n\n4. カーネルを選択するオプションが表示されるまで、`SHIFT`キーを押しながらシステムを再起動します。\n<!-- 4. Restart your system while holding the `SHIFT` key until you see the option to select a kernel -->\n\n5. カーネルバージョン 4.11.12 を選択します。\n<!-- 5. Select the kernel version 4.11.12 -->\n\n## 手順2. 6LoWPAN依存関係をインストールする\n<!-- ## Step 2. Install the 6LoWPAN dependencies -->\n\n:::info:\nセッションごとに以下の手順を実行する必要があります。そのため、たとえば再起動後にセッションを閉じると、これらの依存関係を再インストールする必要があります。\n:::\n<!-- :::info: -->\n<!-- You need to do these steps for every session. So, if you close your session, for example after a reboot, you have to reinstall these dependencies. -->\n<!-- ::: -->\n\n1. bluez をインストールします。\n  <!-- 1. Install bluez -->\n\n    ```bash\n    sudo apt-get install -y bluez\n    ```\n\n2. ルートユーザーでログインします。\n  <!-- 2. Log in as the root user -->\n\n    ```bash\n    sudo su\n    ```\n\n3. `debugfs`ファイルをマウントします。\n  <!-- 3. Mount the `debugfs` file system -->\n\n    ```bash\n    mount -t debugfs none /sys/kernel/debug\n    ```\n\n4. Bluetooth 6LoWPAN Linuxモジュールをロードします。\n  <!-- 4. Load the Bluetooth 6LoWPAN Linux module -->\n\n    ```bash\n    modprobe bluetooth_6lowpan\n    ```\n\n5. 6LoWPANモジュールを有効にします。\n  <!-- 5. Enable the 6LoWPAN module -->\n\n    ```bash\n    echo 1 > /sys/kernel/debug/bluetooth/6lowpan_enable\n    ```\n\n6. 利用可能なBluetoothデバイスを見つけます。\n  <!-- 6. Find any available Bluetooth devices -->\n\n    ```bash\n    hciconfig\n    ```\n\n    次のようなものが表示されるはずです。\n    <!-- You should see something like the following: -->\n\n    ```bash\n    hci0:   Type: Primary  Bus: UART\n        BD Address: B8:27:EB:57:16:51  ACL MTU: 1021:8  SCO MTU: 64:1\n        UP RUNNING\n        RX bytes:1528 acl:0 sco:0 events:92 errors:0\n        TX bytes:2558 acl:0 sco:0 commands:92 errors:0\n    ```\n\n7. デバイスへの接続をテストするには、デバイスをリセットします。`YOUR_DEVICE_ID`プレースホルダーをデバイスのIDに置き換えます。\n  <!-- 7. To test your connection to a device, reset one. Replace the `YOUR_DEVICE_ID` placeholder with the ID of your device. -->\n\n    ```bash\n    hciconfig YOUR_DEVICE_ID reset\n    ```\n\n    例：\n    <!-- For example: -->\n\n    ```bash\n    hciconfig hci0 reset\n    ```\n\nBluetoothデバイスがリセットされます。\n<!-- The Bluetooth device should reset. -->\n\n## 次のステップ\n<!-- ## Next steps -->\n\nセンサーサーバーをまだ設定していない場合は、[センサーサーバーをセットアップします](../how-to-guides/set-up-ipv6-ble-host-example.md)。\n<!-- If you haven't already set up a sensor server, [do it now](../how-to-guides/set-up-ipv6-ble-host-example.md). -->\n\nセンサーサーバーを既にセットアップしている場合は、完全なBluetoothスターネットワークがあり、サンプルアプリケーションのいずれかを試す準備ができています。\n<!-- If you've already set up a sensor server, then you have a complete Bluetooth star network, and you're ready to try one of our sample applications: -->\n\n* [センサーサーバーにデータをリクエストする](../how-to-guides/run-an-environment-sensor-and-client.md)\n<!-- * [Request data from the sensor server](../how-to-guides/run-an-environment-sensor-and-client.md) -->\n* [センサーデーターをタングルに添付する](../how-to-guides/run-an-environment-to-tangle-app.md)\n<!-- * [Attach sensor data to the Tangle](../how-to-guides/run-an-environment-to-tangle-app.md) -->\n","title":"境界ルーターをセットアップする | ハウツーガイド | IoTプロジェクト"}}
