{"path":"docs/contributing/0.1/documentation/style-guide","templateID":1,"sharedPropsHashes":{},"localProps":{"markdown":"# スタイルガイド\n<!-- # Style guide -->\n\n記事を作成または編集する場合は，スタイルガイドに従って次のことを行ってください．\n<!-- If you are creating or editing an article, please follow our style guide to help us do the following: -->\n\n- 一貫した声のトーンで作成し，維持する．\n<!-- - Create and maintain a consistent tone of voice -->\n- 標準形式のドキュメントを提供する．\n<!-- - Offer documentation in a standard format -->\n- ネイティブでない英語の読者向けに読みやすいようにドキュメントを作成する．\n<!-- - Make our documentation straightforward to read for non-native English readers -->\n- ドキュメントが読者を教育していることを確認する．\n<!-- - Make sure that our documentation educates our readers -->\n\nこのガイドでは説明していない記述について質問がある場合は，[Googleスタイルガイド](https://developers.google.com/style/)を使用してください．\n<!-- If you have a question about writing that we don't cover in this guide, use the [Google style guide](https://developers.google.com/style/). -->\n\n## マークダウン\n<!-- ## Markdown -->\n\nドキュメントにはマークダウンの拡張バージョンを使用しています．以前にマークダウンを使用したことがない場合は，これらの[ヒント](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet)を参照してください．\n<!-- We use an enhanced version of markdown for our documentation. Please refer to these [tips](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet) if you haven't used markdown before. -->\n\n### タブ付きコントロール\n<!-- ### Tabbed controls -->\n\nタブ付きコントロールは，さまざまなユーザー向けのコンテンツを作成したり，複数のコードサンプルなどのユースケースを作成するのに役立ちます．\n<!-- Tabbed controls are useful for creating content for different users or use cases such as multiple code samples. -->\n\nタブ付きコードサンプルを作成するには，次の構文を使用します．\n<!-- To create tabbed code samples, use the following syntax: -->\n\n```markdown\n--------------------\n### タブページ1\nここは，タブページ1のコンテンツです．\n---\n### タブページ2\nここは，タブページ2のコンテンツです．\n--------------------\n```\n\n:::info:\nh3見出しはタブラベルです．\n:::\n<!-- :::info: -->\n<!-- The h3 heading is the tab label. -->\n<!-- ::: -->\n\n![Tabbed Control](/assets/docs/contributing/0.1/documentation/images/tabbed-control.png)\n\n### カード\n<!-- ### Cards -->\n\nカードは，複数のタイプまたはカテゴリをリストする必要があるプロジェクトのランディングページに役立ちます．\n<!-- Cards are useful for project landing pages, where you need to list more than one type or category. -->\n\nカードを作成するには，次の構文を使用します．\n<!-- To create a card, use the following syntax: -->\n\n```markdown\n-------------------------\nImage\n## ファイルへのリンクを含むタイトル\nデータサイロにより，異なるデータポイント間でデータを売買することが難しくなります．この課題を克服するために，データマーケットプレイスはIOTA MAMチャネルを使用してデータサイロを開き，ユーザーがデータと引き換えにIOTAトークンでのマイクロペイメントをデータ所有者に行えるようにします．\n-------------------------\n```\n\n![Cards](/assets/docs/contributing/0.1/documentation/images/card.png)\n\n### 色付きの見出し\n<!-- ### Colored headings -->\n\n色付きの見出しは，異なる見出しをより明確に区別するのに役立ちます．\n<!-- Colored headings are useful for showing a clearer distinction between to different headings. -->\n\n色付きの見出しを作成するには，次の構文を使用します．\n<!-- To create a colored heading, use the following syntax: -->\n\n```markdown\n### **公式サポート** ###\n\n### __コミュニティサポート__ ###\n```\n\n![Heading Label](/assets/docs/contributing/0.1/documentation/images/heading-label-primary.png)\n\n![Heading Label](/assets/docs/contributing/0.1/documentation/images/heading-label-secondary.png)\n\n### 色付きのバレット\n<!-- ### Colored bullets -->\n\n色付きの箇条書きは，色付きの見出しの下にコンテンツをリストするのに役立ちます．\n<!-- Colored bullets are useful for listing content under colored headings. -->\n\n色付きの箇条書きを作成するには，次の構文を使用します．\n<!-- To create a colored bullet, use the following syntax: -->\n\n```markdown\n---------------\n#### **JavaScriptライブラリ** ####\nLink to file\n\nExcepteur sint occaecat cupidatat non proident, sunt in culpa qui.\n---\n#### __Goライブラリ__ ####\nExcepteur sint occaecat cupidatat non proident, sunt in culpa qui.\n---\n#### Pythonライブラリ ####\nExcepteur sint occaecat cupidatat non proident, sunt in culpa qui.\n---------------\n```\n\n![Project Topics](/assets/docs/contributing/0.1/documentation/images/project-topics.png)\n\n### 絵文字\n<!-- ### Emoji -->\n\nコンテンツで絵文字を使用すると，読者を引き付けるのに役立ちます．\n<!-- Using an emoji in your content can help to engage the reader. -->\n\n:::warning:\n特定の絵文字には，異なる文化で異なる意味があります．たとえば，ブラジルではOKシンボル:ok_hand:は失礼であると見なされ，中東ではサムズアップシンボル:+1:も同様です．\n:::\n<!-- :::warning: -->\n<!-- Certain emoji have different meanings in different cultures. For example, in Brazil the OK symbol :ok_hand: is considered rude, and in the Middle East, so is the thumbs-up symbol :+1:. -->\n<!-- ::: -->\n\n絵文字を作成するには，次の構文を使用します．\n<!-- To create an emoji, use the following syntax: -->\n\n```markdown\n:smile:\n:laughing:\n```\n\n![Emojis](/assets/docs/contributing/0.1/documentation/images/emojis.png)\n\n使用可能な絵文字のリストについては，このJSONファイルを参照してください：[https://github.com/muan/emojilib/blob/master/emojis.json](https://github.com/muan/emojilib/blob/master/emojis.json)\n<!-- For a list of available emoji, see this JSON file: [https://github.com/muan/emojilib/blob/master/emojis.json](https://github.com/muan/emojilib/blob/master/emojis.json) -->\n\n### Googleマップ\n<!-- ### Google maps -->\n\nGoogleマップは，`¬¬¬`フェンシングで囲むことにより，コンテンツに埋め込むことができます．次に，タイプを`[map]`として指定し，次のようにオブジェクトのJSON構成を提供できます．\n<!-- A Google map can be embedded in your content by surrounding it with `¬¬¬` fencing. You can then specify the type as `[map]` and provide the JSON configuration for the object as follows: -->\n\n```markdown\n¬¬¬\n[map]\n{\n    \"zoom\":14,\n    \"center\": {\n        \"lat\": 52.5294498,\n        \"lng\": 13.412903\n    },\n    \"markers\": [\n        {\n            \"name\": \"IOTA Foundation\",\n            \"lat\": 52.5294498,\n            \"lng\": 13.412903\n        }\n    ]\n}\n¬¬¬\n```\n\n![Google Maps for IOTA](/assets/docs/contributing/0.1/documentation/images/maps.png)\n\n### データフィード\n<!-- ### Data feeds -->\n\nフィードを`¬¬¬`フェンシングで囲むことにより，コンテンツに埋め込むことができます．次に，タイプを `[feed]`として指定し，次のようにオブジェクトのJSON構成を提供できます．\n<!-- A feed can be embedded in your content by surrounding it with `¬¬¬` fencing. You can then specify the type as `[feed]` and provide the JSON configuration for the object as follows: -->\n\n```markdown\n¬¬¬\n[feed]\n{\n    \"displayType\": \"event\",\n    \"context\": \"training\"\n}\n¬¬¬\n```\n\n`displayType`フィールドはコンテンツがページ上でどのようにレンダリングされるかを指定し，`context`フィールドはドキュメントAPIを使用してデータを取得する場所を決定するために使用されます．例：`https://docs-api.iota.org/feed/training`．フィードリストはページングをサポートし，必要に応じて表示します．ページの目次は，レンダリングされたアイテムのh2ヘッダーから動的に生成されます．\n<!-- The `displayType` field specifies how the content will be rendered on the page and the `context` field is used to determine where the data is retrieved from using the documentation api e.g. `https://docs-api.iota.org/feed/training`. The feeds list supports paging and will show it when necessary. The table of contents for the page is dynamically generated from any h2 headers in the rendered items. -->\n\n![Event Feed](/assets/docs/contributing/0.1/documentation/images/feed.png)\n\n### メッセージボックス\n<!-- ### Message boxes -->\n\nメッセージボックスは，特定の情報に注意を引くのに役立ちます．\n<!-- Message boxes are useful for bringing attention to certain information. -->\n\nメッセージボックスを作成するには，次の構文を使用します．\n<!-- To create a message box, use the following syntax: -->\n\n```markdown\n:::success:A Success\nThis is the content,\non multiple lines :tada:\n:::\n\n:::warning:Just A Warning Title:::\n\n:::info:\nSome multiline content only.\nThis is line 2.\n:::\n\n:::danger:Danger Danger\nWill Robinson :bomb:\n:::\n```\n\n![Message Boxes](/assets/docs/contributing/0.1/documentation/images/message-boxes.png)\n\n:::info:\n情報に注意を引くには，`info`ボックスを使用します．たとえば，読者にヒントを与えることができます．`info`ボックスがないと，ユーザーは貴重な時間を失い，何かが機能しない理由を理解しようとするときにイライラすることがあります．\n:::\n<!-- :::info: -->\n<!-- Use an `info` box to bring attention to informations. For example, you may want to give the reader a hint. Without an `info` box, a user may lose precious time and become frustrated while trying to understand why something is not working. -->\n<!-- ::: -->\n\n:::success:\nタスクの最後に`success`ボックスを使用して，読者に完了したことを知らせます．\n:::\n<!-- :::success: -->\n<!-- Use a `success` box at the end of a task to let the reader know that they've completed it. -->\n<!-- ::: -->\n\n:::warning:\n読者に重要な情報を知らせるには，`info`ボックスよりも深刻な情報である`warning`ボックスを使用します．\n:::\n<!-- :::warning: -->\n<!-- Use a `warning` box more serious information than an `info` box to let the reader know important information. -->\n<!-- ::: -->\n\n:::danger:\n`danger`ボックスを使用して，アクションが資金の損失またはシステム障害につながる可能性があることを読者に警告します．\n:::\n<!-- :::danger: -->\n<!-- Use a `danger` box to warn the reader that an action may lead to lost funds or system failure. -->\n<!-- ::: -->\n\n## ライティングツール\n<!-- ## Writing tools -->\n\n[Visual Studio Code](https://code.visualstudio.com/)と[markdown Lint extension](https://github.com/DavidAnson/vscode-markdownlint)などのマークダウンファイルをサポートするコードエディターを使用することをお勧めします．\n<!-- We recommend using a code editor that supports markdown files, for example [Visual Studio Code](https://code.visualstudio.com/) with the [markdown Lint extension](https://github.com/DavidAnson/vscode-markdownlint). -->\n\n## 一般的な規則\n<!-- ## General rules -->\n\n以下の一般的な規則により，情報の理解と翻訳が容易になります．\n<!-- These general rules make information easier to understand and translate. -->\n\n| **規則** | **例** |\n| :------- | :----- |\n| 短い言葉がするような長い言葉を使わない | 「~~活用~~ **使用**短い単語」 |\n| 単語を削除できる場合は，常に削除します | 「このメソッドは，~~正確に~~前のものと同じです」 |\n| 可能な場合は常にアクティブな音声を使用します | 「~~アクティブな音声は可能な限り常に使用する必要があります~~．」 「可能な場合は常にアクティブな音声を使用する必要があります」 |\n| 日常の英語の同等物を考えることができる場合は，外国語のフレーズ，科学用語，または専門用語を使用しないでください． | ~~ E.g ~~ たとえば |\n| 1ワードの修飾子'only'と'not'を，変更対象の直前に配置します | 「セキュリティ上の理由から，IOTAアドレスは~~only~~は**only**から一度だけ撤回する必要があります」 |\n| 複数の名詞を形成するために（s）を使用しない | 「削除したい~~item(s)~~ **items ** を選択してください」 |\n\n<!-- | **Rule** | **Example** | -->\n<!-- | :----| :-------| -->\n<!-- | Never use a long word where a short one will do| '~~Utilize~~ **Use** short words'| -->\n<!-- |If it's possible to remove a word, always remove it | 'This method is ~~exactly~~ the same as the previous one' -->\n<!-- | Always use the active voice where possible | '~~The active voice must always be used where possible~~.' 'You must always use the active voice where possible' -->\n<!-- | Never use a foreign phrase, a scientific word or a jargon word if you can think of an everyday English equivalent | ~~E.g~~ For example | -->\n<!-- | Place the one-word modifiers 'only' and 'not' immediately in front of whatever they're modifying| 'For security reasons, IOTA addresses should ~~only~~ be withdrawn from **only** once'| -->\n<!-- |Don't use (s) to form plural nouns| 'Select the ~~item(s)~~ **items** that you want to remove'| -->\n\n調査によれば，非常に技術的な聴衆に対しても上記は当てはまることがわかります．例については，[GOV.UKスタイルガイド](https://www.gov.uk/guidance/content-design/writing-for-gov-uk)を参照してください．\n<!-- Research shows that the above holds true even for very technical audience. See the [GOV.UK style guide](https://www.gov.uk/guidance/content-design/writing-for-gov-uk) for examples. -->\n\n## イギリス英語かアメリカ英語か？\n<!-- ## UK English or US English? -->\n\n私たちは常にアメリカ英語で書きます．\n<!-- We always write in US English. -->\n\n## 句読点\n<!-- ## Punctuation -->\n\n- 常にコロンの後は大文字を使用します．\n- 常にオックスフォードコンマを使用します（「The Mainnet, Devnet, およびSpamnet」など，リストの前およびリスト内のコンマ）．\n- 単一の文のリストの最後にピリオドを使用しないでください．リスト項目が複数の文で構成されている場合にのみピリオドを使用します\n<!-- - Always use a capital letter after colons -->\n<!-- - Always use an oxford comma (comma before and in a list, for example 'The Mainnet, Devnet, and Spamnet') -->\n<!-- - Don't use periods at the end of single sentence lists. Use periods only when list items consists of more than one sentence -->\n\n## 記事のタイトル\n<!-- ## Article titles -->\n\n| **規則** | **例** |\n| :------- | :----- |\n| タイトルには大文字と小文字を使用します．タイトルケースを使用しないでください． | 'The Distributed Ledger'ではなく'The distributed ledger' |\n| 'Concepts'セクションの記事タイトルは常に名詞でなければなりません | 'What is tip selection?'または'Understanding tip selection'ではなく'Tip selection' |\n| 'How-to guides'セクションの記事タイトルは，常に不定詞で始まる必要があります | 'Running the IRI'ではなく'Run the IRI'|\n| 'References'セクションの記事タイトルは常に複数名詞でなければなりません | 'IRI configuration'または'Configuring the IRI'ではなく'IRI configuration options' |\n\n<!-- | **Rule** | **Example** | -->\n<!-- | :----| :-------| -->\n<!-- |Use sentence case for titles. Do not use title case.|'The distributed ledger', not 'The Distributed Ledger'| -->\n<!-- |Article titles in the 'Concepts' sections should always be nouns|'Tip selection' not 'What is tip selection?' or 'Understanding tip selection'| -->\n<!-- |Article titles in the 'How-to guides' section should always start with an infinitive| 'Run the IRI' not 'Running the IRI'| -->\n<!-- |Article titles in the 'References' section should always be plural nouns| 'IRI configuration options' not 'IRI configuration' or 'Configuring the IRI'| -->\n\n## 第一段落\n<!-- ## First paragraph -->\n\n常に記事の最初の段落を盛り上げます．この段落では，記事の主な目的またはポイントをできるだけ少ない言葉で説明する必要があります．\n<!-- Always embolden the first paragraph of an article. This paragraph should explain the main purpose or point of the article in as few words as possible. -->\n\n次の質問に必ず回答してください．\n<!-- Make sure you answer the following questions: -->\n- 記事の内容はなんですか？\n<!-- - What is the article about? -->\n- なぜユーザーは記事の情報を気にするか，必要とするのですか？\n<!-- - Why do users care about or need the information in the article? -->\n\n## ハウツーガイド\n<!-- ## How-to guides -->\n\nハウツーガイドは，ユーザーがタスクを達成するのに役立つ記事です．\n<!-- A how-to guide is an article that helps users achieve a task. -->\n\nハウツーガイドを作成するときは，次の一般的なガイドラインに従ってください．\n<!-- When you write how-to guides, follow these general guidelines: -->\n\n- [記事ごとに1つのタスクを書く](#write-one-task-per-article)．\n<!-- - [Write one task per article](#write-one-task-per-article) -->\n- [長いハウツーガイドを整理するためのサブタスクを作成する](#create-subtasks-to-organize-long-how-to-guides)．\n<!-- - [Create subtasks to organize long how-to guides](#create-subtasks-to-organize-long-how-to-guides) -->\n\n各ハウツーガイドでは，シナリオを実行する方法だけでなく，ユーザーがシナリオを実行する理由も説明します．何を達成するか？なぜ必要なのか？\n<!-- Each how-to guide should explain not only **how** to perform the scenario, but also **why** a user would want to perform the scenario. What does it achieve? Why is it needed? -->\n\n**what **の形での簡単な紹介は，シナリオです．シナリオを他のシナリオのコンテキストに配置する **when **セクション．たとえば，**IRI の実行**のシナリオでは，最初に **IRI をダウンロードしてインストールする**ということに言及する必要があります．\n<!-- A brief introduction in the form of a **what** is the scenario about. A **when** section to put the scenario in context with other scenarios. For example, a scenario on **Running IRI** should mention that you need to **Download and install IRI** first. -->\n\nハウツーガイドの一般的なフローは次のとおりです．\n<!-- The general flow of a how-to guide would be: -->\n\n1. 簡単な説明（タスクの概要，タスクの利点と重要性，簡単な概念情報，および必要に応じてより長い概念情報へのリンク）\n<!-- 1. A short description (overview of the task, benefits and importance of the task, brief conceptual information, and links to longer conceptual information, if necessary) -->\n2. 前提条件（ユーザーがタスクを完了する前に持っている，またはしなければならないこと）\n<!-- 3. Prerequisites (things that the user must have or do before they can complete the task) -->\n3. 手順（タスクの実行方法）\n<!-- 4. Steps (how to do the task) -->\n4. ユーザーが達成したことの概要\n<!-- 5. Summary of what the user has accomplished -->\n\n<a name=\"write-one-task-per-article\"></a>\n### 記事ごとに1つのタスクを書く\n<!-- ### Write one task per article -->\n\nハウツーガイドに1つのタスクが含まれていると，管理，整理，再利用が簡単になり，ユーザーが必要なときに特定のタスクを見つけやすくなります．\n<!-- When a how-to guide contains one task, it's easier to manage, organize, and reuse to help users find specific tasks when they need them. -->\n\nたとえば，ソフトウェアのインストールとアンインストールのタスクを1つの記事にまとめないでください．通常，ユーザーはこれらのタスクを同時に必要としません．\n<!-- For example, don't combine the tasks for installing and uninstalling software in a single article. Users typically won't need these tasks at the same time. -->\n\n<a name=\"create-subtasks-to-organize-long-how-to-guides\"></a>\n### 長いハウツーガイドを整理するためのサブタスクを作成する\n<!-- ### Create subtasks to organize long how-to guides -->\n\n10ステップを超えるタスクは，特に複雑でサブステップが含まれている場合は，従うのが難しい場合があります．\n<!-- Tasks that are more than 10 steps can be difficult to follow, especially if they're complicated and include substeps. -->\n\n10を超えるステップを含むタスクの作成を開始する場合は，見出しを使用してそれらをサブタスクに分けます．\n<!-- If you start writing a task that contains more than 10 steps, separate them into subtasks by using headings. -->\n\n## コンセプト記事\n<!-- ## Concept articles -->\n\nコンセプト記事は，次のいずれかを行うために作成できます．\n<!-- Concept articles can be written to do any of the following: -->\n\n- システム，製品，またはソリューションの説明\n<!-- - Describe a system, product, or solution -->\n- ツールとテクノロジーの紹介\n<!-- - Introduce tools and technology -->\n- 機能，コンポーネント，特性，制限，機能を説明する\n<!-- - Explain features, components, characteristics, restrictions, and capabilities -->\n- 用語集で見つけるよりも詳細に用語を定義する\n<!-- - Define terms in more details than you would find in a glossary -->\n- メリットを説明するか，ユーザーがオプションを選択できるようにする\n<!-- - Describe benefits or help users to make choices between options -->\n\nタスクとユーザーの目標をサポートするためのコンセプト記事を書く必要があります．\n<!-- You should write concept articles to support tasks and user goals. -->\n\nコンセプト記事には，タスク情報または参照情報を含めることはできません．\n<!-- Concept articles must not include task information or reference information. -->\n\n## コードのフォーマット\n<!-- ## Code formatting -->\n\nコード例とスニペットを記事に追加するときは，適切にフォーマットし，適切なコードの強調表示のために言語識別子を追加してください．詳細については，[コードブロックの作成と強調表示](https://help.github.com/articles/creating-and-highlighting-code-blocks/)を参照してください．\n<!-- When adding code examples and snippets into an article, make sure you format it accordingly and add language identifiers for correct code highlighting. See [Creating and highlighting code blocks](https://help.github.com/articles/creating-and-highlighting-code-blocks/) for more information. -->\n\n### バッシュ\n<!-- ### Bash -->\n\nバッシュコードブロックにはパスを含めないでください．\n<!-- Bash code blocks shall not contain the path. -->\n\n以下の代わりに：\n<!-- Instead of: -->\n\n```bash\nuser@hostname:~/tmp$ mkdir whatever\n```\n\n以下のようにスタンドアロンステートメントを使用します．\n<!-- Use a standalone statement: -->\n\n```bash\nmkdir whatever\n```\n","title":"Documentation style guide | Documentation | 貢献"}}
